Record Method Name,Method name with API used,Uppered method name,Data Access Class,Lowered data access class,Operation,BySuffix,Result Record/List,Input Record/List,Logged method name,result Type,.Net result Type,inputParam,inputParam declaration,.Net inputParam declaration,InnerDataAccessPackClassName,API Pack,Arguments class name,API processor,API proc start,Arguments create ,Supplementary paramerer1,Call parameters,.Net Call parameters,,Webservice interface methods,,,,Output,InputParam,PreAction,Action Class declarations,,Execution,Test calls,,"class _courseMembershipTestAction : TestAction<_courseMembershipTestArgs, bbws.courseMembershipDetails>, ITestAction { }        class _courseMembershipTestArgs : TestArgs<bbws.courseMembershipDetails> {
        public override bbws.bbWsDataLogRecord[] getDataLogArray() {
            return wsResultRecord.bbWsDataLog;
        }
",,,,AutoTestClient BbWsWebReference translation of lower-case methods name to upper one,BbAdded .Net proxy methods
"LOWER(LEFT(C3; 1)) & MID(C3; 2; 100) &B3 & E3 & D3
LOWER(A3) & B3 & ""Record"" & C3
LOWER(A3) & B3 & ""List"" & C3",,,,,,,,,"""=LOWER(LEFT(F3, 1)) & MID(F3, 2, 100) & H3 &G3A3""",,,,,,,,,,,,,,,,,,,,,,,,,,,,"class _courseMembershipTestCase : TestCase<bbws.courseMembershipDetails>, ITestAction { }        class _courseMembershipTestArgs : TestArgs<bbws.courseMembershipDetails> {
        public override bbws.bbWsDataLogRecord[] getDataLogArray() {
            return wsResultRecord.bbWsDataLog;
        }
",,,"        public void init(TestArgsStruct testArgs) {
            base.init(testArgs);
",,"http://www.mrexcel.com/forum/showthread.php?t=369471

has 2 functions for splitting of CamelCase "
courseMembershipLoadRecordById,courseMembershipLoadRecordById (bb_platform),CourseMembershipLoadRecordById,CourseMembership,courseMembership,Load,ById,Record,Record,courseMembershipLoadRecordById,CourseMembershipDetails,courseMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord",courseMembershipDetails inputRecord,LoadRecordById,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public CourseMembershipDetails courseMembershipLoadRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipLoadRecordById()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _courseMembershipLoadRecordById : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.courseMembershipLoadRecordById(args.param, args.wsInputRecord);
        }
    }
",,testArgs.courseMembership.courseMembershipLoadRecordById.execute();,public _courseMembershipLoadRecordById courseMembershipLoadRecordById;,,,"courseMembershipLoadRecordById = new _courseMembershipLoadRecordById();
courseMembershipLoadRecordById.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails courseMembershipLoadRecordById(bbWsParams @params, courseMembershipDetails inputRecord)    {
        return base.CourseMembershipLoadRecordById(@params, inputRecord);
    }","
    //CourseMembership Load Record ById
    public courseMembershipDetails CourseMembershipLoadRecordById(bbWsParams @params, courseMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.courseMembershipLoadRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipLoadRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipLoadListById,courseMembershipLoadListById (bb_platform),CourseMembershipLoadListById,CourseMembership,courseMembership,Load,ById,List,List,courseMembershipLoadListById,List<CourseMembershipDetails>,courseMembershipDetails[],inputList,"@WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList",courseMembershipDetails[] inputList,LoadListById,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputList,
                    CourseMembershipAccessPack.class.getName(), ""LoadListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<CourseMembershipDetails> courseMembershipLoadListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipLoadListById()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputList,
                    CourseMembershipAccessPack.class.getName(), ""LoadListById"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputList.ToArray(),,"    class _courseMembershipLoadListById : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.courseMembershipLoadListById(args.param, args.wsInputList.ToArray());
        }
    }
",,testArgs.courseMembership.courseMembershipLoadListById.execute();,public _courseMembershipLoadListById courseMembershipLoadListById;,,,"courseMembershipLoadListById = new _courseMembershipLoadListById();
courseMembershipLoadListById.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails[] courseMembershipLoadListById(bbWsParams @params, courseMembershipDetails[] inputList)    {
        return base.CourseMembershipLoadListById(@params, inputList);
    }","
    //CourseMembership Load List ById
    public courseMembershipDetails[] CourseMembershipLoadListById(bbWsParams @params, courseMembershipDetails[] inputList)
    {
        try
        {
           return bbAdded.courseMembershipLoadListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipLoadListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipLoadRecordByCourseAndUserId,courseMembershipLoadRecordByCourseAndUserId (bb_platform),CourseMembershipLoadRecordByCourseAndUserId,CourseMembership,courseMembership,Load,ByCourseAndUserId,Record,Record,courseMembershipLoadRecordByCourseAndUserId,CourseMembershipDetails,courseMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord",courseMembershipDetails inputRecord,LoadRecordByCourseAndUserId,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadRecordByCourseAndUserId"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public CourseMembershipDetails courseMembershipLoadRecordByCourseAndUserId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipLoadRecordByCourseAndUserId()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadRecordByCourseAndUserId"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _courseMembershipLoadRecordByCourseAndUserId : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.courseMembershipLoadRecordByCourseAndUserId(args.param, args.wsInputRecord);
        }
    }
",,testArgs.courseMembership.courseMembershipLoadRecordByCourseAndUserId.execute();,public _courseMembershipLoadRecordByCourseAndUserId courseMembershipLoadRecordByCourseAndUserId;,,,"courseMembershipLoadRecordByCourseAndUserId = new _courseMembershipLoadRecordByCourseAndUserId();
courseMembershipLoadRecordByCourseAndUserId.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails courseMembershipLoadRecordByCourseAndUserId(bbWsParams @params, courseMembershipDetails inputRecord)    {
        return base.CourseMembershipLoadRecordByCourseAndUserId(@params, inputRecord);
    }","
    //CourseMembership Load Record ByCourseAndUserId
    public courseMembershipDetails CourseMembershipLoadRecordByCourseAndUserId(bbWsParams @params, courseMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.courseMembershipLoadRecordByCourseAndUserId(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipLoadRecordByCourseAndUserId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipLoadListByUserId,courseMembershipLoadListByUserId (bb_platform),CourseMembershipLoadListByUserId,CourseMembership,courseMembership,Load,ByUserId,List,Record,courseMembershipLoadListByUserId,List<CourseMembershipDetails>,courseMembershipDetails[],inputRecord,"@WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord",courseMembershipDetails inputRecord,LoadListByUserId,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadListByUserId"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<CourseMembershipDetails> courseMembershipLoadListByUserId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipLoadListByUserId()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadListByUserId"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputRecord,,"    class _courseMembershipLoadListByUserId : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.courseMembershipLoadListByUserId(args.param, args.wsInputRecord);
        }
    }
",,testArgs.courseMembership.courseMembershipLoadListByUserId.execute();,public _courseMembershipLoadListByUserId courseMembershipLoadListByUserId;,,,"courseMembershipLoadListByUserId = new _courseMembershipLoadListByUserId();
courseMembershipLoadListByUserId.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails[] courseMembershipLoadListByUserId(bbWsParams @params, courseMembershipDetails inputRecord)    {
        return base.CourseMembershipLoadListByUserId(@params, inputRecord);
    }","
    //CourseMembership Load List ByUserId
    public courseMembershipDetails[] CourseMembershipLoadListByUserId(bbWsParams @params, courseMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.courseMembershipLoadListByUserId(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipLoadListByUserId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipLoadListByCourseId,courseMembershipLoadListByCourseId (bb_platform),CourseMembershipLoadListByCourseId,CourseMembership,courseMembership,Load,ByCourseId,List,Record,courseMembershipLoadListByCourseId,List<CourseMembershipDetails>,courseMembershipDetails[],inputRecord,"@WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord",courseMembershipDetails inputRecord,LoadListByCourseId,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadListByCourseId"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<CourseMembershipDetails> courseMembershipLoadListByCourseId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipLoadListByCourseId()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadListByCourseId"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputRecord,,"    class _courseMembershipLoadListByCourseId : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.courseMembershipLoadListByCourseId(args.param, args.wsInputRecord);
        }
    }
",,testArgs.courseMembership.courseMembershipLoadListByCourseId.execute();,public _courseMembershipLoadListByCourseId courseMembershipLoadListByCourseId;,,,"courseMembershipLoadListByCourseId = new _courseMembershipLoadListByCourseId();
courseMembershipLoadListByCourseId.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails[] courseMembershipLoadListByCourseId(bbWsParams @params, courseMembershipDetails inputRecord)    {
        return base.CourseMembershipLoadListByCourseId(@params, inputRecord);
    }","
    //CourseMembership Load List ByCourseId
    public courseMembershipDetails[] CourseMembershipLoadListByCourseId(bbWsParams @params, courseMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.courseMembershipLoadListByCourseId(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipLoadListByCourseId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipLoadListByCourseIdWithUserInfo,courseMembershipLoadListByCourseIdWithUserInfo (bb_platform),CourseMembershipLoadListByCourseIdWithUserInfo,CourseMembership,courseMembership,Load,ByCourseIdWithUserInfo,List,Record,courseMembershipLoadListByCourseIdWithUserInfo,List<CourseMembershipDetails>,courseMembershipDetails[],inputRecord,"@WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord",courseMembershipDetails inputRecord,LoadListByCourseIdWithUserInfo,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadListByCourseIdWithUserInfo"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<CourseMembershipDetails> courseMembershipLoadListByCourseIdWithUserInfo
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipLoadListByCourseIdWithUserInfo()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadListByCourseIdWithUserInfo"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputRecord,,"    class _courseMembershipLoadListByCourseIdWithUserInfo : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.courseMembershipLoadListByCourseIdWithUserInfo(args.param, args.wsInputRecord);
        }
    }
",,testArgs.courseMembership.courseMembershipLoadListByCourseIdWithUserInfo.execute();,public _courseMembershipLoadListByCourseIdWithUserInfo courseMembershipLoadListByCourseIdWithUserInfo;,,,"courseMembershipLoadListByCourseIdWithUserInfo = new _courseMembershipLoadListByCourseIdWithUserInfo();
courseMembershipLoadListByCourseIdWithUserInfo.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails[] courseMembershipLoadListByCourseIdWithUserInfo(bbWsParams @params, courseMembershipDetails inputRecord)    {
        return base.CourseMembershipLoadListByCourseIdWithUserInfo(@params, inputRecord);
    }","
    //CourseMembership Load List ByCourseIdWithUserInfo
    public courseMembershipDetails[] CourseMembershipLoadListByCourseIdWithUserInfo(bbWsParams @params, courseMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.courseMembershipLoadListByCourseIdWithUserInfo(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipLoadListByCourseIdWithUserInfo"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipLoadListByCourseIdAndRole,courseMembershipLoadListByCourseIdAndRole (bb_platform),CourseMembershipLoadListByCourseIdAndRole,CourseMembership,courseMembership,Load,ByCourseIdAndRole,List,Record,courseMembershipLoadListByCourseIdAndRole,List<CourseMembershipDetails>,courseMembershipDetails[],inputRecord,"@WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord",courseMembershipDetails inputRecord,LoadListByCourseIdAndRole,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadListByCourseIdAndRole"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<CourseMembershipDetails> courseMembershipLoadListByCourseIdAndRole
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipLoadListByCourseIdAndRole()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadListByCourseIdAndRole"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,"// ****************************** Full Read/Update/Delete"" on Id and List<Id> methods ***************************",,args.wsResultArray,args.wsInputRecord,,"    class _courseMembershipLoadListByCourseIdAndRole : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.courseMembershipLoadListByCourseIdAndRole(args.param, args.wsInputRecord);
        }
    }
",,testArgs.courseMembership.courseMembershipLoadListByCourseIdAndRole.execute();,public _courseMembershipLoadListByCourseIdAndRole courseMembershipLoadListByCourseIdAndRole;,,,"courseMembershipLoadListByCourseIdAndRole = new _courseMembershipLoadListByCourseIdAndRole();
courseMembershipLoadListByCourseIdAndRole.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails[] courseMembershipLoadListByCourseIdAndRole(bbWsParams @params, courseMembershipDetails inputRecord)    {
        return base.CourseMembershipLoadListByCourseIdAndRole(@params, inputRecord);
    }","
    //CourseMembership Load List ByCourseIdAndRole
    public courseMembershipDetails[] CourseMembershipLoadListByCourseIdAndRole(bbWsParams @params, courseMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.courseMembershipLoadListByCourseIdAndRole(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipLoadListByCourseIdAndRole"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipInsertRecordById,courseMembershipInsertRecordById (bb_platform),CourseMembershipInsertRecordById,CourseMembership,courseMembership,Insert,ById,Record,Record,courseMembershipInsertRecordById,CourseMembershipDetails,courseMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord",courseMembershipDetails inputRecord,InsertRecordById,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""InsertRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public CourseMembershipDetails courseMembershipInsertRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipInsertRecordById()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""InsertRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _courseMembershipInsertRecordById : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.courseMembershipInsertRecordById(args.param, args.wsInputRecord);
        }
    }
",,testArgs.courseMembership.courseMembershipInsertRecordById.execute();,public _courseMembershipInsertRecordById courseMembershipInsertRecordById;,,,"courseMembershipInsertRecordById = new _courseMembershipInsertRecordById();
courseMembershipInsertRecordById.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails courseMembershipInsertRecordById(bbWsParams @params, courseMembershipDetails inputRecord)    {
        return base.CourseMembershipInsertRecordById(@params, inputRecord);
    }","
    //CourseMembership Insert Record ById
    public courseMembershipDetails CourseMembershipInsertRecordById(bbWsParams @params, courseMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.courseMembershipInsertRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipInsertRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipUpdateRecordById,courseMembershipUpdateRecordById (bb_platform),CourseMembershipUpdateRecordById,CourseMembership,courseMembership,Update,ById,Record,Record,courseMembershipUpdateRecordById,CourseMembershipDetails,courseMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord",courseMembershipDetails inputRecord,UpdateRecordById,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""UpdateRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public CourseMembershipDetails courseMembershipUpdateRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipUpdateRecordById()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""UpdateRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _courseMembershipUpdateRecordById : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.courseMembershipUpdateRecordById(args.param, args.wsInputRecord);
        }
    }
",,testArgs.courseMembership.courseMembershipUpdateRecordById.execute();,public _courseMembershipUpdateRecordById courseMembershipUpdateRecordById;,,,"courseMembershipUpdateRecordById = new _courseMembershipUpdateRecordById();
courseMembershipUpdateRecordById.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails courseMembershipUpdateRecordById(bbWsParams @params, courseMembershipDetails inputRecord)    {
        return base.CourseMembershipUpdateRecordById(@params, inputRecord);
    }","
    //CourseMembership Update Record ById
    public courseMembershipDetails CourseMembershipUpdateRecordById(bbWsParams @params, courseMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.courseMembershipUpdateRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipUpdateRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipPersistRecordById,courseMembershipPersistRecordById (bb_platform),CourseMembershipPersistRecordById,CourseMembership,courseMembership,Persist,ById,Record,Record,courseMembershipPersistRecordById,CourseMembershipDetails,courseMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord",courseMembershipDetails inputRecord,PersistRecordById,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""PersistRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public CourseMembershipDetails courseMembershipPersistRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipPersistRecordById()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""PersistRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _courseMembershipPersistRecordById : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.courseMembershipPersistRecordById(args.param, args.wsInputRecord);
        }
    }
",,testArgs.courseMembership.courseMembershipPersistRecordById.execute();,public _courseMembershipPersistRecordById courseMembershipPersistRecordById;,,,"courseMembershipPersistRecordById = new _courseMembershipPersistRecordById();
courseMembershipPersistRecordById.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails courseMembershipPersistRecordById(bbWsParams @params, courseMembershipDetails inputRecord)    {
        return base.CourseMembershipPersistRecordById(@params, inputRecord);
    }","
    //CourseMembership Persist Record ById
    public courseMembershipDetails CourseMembershipPersistRecordById(bbWsParams @params, courseMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.courseMembershipPersistRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipPersistRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipDeleteRecordById,courseMembershipDeleteRecordById (bb_platform),CourseMembershipDeleteRecordById,CourseMembership,courseMembership,Delete,ById,Record,Record,courseMembershipDeleteRecordById,CourseMembershipDetails,courseMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord",courseMembershipDetails inputRecord,DeleteRecordById,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""DeleteRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public CourseMembershipDetails courseMembershipDeleteRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipDeleteRecordById()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""DeleteRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _courseMembershipDeleteRecordById : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.courseMembershipDeleteRecordById(args.param, args.wsInputRecord);
        }
    }
",,testArgs.courseMembership.courseMembershipDeleteRecordById.execute();,public _courseMembershipDeleteRecordById courseMembershipDeleteRecordById;,,,"courseMembershipDeleteRecordById = new _courseMembershipDeleteRecordById();
courseMembershipDeleteRecordById.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails courseMembershipDeleteRecordById(bbWsParams @params, courseMembershipDetails inputRecord)    {
        return base.CourseMembershipDeleteRecordById(@params, inputRecord);
    }","
    //CourseMembership Delete Record ById
    public courseMembershipDetails CourseMembershipDeleteRecordById(bbWsParams @params, courseMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.courseMembershipDeleteRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipDeleteRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipInsertListById,courseMembershipInsertListById (bb_platform),CourseMembershipInsertListById,CourseMembership,courseMembership,Insert,ById,List,List,courseMembershipInsertListById,List<CourseMembershipDetails>,courseMembershipDetails[],inputList,"@WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList",courseMembershipDetails[] inputList,InsertListById,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputList,
                    CourseMembershipAccessPack.class.getName(), ""InsertListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<CourseMembershipDetails> courseMembershipInsertListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipInsertListById()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputList,
                    CourseMembershipAccessPack.class.getName(), ""InsertListById"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputList.ToArray(),,"    class _courseMembershipInsertListById : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.courseMembershipInsertListById(args.param, args.wsInputList.ToArray());
        }
    }
",,testArgs.courseMembership.courseMembershipInsertListById.execute();,public _courseMembershipInsertListById courseMembershipInsertListById;,,,"courseMembershipInsertListById = new _courseMembershipInsertListById();
courseMembershipInsertListById.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails[] courseMembershipInsertListById(bbWsParams @params, courseMembershipDetails[] inputList)    {
        return base.CourseMembershipInsertListById(@params, inputList);
    }","
    //CourseMembership Insert List ById
    public courseMembershipDetails[] CourseMembershipInsertListById(bbWsParams @params, courseMembershipDetails[] inputList)
    {
        try
        {
           return bbAdded.courseMembershipInsertListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipInsertListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipUpdateListById,courseMembershipUpdateListById (bb_platform),CourseMembershipUpdateListById,CourseMembership,courseMembership,Update,ById,List,List,courseMembershipUpdateListById,List<CourseMembershipDetails>,courseMembershipDetails[],inputList,"@WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList",courseMembershipDetails[] inputList,UpdateListById,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputList,
                    CourseMembershipAccessPack.class.getName(), ""UpdateListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<CourseMembershipDetails> courseMembershipUpdateListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipUpdateListById()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputList,
                    CourseMembershipAccessPack.class.getName(), ""UpdateListById"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputList.ToArray(),,"    class _courseMembershipUpdateListById : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.courseMembershipUpdateListById(args.param, args.wsInputList.ToArray());
        }
    }
",,testArgs.courseMembership.courseMembershipUpdateListById.execute();,public _courseMembershipUpdateListById courseMembershipUpdateListById;,,,"courseMembershipUpdateListById = new _courseMembershipUpdateListById();
courseMembershipUpdateListById.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails[] courseMembershipUpdateListById(bbWsParams @params, courseMembershipDetails[] inputList)    {
        return base.CourseMembershipUpdateListById(@params, inputList);
    }","
    //CourseMembership Update List ById
    public courseMembershipDetails[] CourseMembershipUpdateListById(bbWsParams @params, courseMembershipDetails[] inputList)
    {
        try
        {
           return bbAdded.courseMembershipUpdateListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipUpdateListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipPersistListById,courseMembershipPersistListById (bb_platform),CourseMembershipPersistListById,CourseMembership,courseMembership,Persist,ById,List,List,courseMembershipPersistListById,List<CourseMembershipDetails>,courseMembershipDetails[],inputList,"@WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList",courseMembershipDetails[] inputList,PersistListById,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputList,
                    CourseMembershipAccessPack.class.getName(), ""PersistListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<CourseMembershipDetails> courseMembershipPersistListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipPersistListById()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputList,
                    CourseMembershipAccessPack.class.getName(), ""PersistListById"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputList.ToArray(),,"    class _courseMembershipPersistListById : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.courseMembershipPersistListById(args.param, args.wsInputList.ToArray());
        }
    }
",,testArgs.courseMembership.courseMembershipPersistListById.execute();,public _courseMembershipPersistListById courseMembershipPersistListById;,,,"courseMembershipPersistListById = new _courseMembershipPersistListById();
courseMembershipPersistListById.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails[] courseMembershipPersistListById(bbWsParams @params, courseMembershipDetails[] inputList)    {
        return base.CourseMembershipPersistListById(@params, inputList);
    }","
    //CourseMembership Persist List ById
    public courseMembershipDetails[] CourseMembershipPersistListById(bbWsParams @params, courseMembershipDetails[] inputList)
    {
        try
        {
           return bbAdded.courseMembershipPersistListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipPersistListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipDeleteListById,courseMembershipDeleteListById (bb_platform),CourseMembershipDeleteListById,CourseMembership,courseMembership,Delete,ById,List,List,courseMembershipDeleteListById,List<CourseMembershipDetails>,courseMembershipDetails[],inputList,"@WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList",courseMembershipDetails[] inputList,DeleteListById,_DATA,CourseMembershipAccessPack.CourseMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputList,
                    CourseMembershipAccessPack.class.getName(), ""DeleteListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<CourseMembershipDetails> courseMembershipDeleteListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<CourseMembershipDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipDeleteListById()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputList,
                    CourseMembershipAccessPack.class.getName(), ""DeleteListById"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputList.ToArray(),,"    class _courseMembershipDeleteListById : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.courseMembershipDeleteListById(args.param, args.wsInputList.ToArray());
        }
    }
",,testArgs.courseMembership.courseMembershipDeleteListById.execute();,public _courseMembershipDeleteListById courseMembershipDeleteListById;,,,"courseMembershipDeleteListById = new _courseMembershipDeleteListById();
courseMembershipDeleteListById.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails[] courseMembershipDeleteListById(bbWsParams @params, courseMembershipDetails[] inputList)    {
        return base.CourseMembershipDeleteListById(@params, inputList);
    }","
    //CourseMembership Delete List ById
    public courseMembershipDetails[] CourseMembershipDeleteListById(bbWsParams @params, courseMembershipDetails[] inputList)
    {
        try
        {
           return bbAdded.courseMembershipDeleteListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipDeleteListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipLoadRecordByCourseAndUserBatchId,courseMembershipLoadRecordByCourseAndUserBatchId (cms_admin),CourseMembershipLoadRecordByCourseAndUserBatchId,CourseMembership,courseMembership,Load,ByCourseAndUserBatchId,Record,Record,courseMembershipLoadRecordByCourseAndUserBatchId,CourseMembershipDetails,courseMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord",courseMembershipDetails inputRecord,LoadRecordByCourseAndUserBatchId,_ADMIN_DATA,CourseMembershipAccessPack.CourseMembershipArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_ADMIN_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadRecordByCourseAndUserBatchId"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public CourseMembershipDetails courseMembershipLoadRecordByCourseAndUserBatchId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipLoadRecordByCourseAndUserBatchId()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_ADMIN_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_ADMIN_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadRecordByCourseAndUserBatchId"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _courseMembershipLoadRecordByCourseAndUserBatchId : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.courseMembershipLoadRecordByCourseAndUserBatchId(args.param, args.wsInputRecord);
        }
    }
",,testArgs.courseMembership.courseMembershipLoadRecordByCourseAndUserBatchId.execute();,public _courseMembershipLoadRecordByCourseAndUserBatchId courseMembershipLoadRecordByCourseAndUserBatchId;,,,"courseMembershipLoadRecordByCourseAndUserBatchId = new _courseMembershipLoadRecordByCourseAndUserBatchId();
courseMembershipLoadRecordByCourseAndUserBatchId.init(this.testArgs.courseMembership);",,,"    public courseMembershipDetails courseMembershipLoadRecordByCourseAndUserBatchId(bbWsParams @params, courseMembershipDetails inputRecord)    {
        return base.CourseMembershipLoadRecordByCourseAndUserBatchId(@params, inputRecord);
    }","
    //CourseMembership Load Record ByCourseAndUserBatchId
    public courseMembershipDetails CourseMembershipLoadRecordByCourseAndUserBatchId(bbWsParams @params, courseMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.courseMembershipLoadRecordByCourseAndUserBatchId(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipLoadRecordByCourseAndUserBatchId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
courseMembershipLoadListByTemplate,courseMembershipLoadListByTemplate (cms_admin),CourseMembershipLoadListByTemplate,CourseMembership,courseMembership,Load,ByTemplate,List,Record,courseMembershipLoadListByTemplate,List<CourseMembershipDetails>,courseMembershipDetails[],inputRecord,"@WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord",courseMembershipDetails inputRecord,LoadListByTemplate,_ADMIN_DATA,CourseMembershipAccessPack.CourseMembershipArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new CourseMembershipAccessPack.CourseMembershipArguments_ADMIN_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadListByTemplate"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, courseMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<CourseMembershipDetails> courseMembershipLoadListByTemplate
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") CourseMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered courseMembershipLoadListByTemplate()"", this);
        CourseMembershipAccessPack.CourseMembershipArguments_ADMIN_DATA args
                = new CourseMembershipAccessPack.CourseMembershipArguments_ADMIN_DATA();
        args.initialize(CourseMembershipDetails.class, params, inputRecord,
                    CourseMembershipAccessPack.class.getName(), ""LoadListByTemplate"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputRecord,,"    class _courseMembershipLoadListByTemplate : _courseMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.courseMembershipLoadListByTemplate(args.param, args.wsInputRecord);
        }
    }
",,testArgs.courseMembership.courseMembershipLoadListByTemplate.execute();,public _courseMembershipLoadListByTemplate courseMembershipLoadListByTemplate;,,},"courseMembershipLoadListByTemplate = new _courseMembershipLoadListByTemplate();
courseMembershipLoadListByTemplate.init(this.testArgs.courseMembership);",,"
}
        public void init(TestArgsStruct testArgs) {
            base.init(testArgs);
","    public courseMembershipDetails[] courseMembershipLoadListByTemplate(bbWsParams @params, courseMembershipDetails inputRecord)    {
        return base.CourseMembershipLoadListByTemplate(@params, inputRecord);
    }","
    //CourseMembership Load List ByTemplate
    public courseMembershipDetails[] CourseMembershipLoadListByTemplate(bbWsParams @params, courseMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.courseMembershipLoadListByTemplate(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.CourseMembershipLoadListByTemplate"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userLoadRecordByBatchUid,userLoadRecordByBatchUid (cms_admin),UserLoadRecordByBatchUid,User,user,Load,ByBatchUid,Record,Record,userLoadRecordByBatchUid,UserDetails,userDetails,inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,LoadRecordByBatchUid,_ADMIN_DATA,UserAccessPack.UserArguments_ADMIN_DATA,UserApiProcessor,        UserApiProcessor.start(args);,"                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadRecordByBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public UserDetails userLoadRecordByBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userLoadRecordByBatchUid()"", this);
        UserAccessPack.UserArguments_ADMIN_DATA args
                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadRecordByBatchUid"");
        UserApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.userLoadRecordByName.preAction();
            args.userLoadRecordByName.executeImp();
            String batch_uid = args.wsResultRecord.batchUid;
            ClearInputs();
            args.wsIn","    class _userLoadRecordByBatchUid : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.userLoadRecordByBatchUid(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.userLoadRecordByName.preAction();
            args.userLoadRecordByName.executeImp();
            String batch_uid = args.wsResultRecord.batchUid;
            ClearInputs();
            args.wsIn    }
",,testArgs.user.userLoadRecordByBatchUid.execute();,public _userLoadRecordByBatchUid userLoadRecordByBatchUid;,,"class _userTestCase : TestCase<bbws.userDetails>, ITestAction { }        class _userTestArgs : TestArgs<bbws.userDetails> {
        public override bbws.bbWsDataLogRecord[] getDataLogArray() {
            return wsResultRecord.bbWsDataLog;
        }
","userLoadRecordByBatchUid = new _userLoadRecordByBatchUid();
userLoadRecordByBatchUid.init(this.testArgs.user);",,,"    public userDetails userLoadRecordByBatchUid(bbWsParams @params, userDetails inputRecord)    {
        return base.UserLoadRecordByBatchUid(@params, inputRecord);
    }","
    //User Load Record ByBatchUid
    public userDetails UserLoadRecordByBatchUid(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userLoadRecordByBatchUid(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserLoadRecordByBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userLoadListByTemplate,userLoadListByTemplate (cms_admin),UserLoadListByTemplate,User,user,Load,ByTemplate,List,Record,userLoadListByTemplate,List<UserDetails>,userDetails[],inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,LoadListByTemplate,_ADMIN_DATA,UserAccessPack.UserArguments_ADMIN_DATA,UserApiProcessor,        UserApiProcessor.start(args);,"                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListByTemplate"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<UserDetails> userLoadListByTemplate
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userLoadListByTemplate()"", this);
        UserAccessPack.UserArguments_ADMIN_DATA args
                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListByTemplate"");
        UserApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputRecord,"        override public void preAction() {
            args.userLoadRecordByName.preAction();
        }
","    class _userLoadListByTemplate : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userLoadListByTemplate(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.userLoadRecordByName.preAction();
        }
    }
",,testArgs.user.userLoadListByTemplate.execute();,public _userLoadListByTemplate userLoadListByTemplate;,,,"userLoadListByTemplate = new _userLoadListByTemplate();
userLoadListByTemplate.init(this.testArgs.user);",,,"    public userDetails[] userLoadListByTemplate(bbWsParams @params, userDetails inputRecord)    {
        return base.UserLoadListByTemplate(@params, inputRecord);
    }","
    //User Load List ByTemplate
    public userDetails[] UserLoadListByTemplate(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userLoadListByTemplate(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserLoadListByTemplate"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userInsertRecordByBatchUid,userInsertRecordByBatchUid (cms_admin),UserInsertRecordByBatchUid,User,user,Insert,ByBatchUid,Record,Record,userInsertRecordByBatchUid,UserDetails,userDetails,inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,InsertRecordByBatchUid,_ADMIN_DATA,UserAccessPack.UserArguments_ADMIN_DATA,UserApiProcessor,        UserApiProcessor.start(args);,"                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""InsertRecordByBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public UserDetails userInsertRecordByBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userInsertRecordByBatchUid()"", this);
        UserAccessPack.UserArguments_ADMIN_DATA args
                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""InsertRecordByBatchUid"");
        UserApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.userLoadRecordByName.preAction();
            args.userLoadRecordByName.executeImp();
            args.wsInputRecord = args.wsResultRecord;
            args.wsInputRecord.batchUid += args.testKey","    class _userInsertRecordByBatchUid : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.userInsertRecordByBatchUid(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.userLoadRecordByName.preAction();
            args.userLoadRecordByName.executeImp();
            args.wsInputRecord = args.wsResultRecord;
            args.wsInputRecord.batchUid += args.testKey    }
",,testArgs.user.userInsertRecordByBatchUid.execute();,public _userInsertRecordByBatchUid userInsertRecordByBatchUid;,,,"userInsertRecordByBatchUid = new _userInsertRecordByBatchUid();
userInsertRecordByBatchUid.init(this.testArgs.user);",,,"    public userDetails userInsertRecordByBatchUid(bbWsParams @params, userDetails inputRecord)    {
        return base.UserInsertRecordByBatchUid(@params, inputRecord);
    }","
    //User Insert Record ByBatchUid
    public userDetails UserInsertRecordByBatchUid(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userInsertRecordByBatchUid(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserInsertRecordByBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userUpdateRecordByBatchUid,userUpdateRecordByBatchUid (cms_admin),UserUpdateRecordByBatchUid,User,user,Update,ByBatchUid,Record,Record,userUpdateRecordByBatchUid,UserDetails,userDetails,inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,UpdateRecordByBatchUid,_ADMIN_DATA,UserAccessPack.UserArguments_ADMIN_DATA,UserApiProcessor,        UserApiProcessor.start(args);,"                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""UpdateRecordByBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public UserDetails userUpdateRecordByBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userUpdateRecordByBatchUid()"", this);
        UserAccessPack.UserArguments_ADMIN_DATA args
                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""UpdateRecordByBatchUid"");
        UserApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _userUpdateRecordByBatchUid : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.userUpdateRecordByBatchUid(args.param, args.wsInputRecord);
        }
    }
",,testArgs.user.userUpdateRecordByBatchUid.execute();,public _userUpdateRecordByBatchUid userUpdateRecordByBatchUid;,,,"userUpdateRecordByBatchUid = new _userUpdateRecordByBatchUid();
userUpdateRecordByBatchUid.init(this.testArgs.user);",,,"    public userDetails userUpdateRecordByBatchUid(bbWsParams @params, userDetails inputRecord)    {
        return base.UserUpdateRecordByBatchUid(@params, inputRecord);
    }","
    //User Update Record ByBatchUid
    public userDetails UserUpdateRecordByBatchUid(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userUpdateRecordByBatchUid(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserUpdateRecordByBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userPersistRecordByBatchUid,userPersistRecordByBatchUid (cms_admin),UserPersistRecordByBatchUid,User,user,Persist,ByBatchUid,Record,Record,userPersistRecordByBatchUid,UserDetails,userDetails,inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,PersistRecordByBatchUid,_ADMIN_DATA,UserAccessPack.UserArguments_ADMIN_DATA,UserApiProcessor,        UserApiProcessor.start(args);,"                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""PersistRecordByBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public UserDetails userPersistRecordByBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userPersistRecordByBatchUid()"", this);
        UserAccessPack.UserArguments_ADMIN_DATA args
                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""PersistRecordByBatchUid"");
        UserApiProcessor.start(args);
        return args.getResultRecord();
    }",,"
 /*@WebMethod
 public UserDetails saveUserRecordByBatchUid
                    (@WebParam(name = ""params"") BbWsParams params,
                        @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
 {
      ",,args.wsResultRecord,args.wsInputRecord,,"    class _userPersistRecordByBatchUid : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.userPersistRecordByBatchUid(args.param, args.wsInputRecord);
        }
    }
",,testArgs.user.userPersistRecordByBatchUid.execute();,public _userPersistRecordByBatchUid userPersistRecordByBatchUid;,,,"userPersistRecordByBatchUid = new _userPersistRecordByBatchUid();
userPersistRecordByBatchUid.init(this.testArgs.user);",,,"    public userDetails userPersistRecordByBatchUid(bbWsParams @params, userDetails inputRecord)    {
        return base.UserPersistRecordByBatchUid(@params, inputRecord);
    }","
    //User Persist Record ByBatchUid
    public userDetails UserPersistRecordByBatchUid(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userPersistRecordByBatchUid(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserPersistRecordByBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userDeleteRecordByBatchUid,userDeleteRecordByBatchUid (cms_admin),UserDeleteRecordByBatchUid,User,user,Delete,ByBatchUid,Record,Record,userDeleteRecordByBatchUid,UserDetails,userDetails,inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,DeleteRecordByBatchUid,_ADMIN_DATA,UserAccessPack.UserArguments_ADMIN_DATA,UserApiProcessor,        UserApiProcessor.start(args);,"                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""DeleteRecordByBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public UserDetails userDeleteRecordByBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userDeleteRecordByBatchUid()"", this);
        UserAccessPack.UserArguments_ADMIN_DATA args
                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""DeleteRecordByBatchUid"");
        UserApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _userDeleteRecordByBatchUid : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.userDeleteRecordByBatchUid(args.param, args.wsInputRecord);
        }
    }
",,testArgs.user.userDeleteRecordByBatchUid.execute();,public _userDeleteRecordByBatchUid userDeleteRecordByBatchUid;,,,"userDeleteRecordByBatchUid = new _userDeleteRecordByBatchUid();
userDeleteRecordByBatchUid.init(this.testArgs.user);",,,"    public userDetails userDeleteRecordByBatchUid(bbWsParams @params, userDetails inputRecord)    {
        return base.UserDeleteRecordByBatchUid(@params, inputRecord);
    }","
    //User Delete Record ByBatchUid
    public userDetails UserDeleteRecordByBatchUid(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userDeleteRecordByBatchUid(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserDeleteRecordByBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userPersistListByBatchUid,userPersistListByBatchUid (cms_admin),UserPersistListByBatchUid,User,user,Persist,ByBatchUid,List,List,userPersistListByBatchUid,List<UserDetails>,userDetails[],inputList,"@WebParam(name = ""inputList"") List<UserDetails> inputList",userDetails[] inputList,PersistListByBatchUid,_ADMIN_DATA,UserAccessPack.UserArguments_ADMIN_DATA,UserApiProcessor,        UserApiProcessor.start(args);,"                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""PersistListByBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<UserDetails> userPersistListByBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userPersistListByBatchUid()"", this);
        UserAccessPack.UserArguments_ADMIN_DATA args
                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""PersistListByBatchUid"");
        UserApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputList.ToArray(),,"    class _userPersistListByBatchUid : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userPersistListByBatchUid(args.param, args.wsInputList.ToArray());
        }
    }
",,testArgs.user.userPersistListByBatchUid.execute();,public _userPersistListByBatchUid userPersistListByBatchUid;,,,"userPersistListByBatchUid = new _userPersistListByBatchUid();
userPersistListByBatchUid.init(this.testArgs.user);",,,"    public userDetails[] userPersistListByBatchUid(bbWsParams @params, userDetails[] inputList)    {
        return base.UserPersistListByBatchUid(@params, inputList);
    }","
    //User Persist List ByBatchUid
    public userDetails[] UserPersistListByBatchUid(bbWsParams @params, userDetails[] inputList)
    {
        try
        {
           return bbAdded.userPersistListByBatchUid(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserPersistListByBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userDeleteListByBatchUid,userDeleteListByBatchUid (cms_admin),UserDeleteListByBatchUid,User,user,Delete,ByBatchUid,List,List,userDeleteListByBatchUid,List<UserDetails>,userDetails[],inputList,"@WebParam(name = ""inputList"") List<UserDetails> inputList",userDetails[] inputList,DeleteListByBatchUid,_ADMIN_DATA,UserAccessPack.UserArguments_ADMIN_DATA,UserApiProcessor,        UserApiProcessor.start(args);,"                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""DeleteListByBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<UserDetails> userDeleteListByBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userDeleteListByBatchUid()"", this);
        UserAccessPack.UserArguments_ADMIN_DATA args
                = new UserAccessPack.UserArguments_ADMIN_DATA();
        args.initialize(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""DeleteListByBatchUid"");
        UserApiProcessor.start(args);
        return args.getResultList();
    }",,"
// *************************** UserAccessPack_DATA Id and various load methods ************************************",,args.wsResultArray,args.wsInputList.ToArray(),,"    class _userDeleteListByBatchUid : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userDeleteListByBatchUid(args.param, args.wsInputList.ToArray());
        }
    }
",,testArgs.user.userDeleteListByBatchUid.execute();,public _userDeleteListByBatchUid userDeleteListByBatchUid;,,,"userDeleteListByBatchUid = new _userDeleteListByBatchUid();
userDeleteListByBatchUid.init(this.testArgs.user);",,,"    public userDetails[] userDeleteListByBatchUid(bbWsParams @params, userDetails[] inputList)    {
        return base.UserDeleteListByBatchUid(@params, inputList);
    }","
    //User Delete List ByBatchUid
    public userDetails[] UserDeleteListByBatchUid(bbWsParams @params, userDetails[] inputList)
    {
        try
        {
           return bbAdded.userDeleteListByBatchUid(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserDeleteListByBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userLoadRecordById,userLoadRecordById (bb_platform),UserLoadRecordById,User,user,Load,ById,Record,Record,userLoadRecordById,UserDetails,userDetails,inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,LoadRecordById,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public UserDetails userLoadRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userLoadRecordById()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadRecordById"");
        UserApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.userLoadRecordByName.preAction();
            args.userLoadRecordByName.executeImp();
            String id = args.wsResultRecord.id;
            ClearInputs();
            args.wsInputRecord.id ","    class _userLoadRecordById : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.userLoadRecordById(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.userLoadRecordByName.preAction();
            args.userLoadRecordByName.executeImp();
            String id = args.wsResultRecord.id;
            ClearInputs();
            args.wsInputRecord.id     }
",,testArgs.user.userLoadRecordById.execute();,public _userLoadRecordById userLoadRecordById;,,,"userLoadRecordById = new _userLoadRecordById();
userLoadRecordById.init(this.testArgs.user);",,,"    public userDetails userLoadRecordById(bbWsParams @params, userDetails inputRecord)    {
        return base.UserLoadRecordById(@params, inputRecord);
    }","
    //User Load Record ById
    public userDetails UserLoadRecordById(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userLoadRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserLoadRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userLoadRecordByName,userLoadRecordByName (bb_platform),UserLoadRecordByName,User,user,Load,ByName,Record,Record,userLoadRecordByName,UserDetails,userDetails,inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,LoadRecordByName,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadRecordByName"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public UserDetails userLoadRecordByName
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userLoadRecordByName()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadRecordByName"");
        UserApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _userLoadRecordByName : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.userLoadRecordByName(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.user.userLoadRecordByName.execute();,public _userLoadRecordByName userLoadRecordByName;,,,"userLoadRecordByName = new _userLoadRecordByName();
userLoadRecordByName.init(this.testArgs.user);",,,"    public userDetails userLoadRecordByName(bbWsParams @params, userDetails inputRecord)    {
        return base.UserLoadRecordByName(@params, inputRecord);
    }","
    //User Load Record ByName
    public userDetails UserLoadRecordByName(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userLoadRecordByName(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserLoadRecordByName"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userInsertRecordById,userInsertRecordById (bb_platform),UserInsertRecordById,User,user,Insert,ById,Record,Record,userInsertRecordById,UserDetails,userDetails,inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,InsertRecordById,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""InsertRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public UserDetails userInsertRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userInsertRecordById()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""InsertRecordById"");
        UserApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _userInsertRecordById : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.userInsertRecordById(args.param, args.wsInputRecord);
        }
    }
",,testArgs.user.userInsertRecordById.execute();,public _userInsertRecordById userInsertRecordById;,,,"userInsertRecordById = new _userInsertRecordById();
userInsertRecordById.init(this.testArgs.user);",,,"    public userDetails userInsertRecordById(bbWsParams @params, userDetails inputRecord)    {
        return base.UserInsertRecordById(@params, inputRecord);
    }","
    //User Insert Record ById
    public userDetails UserInsertRecordById(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userInsertRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserInsertRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userUpdateRecordById,userUpdateRecordById (bb_platform),UserUpdateRecordById,User,user,Update,ById,Record,Record,userUpdateRecordById,UserDetails,userDetails,inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,UpdateRecordById,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""UpdateRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public UserDetails userUpdateRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userUpdateRecordById()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""UpdateRecordById"");
        UserApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _userUpdateRecordById : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.userUpdateRecordById(args.param, args.wsInputRecord);
        }
    }
",,testArgs.user.userUpdateRecordById.execute();,public _userUpdateRecordById userUpdateRecordById;,,,"userUpdateRecordById = new _userUpdateRecordById();
userUpdateRecordById.init(this.testArgs.user);",,,"    public userDetails userUpdateRecordById(bbWsParams @params, userDetails inputRecord)    {
        return base.UserUpdateRecordById(@params, inputRecord);
    }","
    //User Update Record ById
    public userDetails UserUpdateRecordById(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userUpdateRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserUpdateRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userPersistRecordById,userPersistRecordById (bb_platform),UserPersistRecordById,User,user,Persist,ById,Record,Record,userPersistRecordById,UserDetails,userDetails,inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,PersistRecordById,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""PersistRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public UserDetails userPersistRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userPersistRecordById()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""PersistRecordById"");
        UserApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _userPersistRecordById : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.userPersistRecordById(args.param, args.wsInputRecord);
        }
    }
",,testArgs.user.userPersistRecordById.execute();,public _userPersistRecordById userPersistRecordById;,,,"userPersistRecordById = new _userPersistRecordById();
userPersistRecordById.init(this.testArgs.user);",,,"    public userDetails userPersistRecordById(bbWsParams @params, userDetails inputRecord)    {
        return base.UserPersistRecordById(@params, inputRecord);
    }","
    //User Persist Record ById
    public userDetails UserPersistRecordById(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userPersistRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserPersistRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userDeleteRecordById,userDeleteRecordById (bb_platform),UserDeleteRecordById,User,user,Delete,ById,Record,Record,userDeleteRecordById,UserDetails,userDetails,inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,DeleteRecordById,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""DeleteRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public UserDetails userDeleteRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userDeleteRecordById()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""DeleteRecordById"");
        UserApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,,"    class _userDeleteRecordById : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.userDeleteRecordById(args.param, args.wsInputRecord);
        }
    }
",,testArgs.user.userDeleteRecordById.execute();,public _userDeleteRecordById userDeleteRecordById;,,,"userDeleteRecordById = new _userDeleteRecordById();
userDeleteRecordById.init(this.testArgs.user);",,,"    public userDetails userDeleteRecordById(bbWsParams @params, userDetails inputRecord)    {
        return base.UserDeleteRecordById(@params, inputRecord);
    }","
    //User Delete Record ById
    public userDetails UserDeleteRecordById(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userDeleteRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserDeleteRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userLoadListById,userLoadListById (bb_platform),UserLoadListById,User,user,Load,ById,List,List,userLoadListById,List<UserDetails>,userDetails[],inputList,"@WebParam(name = ""inputList"") List<UserDetails> inputList",userDetails[] inputList,LoadListById,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""LoadListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<UserDetails> userLoadListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userLoadListById()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""LoadListById"");
        UserApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputList.ToArray(),,"    class _userLoadListById : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userLoadListById(args.param, args.wsInputList.ToArray());
        }
    }
",,testArgs.user.userLoadListById.execute();,public _userLoadListById userLoadListById;,,,"userLoadListById = new _userLoadListById();
userLoadListById.init(this.testArgs.user);",,,"    public userDetails[] userLoadListById(bbWsParams @params, userDetails[] inputList)    {
        return base.UserLoadListById(@params, inputList);
    }","
    //User Load List ById
    public userDetails[] UserLoadListById(bbWsParams @params, userDetails[] inputList)
    {
        try
        {
           return bbAdded.userLoadListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserLoadListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userInsertListById,userInsertListById (bb_platform),UserInsertListById,User,user,Insert,ById,List,List,userInsertListById,List<UserDetails>,userDetails[],inputList,"@WebParam(name = ""inputList"") List<UserDetails> inputList",userDetails[] inputList,InsertListById,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""InsertListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<UserDetails> userInsertListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userInsertListById()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""InsertListById"");
        UserApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputList.ToArray(),,"    class _userInsertListById : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userInsertListById(args.param, args.wsInputList.ToArray());
        }
    }
",,testArgs.user.userInsertListById.execute();,public _userInsertListById userInsertListById;,,,"userInsertListById = new _userInsertListById();
userInsertListById.init(this.testArgs.user);",,,"    public userDetails[] userInsertListById(bbWsParams @params, userDetails[] inputList)    {
        return base.UserInsertListById(@params, inputList);
    }","
    //User Insert List ById
    public userDetails[] UserInsertListById(bbWsParams @params, userDetails[] inputList)
    {
        try
        {
           return bbAdded.userInsertListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserInsertListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userUpdateListById,userUpdateListById (bb_platform),UserUpdateListById,User,user,Update,ById,List,List,userUpdateListById,List<UserDetails>,userDetails[],inputList,"@WebParam(name = ""inputList"") List<UserDetails> inputList",userDetails[] inputList,UpdateListById,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""UpdateListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<UserDetails> userUpdateListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userUpdateListById()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""UpdateListById"");
        UserApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputList.ToArray(),,"    class _userUpdateListById : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userUpdateListById(args.param, args.wsInputList.ToArray());
        }
    }
",,testArgs.user.userUpdateListById.execute();,public _userUpdateListById userUpdateListById;,,,"userUpdateListById = new _userUpdateListById();
userUpdateListById.init(this.testArgs.user);",,,"    public userDetails[] userUpdateListById(bbWsParams @params, userDetails[] inputList)    {
        return base.UserUpdateListById(@params, inputList);
    }","
    //User Update List ById
    public userDetails[] UserUpdateListById(bbWsParams @params, userDetails[] inputList)
    {
        try
        {
           return bbAdded.userUpdateListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserUpdateListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userPersistListById,userPersistListById (bb_platform),UserPersistListById,User,user,Persist,ById,List,List,userPersistListById,List<UserDetails>,userDetails[],inputList,"@WebParam(name = ""inputList"") List<UserDetails> inputList",userDetails[] inputList,PersistListById,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""PersistListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<UserDetails> userPersistListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userPersistListById()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""PersistListById"");
        UserApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputList.ToArray(),,"    class _userPersistListById : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userPersistListById(args.param, args.wsInputList.ToArray());
        }
    }
",,testArgs.user.userPersistListById.execute();,public _userPersistListById userPersistListById;,,,"userPersistListById = new _userPersistListById();
userPersistListById.init(this.testArgs.user);",,,"    public userDetails[] userPersistListById(bbWsParams @params, userDetails[] inputList)    {
        return base.UserPersistListById(@params, inputList);
    }","
    //User Persist List ById
    public userDetails[] UserPersistListById(bbWsParams @params, userDetails[] inputList)
    {
        try
        {
           return bbAdded.userPersistListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserPersistListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userDeleteListById,userDeleteListById (bb_platform),UserDeleteListById,User,user,Delete,ById,List,List,userDeleteListById,List<UserDetails>,userDetails[],inputList,"@WebParam(name = ""inputList"") List<UserDetails> inputList",userDetails[] inputList,DeleteListById,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""DeleteListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<UserDetails> userDeleteListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<UserDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userDeleteListById()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputList,
                    UserAccessPack.class.getName(), ""DeleteListById"");
        UserApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputList.ToArray(),,"    class _userDeleteListById : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userDeleteListById(args.param, args.wsInputList.ToArray());
        }
    }
",,testArgs.user.userDeleteListById.execute();,public _userDeleteListById userDeleteListById;,,,"userDeleteListById = new _userDeleteListById();
userDeleteListById.init(this.testArgs.user);",,,"    public userDetails[] userDeleteListById(bbWsParams @params, userDetails[] inputList)    {
        return base.UserDeleteListById(@params, inputList);
    }","
    //User Delete List ById
    public userDetails[] UserDeleteListById(bbWsParams @params, userDetails[] inputList)
    {
        try
        {
           return bbAdded.userDeleteListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserDeleteListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userLoadListByEmailAddressFamilyNameGivenName,userLoadListByEmailAddressFamilyNameGivenName (bb_platform),UserLoadListByEmailAddressFamilyNameGivenName,User,user,Load,ByEmailAddressFamilyNameGivenName,List,Record,userLoadListByEmailAddressFamilyNameGivenName,List<UserDetails>,userDetails[],inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,LoadListByEmailAddressFamilyNameGivenName,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListByEmailAddressFamilyNameGivenName"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<UserDetails> userLoadListByEmailAddressFamilyNameGivenName
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userLoadListByEmailAddressFamilyNameGivenName()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListByEmailAddressFamilyNameGivenName"");
        UserApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputRecord,,"    class _userLoadListByEmailAddressFamilyNameGivenName : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userLoadListByEmailAddressFamilyNameGivenName(args.param, args.wsInputRecord);
        }
    }
",,testArgs.user.userLoadListByEmailAddressFamilyNameGivenName.execute();,public _userLoadListByEmailAddressFamilyNameGivenName userLoadListByEmailAddressFamilyNameGivenName;,,,"userLoadListByEmailAddressFamilyNameGivenName = new _userLoadListByEmailAddressFamilyNameGivenName();
userLoadListByEmailAddressFamilyNameGivenName.init(this.testArgs.user);",,,"    public userDetails[] userLoadListByEmailAddressFamilyNameGivenName(bbWsParams @params, userDetails inputRecord)    {
        return base.UserLoadListByEmailAddressFamilyNameGivenName(@params, inputRecord);
    }","
    //User Load List ByEmailAddressFamilyNameGivenName
    public userDetails[] UserLoadListByEmailAddressFamilyNameGivenName(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userLoadListByEmailAddressFamilyNameGivenName(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserLoadListByEmailAddressFamilyNameGivenName"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userLoadListBySearchByUserName,userLoadListBySearchByUserName (bb_platform),UserLoadListBySearchByUserName,User,user,Load,BySearchByUserName,List,Record,userLoadListBySearchByUserName,List<UserDetails>,userDetails[],inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,LoadListBySearchByUserName,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListBySearchByUserName"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<UserDetails> userLoadListBySearchByUserName
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userLoadListBySearchByUserName()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListBySearchByUserName"");
        UserApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputRecord,,"    class _userLoadListBySearchByUserName : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userLoadListBySearchByUserName(args.param, args.wsInputRecord);
        }
    }
",,testArgs.user.userLoadListBySearchByUserName.execute();,public _userLoadListBySearchByUserName userLoadListBySearchByUserName;,,,"userLoadListBySearchByUserName = new _userLoadListBySearchByUserName();
userLoadListBySearchByUserName.init(this.testArgs.user);",,,"    public userDetails[] userLoadListBySearchByUserName(bbWsParams @params, userDetails inputRecord)    {
        return base.UserLoadListBySearchByUserName(@params, inputRecord);
    }","
    //User Load List BySearchByUserName
    public userDetails[] UserLoadListBySearchByUserName(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userLoadListBySearchByUserName(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserLoadListBySearchByUserName"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userLoadListObservedByObserverId,userLoadListObservedByObserverId (bb_platform),UserLoadListObservedByObserverId,User,user,Load,ObservedByObserverId,List,Record,userLoadListObservedByObserverId,List<UserDetails>,userDetails[],inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,LoadListObservedByObserverId,WithUserInput,UserAccessPack.UserArgumentsWithUserInput,UserApiProcessor,        UserApiProcessor.start(args);,"                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListObservedByObserverId"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<UserDetails> userLoadListObservedByObserverId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userLoadListObservedByObserverId()"", this);
        UserAccessPack.UserArgumentsWithUserInput args
                = UserAccessPack.UserArgumentsWithUserInput.create(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListObservedByObserverId"");
        UserApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputRecord,,"    class _userLoadListObservedByObserverId : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userLoadListObservedByObserverId(args.param, args.wsInputRecord);
        }
    }
",,testArgs.user.userLoadListObservedByObserverId.execute();,public _userLoadListObservedByObserverId userLoadListObservedByObserverId;,,,"userLoadListObservedByObserverId = new _userLoadListObservedByObserverId();
userLoadListObservedByObserverId.init(this.testArgs.user);",,,"    public userDetails[] userLoadListObservedByObserverId(bbWsParams @params, userDetails inputRecord)    {
        return base.UserLoadListObservedByObserverId(@params, inputRecord);
    }","
    //User Load List ObservedByObserverId
    public userDetails[] UserLoadListObservedByObserverId(bbWsParams @params, userDetails inputRecord)
    {
        try
        {
           return bbAdded.userLoadListObservedByObserverId(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserLoadListObservedByObserverId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userLoadListByCourseId,userLoadListByCourseId (bb_platform),UserLoadListByCourseId,User,user,Load,ByCourseId,List,Record,userLoadListByCourseId,List<UserDetails>,userDetails[],inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,LoadListByCourseId,WithUserAndCourseInput,UserAccessPack.UserArgumentsWithUserAndCourseInput,UserApiProcessor,"            BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndCourseInput> api_proc
                = new BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndCourseInput>();
            api_proc.initialize(args);
            api_proc.run();
","                = new UserAccessPack.UserArgumentsWithUserAndCourseInput();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListByCourseId"");
        args.setInputCourseRecord(inputCourseRecord);",Course,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord,
                    @WebParam(name = ""inputCourseRecord"") bbcrsws.CourseDetails inputCourseRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord, courseDetails inputCourseRecord)","(@params, inputRecord, inputCourseRecord);","    @WebMethod
    public List<UserDetails> userLoadListByCourseId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord,
                    @WebParam(name = ""inputCourseRecord"") bbcrsws.CourseDetails inputCourseRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userLoadListByCourseId()"", this);
        UserAccessPack.UserArgumentsWithUserAndCourseInput args
                = new UserAccessPack.UserArgumentsWithUserAndCourseInput();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListByCourseId"");
        args.setInputCourseRecord(inputCourseRecord);
            BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndCourseInput> api_proc
                = new BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndCourseInput>();
            api_proc.initialize(args);
            api_proc.run();

        return args.getResultList();
    }",,,,args.wsResultArray,"args.wsInputRecord, args.testArgs.course.wsInputRecord",,"    class _userLoadListByCourseId : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userLoadListByCourseId(args.param, args.wsInputRecord, args.testArgs.course.wsInputRecord);
        }
    }
",,testArgs.user.userLoadListByCourseId.execute();,public _userLoadListByCourseId userLoadListByCourseId;,,,"userLoadListByCourseId = new _userLoadListByCourseId();
userLoadListByCourseId.init(this.testArgs.user);",,,"    public userDetails[] userLoadListByCourseId(bbWsParams @params, userDetails inputRecord, courseDetails inputCourseRecord)    {
        return base.UserLoadListByCourseId(@params, inputRecord, inputCourseRecord);
    }","
    //User Load List ByCourseId
    public userDetails[] UserLoadListByCourseId(bbWsParams @params, userDetails inputRecord, courseDetails inputCourseRecord)
    {
        try
        {
           return bbAdded.userLoadListByCourseId(@params, inputRecord, inputCourseRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserLoadListByCourseId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userLoadListAvailableObserversByCourseId,userLoadListAvailableObserversByCourseId (bb_platform),UserLoadListAvailableObserversByCourseId,User,user,Load,AvailableObserversByCourseId,List,Record,userLoadListAvailableObserversByCourseId,List<UserDetails>,userDetails[],inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,LoadListAvailableObserversByCourseId,WithUserAndCourseInput,UserAccessPack.UserArgumentsWithUserAndCourseInput,UserApiProcessor,"            BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndCourseInput> api_proc
                = new BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndCourseInput>();
            api_proc.initialize(args);
            api_proc.run();
","                = new UserAccessPack.UserArgumentsWithUserAndCourseInput();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListAvailableObserversByCourseId"");
        args.setInputCourseRecord(inputCourseRecord);",Course,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord,
                    @WebParam(name = ""inputCourseRecord"") bbcrsws.CourseDetails inputCourseRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord, courseDetails inputCourseRecord)","(@params, inputRecord, inputCourseRecord);","    @WebMethod
    public List<UserDetails> userLoadListAvailableObserversByCourseId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord,
                    @WebParam(name = ""inputCourseRecord"") bbcrsws.CourseDetails inputCourseRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userLoadListAvailableObserversByCourseId()"", this);
        UserAccessPack.UserArgumentsWithUserAndCourseInput args
                = new UserAccessPack.UserArgumentsWithUserAndCourseInput();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListAvailableObserversByCourseId"");
        args.setInputCourseRecord(inputCourseRecord);
            BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndCourseInput> api_proc
                = new BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndCourseInput>();
            api_proc.initialize(args);
            api_proc.run();

        return args.getResultList();
    }",,,,args.wsResultArray,"args.wsInputRecord, args.testArgs.course.wsInputRecord",,"    class _userLoadListAvailableObserversByCourseId : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userLoadListAvailableObserversByCourseId(args.param, args.wsInputRecord, args.testArgs.course.wsInputRecord);
        }
    }
",,testArgs.user.userLoadListAvailableObserversByCourseId.execute();,public _userLoadListAvailableObserversByCourseId userLoadListAvailableObserversByCourseId;,,,"userLoadListAvailableObserversByCourseId = new _userLoadListAvailableObserversByCourseId();
userLoadListAvailableObserversByCourseId.init(this.testArgs.user);",,,"    public userDetails[] userLoadListAvailableObserversByCourseId(bbWsParams @params, userDetails inputRecord, courseDetails inputCourseRecord)    {
        return base.UserLoadListAvailableObserversByCourseId(@params, inputRecord, inputCourseRecord);
    }","
    //User Load List AvailableObserversByCourseId
    public userDetails[] UserLoadListAvailableObserversByCourseId(bbWsParams @params, userDetails inputRecord, courseDetails inputCourseRecord)
    {
        try
        {
           return bbAdded.userLoadListAvailableObserversByCourseId(@params, inputRecord, inputCourseRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserLoadListAvailableObserversByCourseId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userLoadListByGroupId,userLoadListByGroupId (bb_platform),UserLoadListByGroupId,User,user,Load,ByGroupId,List,Record,userLoadListByGroupId,List<UserDetails>,userDetails[],inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,LoadListByGroupId,WithUserAndGroupInput,UserAccessPack.UserArgumentsWithUserAndGroupInput,UserApiProcessor,"            BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndGroupInput> api_proc
                = new BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndGroupInput>();
            api_proc.initialize(args);
            api_proc.run();
","                = new UserAccessPack.UserArgumentsWithUserAndGroupInput();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListByGroupId"");
        args.setInputGroupRecord(inputGroupRecord);",Group,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord,
                    @WebParam(name = ""inputGroupRecord"") bbgrpws.GroupDetails inputGroupRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord, groupDetails inputGroupRecord)","(@params, inputRecord, inputGroupRecord);","    @WebMethod
    public List<UserDetails> userLoadListByGroupId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord,
                    @WebParam(name = ""inputGroupRecord"") bbgrpws.GroupDetails inputGroupRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userLoadListByGroupId()"", this);
        UserAccessPack.UserArgumentsWithUserAndGroupInput args
                = new UserAccessPack.UserArgumentsWithUserAndGroupInput();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListByGroupId"");
        args.setInputGroupRecord(inputGroupRecord);
            BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndGroupInput> api_proc
                = new BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndGroupInput>();
            api_proc.initialize(args);
            api_proc.run();

        return args.getResultList();
    }",,,,,,,,,testArgs.user.userLoadListByGroupId.execute();,,,,,,,"    public userDetails[] userLoadListByGroupId(bbWsParams @params, userDetails inputRecord, groupDetails inputGroupRecord)    {
        return base.UserLoadListByGroupId(@params, inputRecord, inputGroupRecord);
    }","
    //User Load List ByGroupId
    public userDetails[] UserLoadListByGroupId(bbWsParams @params, userDetails inputRecord, groupDetails inputGroupRecord)
    {
        try
        {
           return bbAdded.userLoadListByGroupId(@params, inputRecord, inputGroupRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserLoadListByGroupId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
userLoadListByPrimaryPortalRoleId,userLoadListByPrimaryPortalRoleId (bb_platform),UserLoadListByPrimaryPortalRoleId,User,user,Load,ByPrimaryPortalRoleId,List,Record,userLoadListByPrimaryPortalRoleId,List<UserDetails>,userDetails[],inputRecord,"@WebParam(name = ""inputRecord"") UserDetails inputRecord",userDetails inputRecord,LoadListByPrimaryPortalRoleId,WithUserAndRoleInput,UserAccessPack.UserArgumentsWithUserAndRoleInput,UserApiProcessor,"            BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndRoleInput> api_proc
                = new BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndRoleInput>();
            api_proc.initialize(args);
            api_proc.run();
","                = new UserAccessPack.UserArgumentsWithUserAndRoleInput();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListByPrimaryPortalRoleId"");
        args.setInputRoleRecord(inputRoleRecord);",Role,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord,
                    @WebParam(name = ""inputRoleRecord"") bbuws.RoleDetails inputRoleRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, userDetails inputRecord, roleDetails inputRoleRecord)","(@params, inputRecord, inputRoleRecord);","    @WebMethod
    public List<UserDetails> userLoadListByPrimaryPortalRoleId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") UserDetails inputRecord,
                    @WebParam(name = ""inputRoleRecord"") bbuws.RoleDetails inputRoleRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered userLoadListByPrimaryPortalRoleId()"", this);
        UserAccessPack.UserArgumentsWithUserAndRoleInput args
                = new UserAccessPack.UserArgumentsWithUserAndRoleInput();
        args.initialize(UserDetails.class, params, inputRecord,
                    UserAccessPack.class.getName(), ""LoadListByPrimaryPortalRoleId"");
        args.setInputRoleRecord(inputRoleRecord);
            BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndRoleInput> api_proc
                = new BbWsApiProcessor<UserAccessPack.UserArgumentsWithUserAndRoleInput>();
            api_proc.initialize(args);
            api_proc.run();

        return args.getResultList();
    }",,,,args.wsResultArray,args.wsInputRecord,,"    class _userLoadListByPrimaryPortalRoleId : _userTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultArray = args.bbWs.userLoadListByPrimaryPortalRoleId(args.param, args.wsInputRecord);
        }
    }
",,testArgs.user.userLoadListByPrimaryPortalRoleId.execute();,public _userLoadListByPrimaryPortalRoleId userLoadListByPrimaryPortalRoleId;,,},"userLoadListByPrimaryPortalRoleId = new _userLoadListByPrimaryPortalRoleId();
userLoadListByPrimaryPortalRoleId.init(this.testArgs.user);",,},"    public userDetails[] userLoadListByPrimaryPortalRoleId(bbWsParams @params, userDetails inputRecord, roleDetails inputRoleRecord)    {
        return base.UserLoadListByPrimaryPortalRoleId(@params, inputRecord, inputRoleRecord);
    }","
    //User Load List ByPrimaryPortalRoleId
    public userDetails[] UserLoadListByPrimaryPortalRoleId(bbWsParams @params, userDetails inputRecord, roleDetails inputRoleRecord)
    {
        try
        {
           return bbAdded.userLoadListByPrimaryPortalRoleId(@params, inputRecord, inputRoleRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.UserLoadListByPrimaryPortalRoleId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleLoadRecordById,portalRoleLoadRecordById (bb_platform),PortalRoleLoadRecordById,PortalRole,portalRole,Load,ById,Record,Record,portalRoleLoadRecordById,PortalRoleDetails,portalRoleDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,LoadRecordById,,PortalRoleAccessPack.PortalRoleArguments,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleDetails portalRoleLoadRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleLoadRecordById()"", this);
        PortalRoleAccessPack.PortalRoleArguments args
                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.userLoadRecordByName.preAction();
            args.userLoadRecordByName.executeImp();
            String id = args.wsResultRecord.id;
            ClearInputs();
            args.wsInputRecord.id ","    class _portalRoleLoadRecordById : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleLoadRecordById(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.userLoadRecordByName.preAction();
            args.userLoadRecordByName.executeImp();
            String id = args.wsResultRecord.id;
            ClearInputs();
            args.wsInputRecord.id     }
",,testArgs.portalRole.portalRoleLoadRecordById.execute();,public _portalRoleLoadRecordById portalRoleLoadRecordById;,,,"portalRoleLoadRecordById = new _portalRoleLoadRecordById();
portalRoleLoadRecordById.init(this.testArgs.portalRole);",,,"    public portalRoleDetails portalRoleLoadRecordById(bbWsParams @params, portalRoleDetails inputRecord)    {
        return base.PortalRoleLoadRecordById(@params, inputRecord);
    }","
    //PortalRole Load Record ById
    public portalRoleDetails PortalRoleLoadRecordById(bbWsParams @params, portalRoleDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleLoadRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleLoadRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleLoadRecordByRoleId,portalRoleLoadRecordByRoleId (bb_platform),PortalRoleLoadRecordByRoleId,PortalRole,portalRole,Load,ByRoleId,Record,Record,portalRoleLoadRecordByRoleId,PortalRoleDetails,portalRoleDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,LoadRecordByRoleId,,PortalRoleAccessPack.PortalRoleArguments,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadRecordByRoleId"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleDetails portalRoleLoadRecordByRoleId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleLoadRecordByRoleId()"", this);
        PortalRoleAccessPack.PortalRoleArguments args
                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadRecordByRoleId"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleLoadRecordByRoleId : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleLoadRecordByRoleId(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRoleLoadRecordByRoleId.execute();,public _portalRoleLoadRecordByRoleId portalRoleLoadRecordByRoleId;,,,"portalRoleLoadRecordByRoleId = new _portalRoleLoadRecordByRoleId();
portalRoleLoadRecordByRoleId.init(this.testArgs.portalRole);",,,"    public portalRoleDetails portalRoleLoadRecordByRoleId(bbWsParams @params, portalRoleDetails inputRecord)    {
        return base.PortalRoleLoadRecordByRoleId(@params, inputRecord);
    }","
    //PortalRole Load Record ByRoleId
    public portalRoleDetails PortalRoleLoadRecordByRoleId(bbWsParams @params, portalRoleDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleLoadRecordByRoleId(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleLoadRecordByRoleId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleLoadRecordByRoleName,portalRoleLoadRecordByRoleName (bb_platform),PortalRoleLoadRecordByRoleName,PortalRole,portalRole,Load,ByRoleName,Record,Record,portalRoleLoadRecordByRoleName,PortalRoleDetails,portalRoleDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,LoadRecordByRoleName,,PortalRoleAccessPack.PortalRoleArguments,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadRecordByRoleName"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleDetails portalRoleLoadRecordByRoleName
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleLoadRecordByRoleName()"", this);
        PortalRoleAccessPack.PortalRoleArguments args
                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadRecordByRoleName"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleLoadRecordByRoleName : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleLoadRecordByRoleName(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRoleLoadRecordByRoleName.execute();,public _portalRoleLoadRecordByRoleName portalRoleLoadRecordByRoleName;,,,"portalRoleLoadRecordByRoleName = new _portalRoleLoadRecordByRoleName();
portalRoleLoadRecordByRoleName.init(this.testArgs.portalRole);",,,"    public portalRoleDetails portalRoleLoadRecordByRoleName(bbWsParams @params, portalRoleDetails inputRecord)    {
        return base.PortalRoleLoadRecordByRoleName(@params, inputRecord);
    }","
    //PortalRole Load Record ByRoleName
    public portalRoleDetails PortalRoleLoadRecordByRoleName(bbWsParams @params, portalRoleDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleLoadRecordByRoleName(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleLoadRecordByRoleName"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleLoadRecordDefault,portalRoleLoadRecordDefault (bb_platform),PortalRoleLoadRecordDefault,PortalRole,portalRole,Load,Default,Record,Record,portalRoleLoadRecordDefault,PortalRoleDetails,portalRoleDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,LoadRecordDefault,,PortalRoleAccessPack.PortalRoleArguments,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadRecordDefault"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleDetails portalRoleLoadRecordDefault
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleLoadRecordDefault()"", this);
        PortalRoleAccessPack.PortalRoleArguments args
                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadRecordDefault"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleLoadRecordDefault : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleLoadRecordDefault(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRoleLoadRecordDefault.execute();,public _portalRoleLoadRecordDefault portalRoleLoadRecordDefault;,,,"portalRoleLoadRecordDefault = new _portalRoleLoadRecordDefault();
portalRoleLoadRecordDefault.init(this.testArgs.portalRole);",,,"    public portalRoleDetails portalRoleLoadRecordDefault(bbWsParams @params, portalRoleDetails inputRecord)    {
        return base.PortalRoleLoadRecordDefault(@params, inputRecord);
    }","
    //PortalRole Load Record Default
    public portalRoleDetails PortalRoleLoadRecordDefault(bbWsParams @params, portalRoleDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleLoadRecordDefault(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleLoadRecordDefault"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleLoadListRemovable,portalRoleLoadListRemovable (bb_platform),PortalRoleLoadListRemovable,PortalRole,portalRole,Load,Removable,List,Record,portalRoleLoadListRemovable,List<PortalRoleDetails>,portalRoleDetails[],inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,LoadListRemovable,,PortalRoleAccessPack.PortalRoleArguments,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadListRemovable"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<PortalRoleDetails> portalRoleLoadListRemovable
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleLoadListRemovable()"", this);
        PortalRoleAccessPack.PortalRoleArguments args
                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadListRemovable"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleLoadListRemovable : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleLoadListRemovable(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRoleLoadListRemovable.execute();,public _portalRoleLoadListRemovable portalRoleLoadListRemovable;,,,"portalRoleLoadListRemovable = new _portalRoleLoadListRemovable();
portalRoleLoadListRemovable.init(this.testArgs.portalRole);",,,"    public portalRoleDetails[] portalRoleLoadListRemovable(bbWsParams @params, portalRoleDetails inputRecord)    {
        return base.PortalRoleLoadListRemovable(@params, inputRecord);
    }","
    //PortalRole Load List Removable
    public portalRoleDetails[] PortalRoleLoadListRemovable(bbWsParams @params, portalRoleDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleLoadListRemovable(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleLoadListRemovable"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleLoadListAll,portalRoleLoadListAll (bb_platform),PortalRoleLoadListAll,PortalRole,portalRole,Load,All,List,Record,portalRoleLoadListAll,List<PortalRoleDetails>,portalRoleDetails[],inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,LoadListAll,,PortalRoleAccessPack.PortalRoleArguments,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadListAll"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<PortalRoleDetails> portalRoleLoadListAll
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleLoadListAll()"", this);
        PortalRoleAccessPack.PortalRoleArguments args
                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadListAll"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleLoadListAll : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleLoadListAll(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRoleLoadListAll.execute();,public _portalRoleLoadListAll portalRoleLoadListAll;,,,"portalRoleLoadListAll = new _portalRoleLoadListAll();
portalRoleLoadListAll.init(this.testArgs.portalRole);",,,"    public portalRoleDetails[] portalRoleLoadListAll(bbWsParams @params, portalRoleDetails inputRecord)    {
        return base.PortalRoleLoadListAll(@params, inputRecord);
    }","
    //PortalRole Load List All
    public portalRoleDetails[] PortalRoleLoadListAll(bbWsParams @params, portalRoleDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleLoadListAll(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleLoadListAll"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleLoadListAvailable,portalRoleLoadListAvailable (bb_platform),PortalRoleLoadListAvailable,PortalRole,portalRole,Load,Available,List,Record,portalRoleLoadListAvailable,List<PortalRoleDetails>,portalRoleDetails[],inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,LoadListAvailable,,PortalRoleAccessPack.PortalRoleArguments,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadListAvailable"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<PortalRoleDetails> portalRoleLoadListAvailable
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleLoadListAvailable()"", this);
        PortalRoleAccessPack.PortalRoleArguments args
                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadListAvailable"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleLoadListAvailable : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleLoadListAvailable(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRoleLoadListAvailable.execute();,public _portalRoleLoadListAvailable portalRoleLoadListAvailable;,,,"portalRoleLoadListAvailable = new _portalRoleLoadListAvailable();
portalRoleLoadListAvailable.init(this.testArgs.portalRole);",,,"    public portalRoleDetails[] portalRoleLoadListAvailable(bbWsParams @params, portalRoleDetails inputRecord)    {
        return base.PortalRoleLoadListAvailable(@params, inputRecord);
    }","
    //PortalRole Load List Available
    public portalRoleDetails[] PortalRoleLoadListAvailable(bbWsParams @params, portalRoleDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleLoadListAvailable(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleLoadListAvailable"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleLoadRecordPrimaryRoleByUserId,portalRoleLoadRecordPrimaryRoleByUserId (bb_platform),PortalRoleLoadRecordPrimaryRoleByUserId,PortalRole,portalRole,Load,PrimaryRoleByUserId,Record,Record,portalRoleLoadRecordPrimaryRoleByUserId,PortalRoleDetails,portalRoleDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,LoadRecordPrimaryRoleByUserId,WithUserInput,PortalRoleAccessPack.PortalRoleArgumentsWithUserInput,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArgumentsWithUserInput();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadRecordPrimaryRoleByUserId"");
        args.setInputUserRecord(inputUserRecord);",User,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord,
                    @WebParam(name = ""inputUserRecord"") bbuws.UserDetails inputUserRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord, userDetails inputUserRecord)","(@params, inputRecord, inputUserRecord);","    @WebMethod
    public PortalRoleDetails portalRoleLoadRecordPrimaryRoleByUserId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord,
                    @WebParam(name = ""inputUserRecord"") bbuws.UserDetails inputUserRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleLoadRecordPrimaryRoleByUserId()"", this);
        PortalRoleAccessPack.PortalRoleArgumentsWithUserInput args
                = new PortalRoleAccessPack.PortalRoleArgumentsWithUserInput();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadRecordPrimaryRoleByUserId"");
        args.setInputUserRecord(inputUserRecord);
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleLoadRecordPrimaryRoleByUserId : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleLoadRecordPrimaryRoleByUserId(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRoleLoadRecordPrimaryRoleByUserId.execute();,public _portalRoleLoadRecordPrimaryRoleByUserId portalRoleLoadRecordPrimaryRoleByUserId;,,,"portalRoleLoadRecordPrimaryRoleByUserId = new _portalRoleLoadRecordPrimaryRoleByUserId();
portalRoleLoadRecordPrimaryRoleByUserId.init(this.testArgs.portalRole);",,,"    public portalRoleDetails portalRoleLoadRecordPrimaryRoleByUserId(bbWsParams @params, portalRoleDetails inputRecord, userDetails inputUserRecord)    {
        return base.PortalRoleLoadRecordPrimaryRoleByUserId(@params, inputRecord, inputUserRecord);
    }","
    //PortalRole Load Record PrimaryRoleByUserId
    public portalRoleDetails PortalRoleLoadRecordPrimaryRoleByUserId(bbWsParams @params, portalRoleDetails inputRecord, userDetails inputUserRecord)
    {
        try
        {
           return bbAdded.portalRoleLoadRecordPrimaryRoleByUserId(@params, inputRecord, inputUserRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleLoadRecordPrimaryRoleByUserId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleLoadListAllByUserId,portalRoleLoadListAllByUserId (bb_platform),PortalRoleLoadListAllByUserId,PortalRole,portalRole,Load,AllByUserId,List,Record,portalRoleLoadListAllByUserId,List<PortalRoleDetails>,portalRoleDetails[],inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,LoadListAllByUserId,WithUserInput,PortalRoleAccessPack.PortalRoleArgumentsWithUserInput,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArgumentsWithUserInput();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadListAllByUserId"");
        args.setInputUserRecord(inputUserRecord);",User,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord,
                    @WebParam(name = ""inputUserRecord"") bbuws.UserDetails inputUserRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord, userDetails inputUserRecord)","(@params, inputRecord, inputUserRecord);","    @WebMethod
    public List<PortalRoleDetails> portalRoleLoadListAllByUserId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord,
                    @WebParam(name = ""inputUserRecord"") bbuws.UserDetails inputUserRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleLoadListAllByUserId()"", this);
        PortalRoleAccessPack.PortalRoleArgumentsWithUserInput args
                = new PortalRoleAccessPack.PortalRoleArgumentsWithUserInput();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadListAllByUserId"");
        args.setInputUserRecord(inputUserRecord);
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleLoadListAllByUserId : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleLoadListAllByUserId(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRoleLoadListAllByUserId.execute();,public _portalRoleLoadListAllByUserId portalRoleLoadListAllByUserId;,,,"portalRoleLoadListAllByUserId = new _portalRoleLoadListAllByUserId();
portalRoleLoadListAllByUserId.init(this.testArgs.portalRole);",,,"    public portalRoleDetails[] portalRoleLoadListAllByUserId(bbWsParams @params, portalRoleDetails inputRecord, userDetails inputUserRecord)    {
        return base.PortalRoleLoadListAllByUserId(@params, inputRecord, inputUserRecord);
    }","
    //PortalRole Load List AllByUserId
    public portalRoleDetails[] PortalRoleLoadListAllByUserId(bbWsParams @params, portalRoleDetails inputRecord, userDetails inputUserRecord)
    {
        try
        {
           return bbAdded.portalRoleLoadListAllByUserId(@params, inputRecord, inputUserRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleLoadListAllByUserId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleLoadListSecondaryRolesByUserId,portalRoleLoadListSecondaryRolesByUserId (bb_platform),PortalRoleLoadListSecondaryRolesByUserId,PortalRole,portalRole,Load,SecondaryRolesByUserId,List,Record,portalRoleLoadListSecondaryRolesByUserId,List<PortalRoleDetails>,portalRoleDetails[],inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,LoadListSecondaryRolesByUserId,WithUserInput,PortalRoleAccessPack.PortalRoleArgumentsWithUserInput,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArgumentsWithUserInput();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadListSecondaryRolesByUserId"");
        args.setInputUserRecord(inputUserRecord);",User,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord,
                    @WebParam(name = ""inputUserRecord"") bbuws.UserDetails inputUserRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord, userDetails inputUserRecord)","(@params, inputRecord, inputUserRecord);","    @WebMethod
    public List<PortalRoleDetails> portalRoleLoadListSecondaryRolesByUserId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord,
                    @WebParam(name = ""inputUserRecord"") bbuws.UserDetails inputUserRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleLoadListSecondaryRolesByUserId()"", this);
        PortalRoleAccessPack.PortalRoleArgumentsWithUserInput args
                = new PortalRoleAccessPack.PortalRoleArgumentsWithUserInput();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""LoadListSecondaryRolesByUserId"");
        args.setInputUserRecord(inputUserRecord);
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleLoadListSecondaryRolesByUserId : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleLoadListSecondaryRolesByUserId(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRoleLoadListSecondaryRolesByUserId.execute();,public _portalRoleLoadListSecondaryRolesByUserId portalRoleLoadListSecondaryRolesByUserId;,,,"portalRoleLoadListSecondaryRolesByUserId = new _portalRoleLoadListSecondaryRolesByUserId();
portalRoleLoadListSecondaryRolesByUserId.init(this.testArgs.portalRole);",,,"    public portalRoleDetails[] portalRoleLoadListSecondaryRolesByUserId(bbWsParams @params, portalRoleDetails inputRecord, userDetails inputUserRecord)    {
        return base.PortalRoleLoadListSecondaryRolesByUserId(@params, inputRecord, inputUserRecord);
    }","
    //PortalRole Load List SecondaryRolesByUserId
    public portalRoleDetails[] PortalRoleLoadListSecondaryRolesByUserId(bbWsParams @params, portalRoleDetails inputRecord, userDetails inputUserRecord)
    {
        try
        {
           return bbAdded.portalRoleLoadListSecondaryRolesByUserId(@params, inputRecord, inputUserRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleLoadListSecondaryRolesByUserId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleInsertRecordById,portalRoleInsertRecordById (bb_platform),PortalRoleInsertRecordById,PortalRole,portalRole,Insert,ById,Record,Record,portalRoleInsertRecordById,PortalRoleDetails,portalRoleDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,InsertRecordById,,PortalRoleAccessPack.PortalRoleArguments,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""InsertRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleDetails portalRoleInsertRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleInsertRecordById()"", this);
        PortalRoleAccessPack.PortalRoleArguments args
                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""InsertRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleInsertRecordById : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleInsertRecordById(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRoleInsertRecordById.execute();,public _portalRoleInsertRecordById portalRoleInsertRecordById;,,,"portalRoleInsertRecordById = new _portalRoleInsertRecordById();
portalRoleInsertRecordById.init(this.testArgs.portalRole);",,,"    public portalRoleDetails portalRoleInsertRecordById(bbWsParams @params, portalRoleDetails inputRecord)    {
        return base.PortalRoleInsertRecordById(@params, inputRecord);
    }","
    //PortalRole Insert Record ById
    public portalRoleDetails PortalRoleInsertRecordById(bbWsParams @params, portalRoleDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleInsertRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleInsertRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleUpdateRecordById,portalRoleUpdateRecordById (bb_platform),PortalRoleUpdateRecordById,PortalRole,portalRole,Update,ById,Record,Record,portalRoleUpdateRecordById,PortalRoleDetails,portalRoleDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,UpdateRecordById,,PortalRoleAccessPack.PortalRoleArguments,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""UpdateRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleDetails portalRoleUpdateRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleUpdateRecordById()"", this);
        PortalRoleAccessPack.PortalRoleArguments args
                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""UpdateRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleUpdateRecordById : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleUpdateRecordById(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRoleUpdateRecordById.execute();,public _portalRoleUpdateRecordById portalRoleUpdateRecordById;,,,"portalRoleUpdateRecordById = new _portalRoleUpdateRecordById();
portalRoleUpdateRecordById.init(this.testArgs.portalRole);",,,"    public portalRoleDetails portalRoleUpdateRecordById(bbWsParams @params, portalRoleDetails inputRecord)    {
        return base.PortalRoleUpdateRecordById(@params, inputRecord);
    }","
    //PortalRole Update Record ById
    public portalRoleDetails PortalRoleUpdateRecordById(bbWsParams @params, portalRoleDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleUpdateRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleUpdateRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRolePersistRecordById,portalRolePersistRecordById (bb_platform),PortalRolePersistRecordById,PortalRole,portalRole,Persist,ById,Record,Record,portalRolePersistRecordById,PortalRoleDetails,portalRoleDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,PersistRecordById,,PortalRoleAccessPack.PortalRoleArguments,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""PersistRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleDetails portalRolePersistRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRolePersistRecordById()"", this);
        PortalRoleAccessPack.PortalRoleArguments args
                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""PersistRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRolePersistRecordById : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRolePersistRecordById(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRolePersistRecordById.execute();,public _portalRolePersistRecordById portalRolePersistRecordById;,,,"portalRolePersistRecordById = new _portalRolePersistRecordById();
portalRolePersistRecordById.init(this.testArgs.portalRole);",,,"    public portalRoleDetails portalRolePersistRecordById(bbWsParams @params, portalRoleDetails inputRecord)    {
        return base.PortalRolePersistRecordById(@params, inputRecord);
    }","
    //PortalRole Persist Record ById
    public portalRoleDetails PortalRolePersistRecordById(bbWsParams @params, portalRoleDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRolePersistRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRolePersistRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleDeleteRecordById,portalRoleDeleteRecordById (bb_platform),PortalRoleDeleteRecordById,PortalRole,portalRole,Delete,ById,Record,Record,portalRoleDeleteRecordById,PortalRoleDetails,portalRoleDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord",portalRoleDetails inputRecord,DeleteRecordById,,PortalRoleAccessPack.PortalRoleArguments,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""DeleteRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleDetails portalRoleDeleteRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleDeleteRecordById()"", this);
        PortalRoleAccessPack.PortalRoleArguments args
                = new PortalRoleAccessPack.PortalRoleArguments();
        args.initialize(PortalRoleDetails.class, params, inputRecord,
                    PortalRoleAccessPack.class.getName(), ""DeleteRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleDeleteRecordById : _portalRoleTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleDeleteRecordById(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRole.portalRoleDeleteRecordById.execute();,public _portalRoleDeleteRecordById portalRoleDeleteRecordById;,,,"portalRoleDeleteRecordById = new _portalRoleDeleteRecordById();
portalRoleDeleteRecordById.init(this.testArgs.portalRole);",,,"    public portalRoleDetails portalRoleDeleteRecordById(bbWsParams @params, portalRoleDetails inputRecord)    {
        return base.PortalRoleDeleteRecordById(@params, inputRecord);
    }","
    //PortalRole Delete Record ById
    public portalRoleDetails PortalRoleDeleteRecordById(bbWsParams @params, portalRoleDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleDeleteRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleDeleteRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
observerAssociationLoadListByTemplate,observerAssociationLoadListByTemplate (cms_admin),ObserverAssociationLoadListByTemplate,ObserverAssociation,observerAssociation,Load,ByTemplate,List,Record,observerAssociationLoadListByTemplate,List<ObserverAssociationDetails>,observerAssociationDetails[],inputRecord,"@WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord",observerAssociationDetails inputRecord,LoadListByTemplate,_ADMIN_DATA,ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputRecord,
                    ObserverAssociationAccessPack.class.getName(), ""LoadListByTemplate"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, observerAssociationDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<ObserverAssociationDetails> observerAssociationLoadListByTemplate
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered observerAssociationLoadListByTemplate()"", this);
        ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA args
                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputRecord,
                    ObserverAssociationAccessPack.class.getName(), ""LoadListByTemplate"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _observerAssociationLoadListByTemplate : _observerAssociationTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.observerAssociationLoadListByTemplate(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.observerAssociation.observerAssociationLoadListByTemplate.execute();,public _observerAssociationLoadListByTemplate observerAssociationLoadListByTemplate;,,,"observerAssociationLoadListByTemplate = new _observerAssociationLoadListByTemplate();
observerAssociationLoadListByTemplate.init(this.testArgs.observerAssociation);",,,"    public observerAssociationDetails[] observerAssociationLoadListByTemplate(bbWsParams @params, observerAssociationDetails inputRecord)    {
        return base.ObserverAssociationLoadListByTemplate(@params, inputRecord);
    }","
    //ObserverAssociation Load List ByTemplate
    public observerAssociationDetails[] ObserverAssociationLoadListByTemplate(bbWsParams @params, observerAssociationDetails inputRecord)
    {
        try
        {
           return bbAdded.observerAssociationLoadListByTemplate(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.ObserverAssociationLoadListByTemplate"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
observerAssociationLoadRecordByObserverAndUsersBatchUid,observerAssociationLoadRecordByObserverAndUsersBatchUid (cms_admin),ObserverAssociationLoadRecordByObserverAndUsersBatchUid,ObserverAssociation,observerAssociation,Load,ByObserverAndUsersBatchUid,Record,Record,observerAssociationLoadRecordByObserverAndUsersBatchUid,ObserverAssociationDetails,observerAssociationDetails,inputRecord,"@WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord",observerAssociationDetails inputRecord,LoadRecordByObserverAndUsersBatchUid,_ADMIN_DATA,ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputRecord,
                    ObserverAssociationAccessPack.class.getName(), ""LoadRecordByObserverAndUsersBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, observerAssociationDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public ObserverAssociationDetails observerAssociationLoadRecordByObserverAndUsersBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered observerAssociationLoadRecordByObserverAndUsersBatchUid()"", this);
        ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA args
                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputRecord,
                    ObserverAssociationAccessPack.class.getName(), ""LoadRecordByObserverAndUsersBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _observerAssociationLoadRecordByObserverAndUsersBatchUid : _observerAssociationTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.observerAssociationLoadRecordByObserverAndUsersBatchUid(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.observerAssociation.observerAssociationLoadRecordByObserverAndUsersBatchUid.execute();,public _observerAssociationLoadRecordByObserverAndUsersBatchUid observerAssociationLoadRecordByObserverAndUsersBatchUid;,,,"observerAssociationLoadRecordByObserverAndUsersBatchUid = new _observerAssociationLoadRecordByObserverAndUsersBatchUid();
observerAssociationLoadRecordByObserverAndUsersBatchUid.init(this.testArgs.observerAssociation);",,,"    public observerAssociationDetails observerAssociationLoadRecordByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails inputRecord)    {
        return base.ObserverAssociationLoadRecordByObserverAndUsersBatchUid(@params, inputRecord);
    }","
    //ObserverAssociation Load Record ByObserverAndUsersBatchUid
    public observerAssociationDetails ObserverAssociationLoadRecordByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails inputRecord)
    {
        try
        {
           return bbAdded.observerAssociationLoadRecordByObserverAndUsersBatchUid(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.ObserverAssociationLoadRecordByObserverAndUsersBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
observerAssociationInsertRecordByObserverAndUsersBatchUid,observerAssociationInsertRecordByObserverAndUsersBatchUid (cms_admin),ObserverAssociationInsertRecordByObserverAndUsersBatchUid,ObserverAssociation,observerAssociation,Insert,ByObserverAndUsersBatchUid,Record,Record,observerAssociationInsertRecordByObserverAndUsersBatchUid,ObserverAssociationDetails,observerAssociationDetails,inputRecord,"@WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord",observerAssociationDetails inputRecord,InsertRecordByObserverAndUsersBatchUid,_ADMIN_DATA,ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputRecord,
                    ObserverAssociationAccessPack.class.getName(), ""InsertRecordByObserverAndUsersBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, observerAssociationDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public ObserverAssociationDetails observerAssociationInsertRecordByObserverAndUsersBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered observerAssociationInsertRecordByObserverAndUsersBatchUid()"", this);
        ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA args
                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputRecord,
                    ObserverAssociationAccessPack.class.getName(), ""InsertRecordByObserverAndUsersBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _observerAssociationInsertRecordByObserverAndUsersBatchUid : _observerAssociationTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.observerAssociationInsertRecordByObserverAndUsersBatchUid(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.observerAssociation.observerAssociationInsertRecordByObserverAndUsersBatchUid.execute();,public _observerAssociationInsertRecordByObserverAndUsersBatchUid observerAssociationInsertRecordByObserverAndUsersBatchUid;,,,"observerAssociationInsertRecordByObserverAndUsersBatchUid = new _observerAssociationInsertRecordByObserverAndUsersBatchUid();
observerAssociationInsertRecordByObserverAndUsersBatchUid.init(this.testArgs.observerAssociation);",,,"    public observerAssociationDetails observerAssociationInsertRecordByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails inputRecord)    {
        return base.ObserverAssociationInsertRecordByObserverAndUsersBatchUid(@params, inputRecord);
    }","
    //ObserverAssociation Insert Record ByObserverAndUsersBatchUid
    public observerAssociationDetails ObserverAssociationInsertRecordByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails inputRecord)
    {
        try
        {
           return bbAdded.observerAssociationInsertRecordByObserverAndUsersBatchUid(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.ObserverAssociationInsertRecordByObserverAndUsersBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
observerAssociationPersistRecordByObserverAndUsersBatchUid,observerAssociationPersistRecordByObserverAndUsersBatchUid (cms_admin),ObserverAssociationPersistRecordByObserverAndUsersBatchUid,ObserverAssociation,observerAssociation,Persist,ByObserverAndUsersBatchUid,Record,Record,observerAssociationPersistRecordByObserverAndUsersBatchUid,ObserverAssociationDetails,observerAssociationDetails,inputRecord,"@WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord",observerAssociationDetails inputRecord,PersistRecordByObserverAndUsersBatchUid,_ADMIN_DATA,ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputRecord,
                    ObserverAssociationAccessPack.class.getName(), ""PersistRecordByObserverAndUsersBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, observerAssociationDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public ObserverAssociationDetails observerAssociationPersistRecordByObserverAndUsersBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered observerAssociationPersistRecordByObserverAndUsersBatchUid()"", this);
        ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA args
                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputRecord,
                    ObserverAssociationAccessPack.class.getName(), ""PersistRecordByObserverAndUsersBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _observerAssociationPersistRecordByObserverAndUsersBatchUid : _observerAssociationTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.observerAssociationPersistRecordByObserverAndUsersBatchUid(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.observerAssociation.observerAssociationPersistRecordByObserverAndUsersBatchUid.execute();,public _observerAssociationPersistRecordByObserverAndUsersBatchUid observerAssociationPersistRecordByObserverAndUsersBatchUid;,,,"observerAssociationPersistRecordByObserverAndUsersBatchUid = new _observerAssociationPersistRecordByObserverAndUsersBatchUid();
observerAssociationPersistRecordByObserverAndUsersBatchUid.init(this.testArgs.observerAssociation);",,,"    public observerAssociationDetails observerAssociationPersistRecordByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails inputRecord)    {
        return base.ObserverAssociationPersistRecordByObserverAndUsersBatchUid(@params, inputRecord);
    }","
    //ObserverAssociation Persist Record ByObserverAndUsersBatchUid
    public observerAssociationDetails ObserverAssociationPersistRecordByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails inputRecord)
    {
        try
        {
           return bbAdded.observerAssociationPersistRecordByObserverAndUsersBatchUid(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.ObserverAssociationPersistRecordByObserverAndUsersBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
observerAssociationDeleteRecordByObserverAndUsersBatchUid,observerAssociationDeleteRecordByObserverAndUsersBatchUid (cms_admin),ObserverAssociationDeleteRecordByObserverAndUsersBatchUid,ObserverAssociation,observerAssociation,Delete,ByObserverAndUsersBatchUid,Record,Record,observerAssociationDeleteRecordByObserverAndUsersBatchUid,ObserverAssociationDetails,observerAssociationDetails,inputRecord,"@WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord",observerAssociationDetails inputRecord,DeleteRecordByObserverAndUsersBatchUid,_ADMIN_DATA,ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputRecord,
                    ObserverAssociationAccessPack.class.getName(), ""DeleteRecordByObserverAndUsersBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, observerAssociationDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public ObserverAssociationDetails observerAssociationDeleteRecordByObserverAndUsersBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered observerAssociationDeleteRecordByObserverAndUsersBatchUid()"", this);
        ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA args
                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputRecord,
                    ObserverAssociationAccessPack.class.getName(), ""DeleteRecordByObserverAndUsersBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _observerAssociationDeleteRecordByObserverAndUsersBatchUid : _observerAssociationTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.observerAssociationDeleteRecordByObserverAndUsersBatchUid(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.observerAssociation.observerAssociationDeleteRecordByObserverAndUsersBatchUid.execute();,public _observerAssociationDeleteRecordByObserverAndUsersBatchUid observerAssociationDeleteRecordByObserverAndUsersBatchUid;,,,"observerAssociationDeleteRecordByObserverAndUsersBatchUid = new _observerAssociationDeleteRecordByObserverAndUsersBatchUid();
observerAssociationDeleteRecordByObserverAndUsersBatchUid.init(this.testArgs.observerAssociation);",,,"    public observerAssociationDetails observerAssociationDeleteRecordByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails inputRecord)    {
        return base.ObserverAssociationDeleteRecordByObserverAndUsersBatchUid(@params, inputRecord);
    }","
    //ObserverAssociation Delete Record ByObserverAndUsersBatchUid
    public observerAssociationDetails ObserverAssociationDeleteRecordByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails inputRecord)
    {
        try
        {
           return bbAdded.observerAssociationDeleteRecordByObserverAndUsersBatchUid(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.ObserverAssociationDeleteRecordByObserverAndUsersBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
observerAssociationLoadListByObserverAndUsersBatchUid,observerAssociationLoadListByObserverAndUsersBatchUid (cms_admin),ObserverAssociationLoadListByObserverAndUsersBatchUid,ObserverAssociation,observerAssociation,Load,ByObserverAndUsersBatchUid,List,List,observerAssociationLoadListByObserverAndUsersBatchUid,List<ObserverAssociationDetails>,observerAssociationDetails[],inputList,"@WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList",observerAssociationDetails[] inputList,LoadListByObserverAndUsersBatchUid,_ADMIN_DATA,ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputList,
                    ObserverAssociationAccessPack.class.getName(), ""LoadListByObserverAndUsersBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, observerAssociationDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<ObserverAssociationDetails> observerAssociationLoadListByObserverAndUsersBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered observerAssociationLoadListByObserverAndUsersBatchUid()"", this);
        ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA args
                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputList,
                    ObserverAssociationAccessPack.class.getName(), ""LoadListByObserverAndUsersBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputList.ToArray(),"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _observerAssociationLoadListByObserverAndUsersBatchUid : _observerAssociationTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.observerAssociationLoadListByObserverAndUsersBatchUid(args.param, args.wsInputList.ToArray());
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.observerAssociation.observerAssociationLoadListByObserverAndUsersBatchUid.execute();,public _observerAssociationLoadListByObserverAndUsersBatchUid observerAssociationLoadListByObserverAndUsersBatchUid;,,,"observerAssociationLoadListByObserverAndUsersBatchUid = new _observerAssociationLoadListByObserverAndUsersBatchUid();
observerAssociationLoadListByObserverAndUsersBatchUid.init(this.testArgs.observerAssociation);",,,"    public observerAssociationDetails[] observerAssociationLoadListByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails[] inputList)    {
        return base.ObserverAssociationLoadListByObserverAndUsersBatchUid(@params, inputList);
    }","
    //ObserverAssociation Load List ByObserverAndUsersBatchUid
    public observerAssociationDetails[] ObserverAssociationLoadListByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails[] inputList)
    {
        try
        {
           return bbAdded.observerAssociationLoadListByObserverAndUsersBatchUid(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.ObserverAssociationLoadListByObserverAndUsersBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
observerAssociationInsertListByObserverAndUsersBatchUid,observerAssociationInsertListByObserverAndUsersBatchUid (cms_admin),ObserverAssociationInsertListByObserverAndUsersBatchUid,ObserverAssociation,observerAssociation,Insert,ByObserverAndUsersBatchUid,List,List,observerAssociationInsertListByObserverAndUsersBatchUid,List<ObserverAssociationDetails>,observerAssociationDetails[],inputList,"@WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList",observerAssociationDetails[] inputList,InsertListByObserverAndUsersBatchUid,_ADMIN_DATA,ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputList,
                    ObserverAssociationAccessPack.class.getName(), ""InsertListByObserverAndUsersBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, observerAssociationDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<ObserverAssociationDetails> observerAssociationInsertListByObserverAndUsersBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered observerAssociationInsertListByObserverAndUsersBatchUid()"", this);
        ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA args
                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputList,
                    ObserverAssociationAccessPack.class.getName(), ""InsertListByObserverAndUsersBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputList.ToArray(),"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _observerAssociationInsertListByObserverAndUsersBatchUid : _observerAssociationTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.observerAssociationInsertListByObserverAndUsersBatchUid(args.param, args.wsInputList.ToArray());
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.observerAssociation.observerAssociationInsertListByObserverAndUsersBatchUid.execute();,public _observerAssociationInsertListByObserverAndUsersBatchUid observerAssociationInsertListByObserverAndUsersBatchUid;,,,"observerAssociationInsertListByObserverAndUsersBatchUid = new _observerAssociationInsertListByObserverAndUsersBatchUid();
observerAssociationInsertListByObserverAndUsersBatchUid.init(this.testArgs.observerAssociation);",,,"    public observerAssociationDetails[] observerAssociationInsertListByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails[] inputList)    {
        return base.ObserverAssociationInsertListByObserverAndUsersBatchUid(@params, inputList);
    }","
    //ObserverAssociation Insert List ByObserverAndUsersBatchUid
    public observerAssociationDetails[] ObserverAssociationInsertListByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails[] inputList)
    {
        try
        {
           return bbAdded.observerAssociationInsertListByObserverAndUsersBatchUid(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.ObserverAssociationInsertListByObserverAndUsersBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
observerAssociationPersistListByObserverAndUsersBatchUid,observerAssociationPersistListByObserverAndUsersBatchUid (cms_admin),ObserverAssociationPersistListByObserverAndUsersBatchUid,ObserverAssociation,observerAssociation,Persist,ByObserverAndUsersBatchUid,List,List,observerAssociationPersistListByObserverAndUsersBatchUid,List<ObserverAssociationDetails>,observerAssociationDetails[],inputList,"@WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList",observerAssociationDetails[] inputList,PersistListByObserverAndUsersBatchUid,_ADMIN_DATA,ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputList,
                    ObserverAssociationAccessPack.class.getName(), ""PersistListByObserverAndUsersBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, observerAssociationDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<ObserverAssociationDetails> observerAssociationPersistListByObserverAndUsersBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered observerAssociationPersistListByObserverAndUsersBatchUid()"", this);
        ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA args
                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputList,
                    ObserverAssociationAccessPack.class.getName(), ""PersistListByObserverAndUsersBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputList.ToArray(),"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _observerAssociationPersistListByObserverAndUsersBatchUid : _observerAssociationTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.observerAssociationPersistListByObserverAndUsersBatchUid(args.param, args.wsInputList.ToArray());
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.observerAssociation.observerAssociationPersistListByObserverAndUsersBatchUid.execute();,public _observerAssociationPersistListByObserverAndUsersBatchUid observerAssociationPersistListByObserverAndUsersBatchUid;,,,"observerAssociationPersistListByObserverAndUsersBatchUid = new _observerAssociationPersistListByObserverAndUsersBatchUid();
observerAssociationPersistListByObserverAndUsersBatchUid.init(this.testArgs.observerAssociation);",,,"    public observerAssociationDetails[] observerAssociationPersistListByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails[] inputList)    {
        return base.ObserverAssociationPersistListByObserverAndUsersBatchUid(@params, inputList);
    }","
    //ObserverAssociation Persist List ByObserverAndUsersBatchUid
    public observerAssociationDetails[] ObserverAssociationPersistListByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails[] inputList)
    {
        try
        {
           return bbAdded.observerAssociationPersistListByObserverAndUsersBatchUid(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.ObserverAssociationPersistListByObserverAndUsersBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
observerAssociationDeleteListByObserverAndUsersBatchUid,observerAssociationDeleteListByObserverAndUsersBatchUid (cms_admin),ObserverAssociationDeleteListByObserverAndUsersBatchUid,ObserverAssociation,observerAssociation,Delete,ByObserverAndUsersBatchUid,List,List,observerAssociationDeleteListByObserverAndUsersBatchUid,List<ObserverAssociationDetails>,observerAssociationDetails[],inputList,"@WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList",observerAssociationDetails[] inputList,DeleteListByObserverAndUsersBatchUid,_ADMIN_DATA,ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputList,
                    ObserverAssociationAccessPack.class.getName(), ""DeleteListByObserverAndUsersBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, observerAssociationDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<ObserverAssociationDetails> observerAssociationDeleteListByObserverAndUsersBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered observerAssociationDeleteListByObserverAndUsersBatchUid()"", this);
        ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA args
                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputList,
                    ObserverAssociationAccessPack.class.getName(), ""DeleteListByObserverAndUsersBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputList.ToArray(),"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _observerAssociationDeleteListByObserverAndUsersBatchUid : _observerAssociationTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.observerAssociationDeleteListByObserverAndUsersBatchUid(args.param, args.wsInputList.ToArray());
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.observerAssociation.observerAssociationDeleteListByObserverAndUsersBatchUid.execute();,public _observerAssociationDeleteListByObserverAndUsersBatchUid observerAssociationDeleteListByObserverAndUsersBatchUid;,,,"observerAssociationDeleteListByObserverAndUsersBatchUid = new _observerAssociationDeleteListByObserverAndUsersBatchUid();
observerAssociationDeleteListByObserverAndUsersBatchUid.init(this.testArgs.observerAssociation);",,,"    public observerAssociationDetails[] observerAssociationDeleteListByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails[] inputList)    {
        return base.ObserverAssociationDeleteListByObserverAndUsersBatchUid(@params, inputList);
    }","
    //ObserverAssociation Delete List ByObserverAndUsersBatchUid
    public observerAssociationDetails[] ObserverAssociationDeleteListByObserverAndUsersBatchUid(bbWsParams @params, observerAssociationDetails[] inputList)
    {
        try
        {
           return bbAdded.observerAssociationDeleteListByObserverAndUsersBatchUid(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.ObserverAssociationDeleteListByObserverAndUsersBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipLoadRecordById,portalRoleMembershipLoadRecordById (bb_platform),PortalRoleMembershipLoadRecordById,PortalRoleMembership,portalRoleMembership,Load,ById,Record,Record,portalRoleMembershipLoadRecordById,PortalRoleMembershipDetails,portalRoleMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,LoadRecordById,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleMembershipDetails portalRoleMembershipLoadRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipLoadRecordById()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.userLoadRecordByName.preAction();
            args.userLoadRecordByName.executeImp();
            String id = args.wsResultRecord.id;
            ClearInputs();
            args.wsInputRecord.id ","    class _portalRoleMembershipLoadRecordById : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleMembershipLoadRecordById(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.userLoadRecordByName.preAction();
            args.userLoadRecordByName.executeImp();
            String id = args.wsResultRecord.id;
            ClearInputs();
            args.wsInputRecord.id     }
",,testArgs.portalRoleMembership.portalRoleMembershipLoadRecordById.execute();,public _portalRoleMembershipLoadRecordById portalRoleMembershipLoadRecordById;,,,"portalRoleMembershipLoadRecordById = new _portalRoleMembershipLoadRecordById();
portalRoleMembershipLoadRecordById.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails portalRoleMembershipLoadRecordById(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipLoadRecordById(@params, inputRecord);
    }","
    //PortalRoleMembership Load Record ById
    public portalRoleMembershipDetails PortalRoleMembershipLoadRecordById(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipLoadRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipLoadRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipLoadRecordByUserIdAndPortalRoleId,portalRoleMembershipLoadRecordByUserIdAndPortalRoleId (bb_platform),PortalRoleMembershipLoadRecordByUserIdAndPortalRoleId,PortalRoleMembership,portalRoleMembership,Load,ByUserIdAndPortalRoleId,Record,Record,portalRoleMembershipLoadRecordByUserIdAndPortalRoleId,PortalRoleMembershipDetails,portalRoleMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,LoadRecordByUserIdAndPortalRoleId,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadRecordByUserIdAndPortalRoleId"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleMembershipDetails portalRoleMembershipLoadRecordByUserIdAndPortalRoleId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipLoadRecordByUserIdAndPortalRoleId()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadRecordByUserIdAndPortalRoleId"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipLoadRecordByUserIdAndPortalRoleId : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleMembershipLoadRecordByUserIdAndPortalRoleId(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipLoadRecordByUserIdAndPortalRoleId.execute();,public _portalRoleMembershipLoadRecordByUserIdAndPortalRoleId portalRoleMembershipLoadRecordByUserIdAndPortalRoleId;,,,"portalRoleMembershipLoadRecordByUserIdAndPortalRoleId = new _portalRoleMembershipLoadRecordByUserIdAndPortalRoleId();
portalRoleMembershipLoadRecordByUserIdAndPortalRoleId.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails portalRoleMembershipLoadRecordByUserIdAndPortalRoleId(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipLoadRecordByUserIdAndPortalRoleId(@params, inputRecord);
    }","
    //PortalRoleMembership Load Record ByUserIdAndPortalRoleId
    public portalRoleMembershipDetails PortalRoleMembershipLoadRecordByUserIdAndPortalRoleId(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipLoadRecordByUserIdAndPortalRoleId(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipLoadRecordByUserIdAndPortalRoleId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipInsertRecordById,portalRoleMembershipInsertRecordById (bb_platform),PortalRoleMembershipInsertRecordById,PortalRoleMembership,portalRoleMembership,Insert,ById,Record,Record,portalRoleMembershipInsertRecordById,PortalRoleMembershipDetails,portalRoleMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,InsertRecordById,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""InsertRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleMembershipDetails portalRoleMembershipInsertRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipInsertRecordById()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""InsertRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipInsertRecordById : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleMembershipInsertRecordById(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipInsertRecordById.execute();,public _portalRoleMembershipInsertRecordById portalRoleMembershipInsertRecordById;,,,"portalRoleMembershipInsertRecordById = new _portalRoleMembershipInsertRecordById();
portalRoleMembershipInsertRecordById.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails portalRoleMembershipInsertRecordById(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipInsertRecordById(@params, inputRecord);
    }","
    //PortalRoleMembership Insert Record ById
    public portalRoleMembershipDetails PortalRoleMembershipInsertRecordById(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipInsertRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipInsertRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipPersistRecordById,portalRoleMembershipPersistRecordById (bb_platform),PortalRoleMembershipPersistRecordById,PortalRoleMembership,portalRoleMembership,Persist,ById,Record,Record,portalRoleMembershipPersistRecordById,PortalRoleMembershipDetails,portalRoleMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,PersistRecordById,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""PersistRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleMembershipDetails portalRoleMembershipPersistRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipPersistRecordById()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""PersistRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipPersistRecordById : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleMembershipPersistRecordById(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipPersistRecordById.execute();,public _portalRoleMembershipPersistRecordById portalRoleMembershipPersistRecordById;,,,"portalRoleMembershipPersistRecordById = new _portalRoleMembershipPersistRecordById();
portalRoleMembershipPersistRecordById.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails portalRoleMembershipPersistRecordById(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipPersistRecordById(@params, inputRecord);
    }","
    //PortalRoleMembership Persist Record ById
    public portalRoleMembershipDetails PortalRoleMembershipPersistRecordById(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipPersistRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipPersistRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipDeleteRecordById,portalRoleMembershipDeleteRecordById (bb_platform),PortalRoleMembershipDeleteRecordById,PortalRoleMembership,portalRoleMembership,Delete,ById,Record,Record,portalRoleMembershipDeleteRecordById,PortalRoleMembershipDetails,portalRoleMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,DeleteRecordById,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""DeleteRecordById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleMembershipDetails portalRoleMembershipDeleteRecordById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipDeleteRecordById()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""DeleteRecordById"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipDeleteRecordById : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleMembershipDeleteRecordById(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipDeleteRecordById.execute();,public _portalRoleMembershipDeleteRecordById portalRoleMembershipDeleteRecordById;,,,"portalRoleMembershipDeleteRecordById = new _portalRoleMembershipDeleteRecordById();
portalRoleMembershipDeleteRecordById.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails portalRoleMembershipDeleteRecordById(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipDeleteRecordById(@params, inputRecord);
    }","
    //PortalRoleMembership Delete Record ById
    public portalRoleMembershipDetails PortalRoleMembershipDeleteRecordById(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipDeleteRecordById(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipDeleteRecordById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId,portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId (bb_platform),PortalRoleMembershipDeleteRecordByUserIdAndPortalRoleId,PortalRoleMembership,portalRoleMembership,Delete,ByUserIdAndPortalRoleId,Record,Record,portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId,PortalRoleMembershipDetails,portalRoleMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,DeleteRecordByUserIdAndPortalRoleId,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""DeleteRecordByUserIdAndPortalRoleId"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleMembershipDetails portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""DeleteRecordByUserIdAndPortalRoleId"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId.execute();,public _portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId;,,,"portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId = new _portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId();
portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipDeleteRecordByUserIdAndPortalRoleId(@params, inputRecord);
    }","
    //PortalRoleMembership Delete Record ByUserIdAndPortalRoleId
    public portalRoleMembershipDetails PortalRoleMembershipDeleteRecordByUserIdAndPortalRoleId(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipDeleteRecordByUserIdAndPortalRoleId(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipDeleteRecordByUserIdAndPortalRoleId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipLoadListById,portalRoleMembershipLoadListById (bb_platform),PortalRoleMembershipLoadListById,PortalRoleMembership,portalRoleMembership,Load,ById,List,List,portalRoleMembershipLoadListById,List<PortalRoleMembershipDetails>,portalRoleMembershipDetails[],inputList,"@WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList",portalRoleMembershipDetails[] inputList,LoadListById,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<PortalRoleMembershipDetails> portalRoleMembershipLoadListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipLoadListById()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadListById"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputList.ToArray(),"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipLoadListById : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleMembershipLoadListById(args.param, args.wsInputList.ToArray());
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipLoadListById.execute();,public _portalRoleMembershipLoadListById portalRoleMembershipLoadListById;,,,"portalRoleMembershipLoadListById = new _portalRoleMembershipLoadListById();
portalRoleMembershipLoadListById.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails[] portalRoleMembershipLoadListById(bbWsParams @params, portalRoleMembershipDetails[] inputList)    {
        return base.PortalRoleMembershipLoadListById(@params, inputList);
    }","
    //PortalRoleMembership Load List ById
    public portalRoleMembershipDetails[] PortalRoleMembershipLoadListById(bbWsParams @params, portalRoleMembershipDetails[] inputList)
    {
        try
        {
           return bbAdded.portalRoleMembershipLoadListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipLoadListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipInsertListById,portalRoleMembershipInsertListById (bb_platform),PortalRoleMembershipInsertListById,PortalRoleMembership,portalRoleMembership,Insert,ById,List,List,portalRoleMembershipInsertListById,List<PortalRoleMembershipDetails>,portalRoleMembershipDetails[],inputList,"@WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList",portalRoleMembershipDetails[] inputList,InsertListById,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""InsertListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<PortalRoleMembershipDetails> portalRoleMembershipInsertListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipInsertListById()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""InsertListById"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputList.ToArray(),"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipInsertListById : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleMembershipInsertListById(args.param, args.wsInputList.ToArray());
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipInsertListById.execute();,public _portalRoleMembershipInsertListById portalRoleMembershipInsertListById;,,,"portalRoleMembershipInsertListById = new _portalRoleMembershipInsertListById();
portalRoleMembershipInsertListById.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails[] portalRoleMembershipInsertListById(bbWsParams @params, portalRoleMembershipDetails[] inputList)    {
        return base.PortalRoleMembershipInsertListById(@params, inputList);
    }","
    //PortalRoleMembership Insert List ById
    public portalRoleMembershipDetails[] PortalRoleMembershipInsertListById(bbWsParams @params, portalRoleMembershipDetails[] inputList)
    {
        try
        {
           return bbAdded.portalRoleMembershipInsertListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipInsertListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipPersistListById,portalRoleMembershipPersistListById (bb_platform),PortalRoleMembershipPersistListById,PortalRoleMembership,portalRoleMembership,Persist,ById,List,List,portalRoleMembershipPersistListById,List<PortalRoleMembershipDetails>,portalRoleMembershipDetails[],inputList,"@WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList",portalRoleMembershipDetails[] inputList,PersistListById,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""PersistListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<PortalRoleMembershipDetails> portalRoleMembershipPersistListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipPersistListById()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""PersistListById"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputList.ToArray(),"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipPersistListById : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleMembershipPersistListById(args.param, args.wsInputList.ToArray());
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipPersistListById.execute();,public _portalRoleMembershipPersistListById portalRoleMembershipPersistListById;,,,"portalRoleMembershipPersistListById = new _portalRoleMembershipPersistListById();
portalRoleMembershipPersistListById.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails[] portalRoleMembershipPersistListById(bbWsParams @params, portalRoleMembershipDetails[] inputList)    {
        return base.PortalRoleMembershipPersistListById(@params, inputList);
    }","
    //PortalRoleMembership Persist List ById
    public portalRoleMembershipDetails[] PortalRoleMembershipPersistListById(bbWsParams @params, portalRoleMembershipDetails[] inputList)
    {
        try
        {
           return bbAdded.portalRoleMembershipPersistListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipPersistListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipDeleteListById,portalRoleMembershipDeleteListById (bb_platform),PortalRoleMembershipDeleteListById,PortalRoleMembership,portalRoleMembership,Delete,ById,List,List,portalRoleMembershipDeleteListById,List<PortalRoleMembershipDetails>,portalRoleMembershipDetails[],inputList,"@WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList",portalRoleMembershipDetails[] inputList,DeleteListById,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""DeleteListById"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<PortalRoleMembershipDetails> portalRoleMembershipDeleteListById
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipDeleteListById()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""DeleteListById"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputList.ToArray(),"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipDeleteListById : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleMembershipDeleteListById(args.param, args.wsInputList.ToArray());
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipDeleteListById.execute();,public _portalRoleMembershipDeleteListById portalRoleMembershipDeleteListById;,,,"portalRoleMembershipDeleteListById = new _portalRoleMembershipDeleteListById();
portalRoleMembershipDeleteListById.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails[] portalRoleMembershipDeleteListById(bbWsParams @params, portalRoleMembershipDetails[] inputList)    {
        return base.PortalRoleMembershipDeleteListById(@params, inputList);
    }","
    //PortalRoleMembership Delete List ById
    public portalRoleMembershipDetails[] PortalRoleMembershipDeleteListById(bbWsParams @params, portalRoleMembershipDetails[] inputList)
    {
        try
        {
           return bbAdded.portalRoleMembershipDeleteListById(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipDeleteListById"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipDeleteListByUserId,portalRoleMembershipDeleteRecordByUserId (bb_platform),PortalRoleMembershipDeleteRecordByUserId,PortalRoleMembership,portalRoleMembership,Delete,ByUserId,Record,Record,portalRoleMembershipDeleteListByUserId,PortalRoleMembershipDetails,portalRoleMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,DeleteListByUserId,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""DeleteListByUserId"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleMembershipDetails portalRoleMembershipDeleteListByUserId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipDeleteListByUserId()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""DeleteListByUserId"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipDeleteListByUserId : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleMembershipDeleteListByUserId(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipDeleteListByUserId.execute();,public _portalRoleMembershipDeleteListByUserId portalRoleMembershipDeleteListByUserId;,,,"portalRoleMembershipDeleteListByUserId = new _portalRoleMembershipDeleteListByUserId();
portalRoleMembershipDeleteListByUserId.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails portalRoleMembershipDeleteListByUserId(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipDeleteRecordByUserId(@params, inputRecord);
    }","
    //PortalRoleMembership Delete Record ByUserId
    public portalRoleMembershipDetails PortalRoleMembershipDeleteRecordByUserId(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipDeleteListByUserId(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipDeleteRecordByUserId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipLoadListByUserId,portalRoleMembershipLoadListByUserId (bb_platform),PortalRoleMembershipLoadListByUserId,PortalRoleMembership,portalRoleMembership,Load,ByUserId,List,Record,portalRoleMembershipLoadListByUserId,List<PortalRoleMembershipDetails>,portalRoleMembershipDetails[],inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,LoadListByUserId,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadListByUserId"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<PortalRoleMembershipDetails> portalRoleMembershipLoadListByUserId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipLoadListByUserId()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadListByUserId"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipLoadListByUserId : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleMembershipLoadListByUserId(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipLoadListByUserId.execute();,public _portalRoleMembershipLoadListByUserId portalRoleMembershipLoadListByUserId;,,,"portalRoleMembershipLoadListByUserId = new _portalRoleMembershipLoadListByUserId();
portalRoleMembershipLoadListByUserId.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails[] portalRoleMembershipLoadListByUserId(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipLoadListByUserId(@params, inputRecord);
    }","
    //PortalRoleMembership Load List ByUserId
    public portalRoleMembershipDetails[] PortalRoleMembershipLoadListByUserId(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipLoadListByUserId(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipLoadListByUserId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipLoadListByPortalRoleId,portalRoleMembershipLoadListByPortalRoleId (bb_platform),PortalRoleMembershipLoadListByPortalRoleId,PortalRoleMembership,portalRoleMembership,Load,ByPortalRoleId,List,Record,portalRoleMembershipLoadListByPortalRoleId,List<PortalRoleMembershipDetails>,portalRoleMembershipDetails[],inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,LoadListByPortalRoleId,_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadListByPortalRoleId"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<PortalRoleMembershipDetails> portalRoleMembershipLoadListByPortalRoleId
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipLoadListByPortalRoleId()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadListByPortalRoleId"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipLoadListByPortalRoleId : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleMembershipLoadListByPortalRoleId(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipLoadListByPortalRoleId.execute();,public _portalRoleMembershipLoadListByPortalRoleId portalRoleMembershipLoadListByPortalRoleId;,,,"portalRoleMembershipLoadListByPortalRoleId = new _portalRoleMembershipLoadListByPortalRoleId();
portalRoleMembershipLoadListByPortalRoleId.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails[] portalRoleMembershipLoadListByPortalRoleId(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipLoadListByPortalRoleId(@params, inputRecord);
    }","
    //PortalRoleMembership Load List ByPortalRoleId
    public portalRoleMembershipDetails[] PortalRoleMembershipLoadListByPortalRoleId(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipLoadListByPortalRoleId(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipLoadListByPortalRoleId"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipLoadListByTemplate,portalRoleMembershipLoadListByTemplate (cms_admin),PortalRoleMembershipLoadListByTemplate,PortalRoleMembership,portalRoleMembership,Load,ByTemplate,List,Record,portalRoleMembershipLoadListByTemplate,List<PortalRoleMembershipDetails>,portalRoleMembershipDetails[],inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,LoadListByTemplate,_ADMIN_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadListByTemplate"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public List<PortalRoleMembershipDetails> portalRoleMembershipLoadListByTemplate
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipLoadListByTemplate()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadListByTemplate"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipLoadListByTemplate : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleMembershipLoadListByTemplate(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipLoadListByTemplate.execute();,public _portalRoleMembershipLoadListByTemplate portalRoleMembershipLoadListByTemplate;,,,"portalRoleMembershipLoadListByTemplate = new _portalRoleMembershipLoadListByTemplate();
portalRoleMembershipLoadListByTemplate.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails[] portalRoleMembershipLoadListByTemplate(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipLoadListByTemplate(@params, inputRecord);
    }","
    //PortalRoleMembership Load List ByTemplate
    public portalRoleMembershipDetails[] PortalRoleMembershipLoadListByTemplate(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipLoadListByTemplate(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipLoadListByTemplate"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid,portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid (cms_admin),PortalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid,PortalRoleMembership,portalRoleMembership,Load,ByUserAndPortalRoleBatchUid,Record,Record,portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid,PortalRoleMembershipDetails,portalRoleMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,LoadRecordByUserAndPortalRoleBatchUid,_ADMIN_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadRecordByUserAndPortalRoleBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleMembershipDetails portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadRecordByUserAndPortalRoleBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid.execute();,public _portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid;,,,"portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid = new _portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid();
portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid(@params, inputRecord);
    }","
    //PortalRoleMembership Load Record ByUserAndPortalRoleBatchUid
    public portalRoleMembershipDetails PortalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipLoadRecordByUserAndPortalRoleBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid,portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid (cms_admin),PortalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid,PortalRoleMembership,portalRoleMembership,Insert,ByUserAndPortalRoleBatchUid,Record,Record,portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid,PortalRoleMembershipDetails,portalRoleMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,InsertRecordByUserAndPortalRoleBatchUid,_ADMIN_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""InsertRecordByUserAndPortalRoleBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleMembershipDetails portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""InsertRecordByUserAndPortalRoleBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid.execute();,public _portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid;,,,"portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid = new _portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid();
portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid(@params, inputRecord);
    }","
    //PortalRoleMembership Insert Record ByUserAndPortalRoleBatchUid
    public portalRoleMembershipDetails PortalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipInsertRecordByUserAndPortalRoleBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid,portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid (cms_admin),PortalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid,PortalRoleMembership,portalRoleMembership,Delete,ByUserAndPortalRoleBatchUid,Record,Record,portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid,PortalRoleMembershipDetails,portalRoleMembershipDetails,inputRecord,"@WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord",portalRoleMembershipDetails inputRecord,DeleteRecordByUserAndPortalRoleBatchUid,_ADMIN_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""DeleteRecordByUserAndPortalRoleBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails inputRecord)","(@params, inputRecord);","    @WebMethod
    public PortalRoleMembershipDetails portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") PortalRoleMembershipDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputRecord,
                    PortalRoleMembershipAccessPack.class.getName(), ""DeleteRecordByUserAndPortalRoleBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid.execute();,public _portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid;,,,"portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid = new _portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid();
portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid(bbWsParams @params, portalRoleMembershipDetails inputRecord)    {
        return base.PortalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid(@params, inputRecord);
    }","
    //PortalRoleMembership Delete Record ByUserAndPortalRoleBatchUid
    public portalRoleMembershipDetails PortalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid(bbWsParams @params, portalRoleMembershipDetails inputRecord)
    {
        try
        {
           return bbAdded.portalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid(@params, inputRecord);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipDeleteRecordByUserAndPortalRoleBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipLoadListByUserAndPortalRoleBatchUid,portalRoleMembershipLoadListByUserAndPortalRoleBatchUid (cms_admin),PortalRoleMembershipLoadListByUserAndPortalRoleBatchUid,PortalRoleMembership,portalRoleMembership,Load,ByUserAndPortalRoleBatchUid,List,List,portalRoleMembershipLoadListByUserAndPortalRoleBatchUid,List<PortalRoleMembershipDetails>,portalRoleMembershipDetails[],inputList,"@WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList",portalRoleMembershipDetails[] inputList,LoadListByUserAndPortalRoleBatchUid,_ADMIN_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadListByUserAndPortalRoleBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<PortalRoleMembershipDetails> portalRoleMembershipLoadListByUserAndPortalRoleBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipLoadListByUserAndPortalRoleBatchUid()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""LoadListByUserAndPortalRoleBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputList.ToArray(),"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipLoadListByUserAndPortalRoleBatchUid : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleMembershipLoadListByUserAndPortalRoleBatchUid(args.param, args.wsInputList.ToArray());
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipLoadListByUserAndPortalRoleBatchUid.execute();,public _portalRoleMembershipLoadListByUserAndPortalRoleBatchUid portalRoleMembershipLoadListByUserAndPortalRoleBatchUid;,,,"portalRoleMembershipLoadListByUserAndPortalRoleBatchUid = new _portalRoleMembershipLoadListByUserAndPortalRoleBatchUid();
portalRoleMembershipLoadListByUserAndPortalRoleBatchUid.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails[] portalRoleMembershipLoadListByUserAndPortalRoleBatchUid(bbWsParams @params, portalRoleMembershipDetails[] inputList)    {
        return base.PortalRoleMembershipLoadListByUserAndPortalRoleBatchUid(@params, inputList);
    }","
    //PortalRoleMembership Load List ByUserAndPortalRoleBatchUid
    public portalRoleMembershipDetails[] PortalRoleMembershipLoadListByUserAndPortalRoleBatchUid(bbWsParams @params, portalRoleMembershipDetails[] inputList)
    {
        try
        {
           return bbAdded.portalRoleMembershipLoadListByUserAndPortalRoleBatchUid(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipLoadListByUserAndPortalRoleBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipInsertListByUserAndPortalRoleBatchUid,portalRoleMembershipInsertListByUserAndPortalRoleBatchUid (cms_admin),PortalRoleMembershipInsertListByUserAndPortalRoleBatchUid,PortalRoleMembership,portalRoleMembership,Insert,ByUserAndPortalRoleBatchUid,List,List,portalRoleMembershipInsertListByUserAndPortalRoleBatchUid,List<PortalRoleMembershipDetails>,portalRoleMembershipDetails[],inputList,"@WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList",portalRoleMembershipDetails[] inputList,InsertListByUserAndPortalRoleBatchUid,_ADMIN_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""InsertListByUserAndPortalRoleBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<PortalRoleMembershipDetails> portalRoleMembershipInsertListByUserAndPortalRoleBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipInsertListByUserAndPortalRoleBatchUid()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""InsertListByUserAndPortalRoleBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputList.ToArray(),"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipInsertListByUserAndPortalRoleBatchUid : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleMembershipInsertListByUserAndPortalRoleBatchUid(args.param, args.wsInputList.ToArray());
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipInsertListByUserAndPortalRoleBatchUid.execute();,public _portalRoleMembershipInsertListByUserAndPortalRoleBatchUid portalRoleMembershipInsertListByUserAndPortalRoleBatchUid;,,,"portalRoleMembershipInsertListByUserAndPortalRoleBatchUid = new _portalRoleMembershipInsertListByUserAndPortalRoleBatchUid();
portalRoleMembershipInsertListByUserAndPortalRoleBatchUid.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails[] portalRoleMembershipInsertListByUserAndPortalRoleBatchUid(bbWsParams @params, portalRoleMembershipDetails[] inputList)    {
        return base.PortalRoleMembershipInsertListByUserAndPortalRoleBatchUid(@params, inputList);
    }","
    //PortalRoleMembership Insert List ByUserAndPortalRoleBatchUid
    public portalRoleMembershipDetails[] PortalRoleMembershipInsertListByUserAndPortalRoleBatchUid(bbWsParams @params, portalRoleMembershipDetails[] inputList)
    {
        try
        {
           return bbAdded.portalRoleMembershipInsertListByUserAndPortalRoleBatchUid(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipInsertListByUserAndPortalRoleBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid,portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid (cms_admin),PortalRoleMembershipDeleteListByUserAndPortalRoleBatchUid,PortalRoleMembership,portalRoleMembership,Delete,ByUserAndPortalRoleBatchUid,List,List,portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid,List<PortalRoleMembershipDetails>,portalRoleMembershipDetails[],inputList,"@WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList",portalRoleMembershipDetails[] inputList,DeleteListByUserAndPortalRoleBatchUid,_ADMIN_DATA,PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""DeleteListByUserAndPortalRoleBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault","(bbWsParams @params, portalRoleMembershipDetails[] inputList)","(@params, inputList);","    @WebMethod
    public List<PortalRoleMembershipDetails> portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<PortalRoleMembershipDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid()"", this);
        PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA args
                = new PortalRoleMembershipAccessPack.PortalRoleMembershipArguments_ADMIN_DATA();
        args.initialize(PortalRoleMembershipDetails.class, params, inputList,
                    PortalRoleMembershipAccessPack.class.getName(), ""DeleteListByUserAndPortalRoleBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputList.ToArray(),"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid : _portalRoleMembershipTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid(args.param, args.wsInputList.ToArray());
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs.portalRoleMembership.portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid.execute();,public _portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid;,,,"portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid = new _portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid();
portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid.init(this.testArgs.portalRoleMembership);",,,"    public portalRoleMembershipDetails[] portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid(bbWsParams @params, portalRoleMembershipDetails[] inputList)    {
        return base.PortalRoleMembershipDeleteListByUserAndPortalRoleBatchUid(@params, inputList);
    }","
    //PortalRoleMembership Delete List ByUserAndPortalRoleBatchUid
    public portalRoleMembershipDetails[] PortalRoleMembershipDeleteListByUserAndPortalRoleBatchUid(bbWsParams @params, portalRoleMembershipDetails[] inputList)
    {
        try
        {
           return bbAdded.portalRoleMembershipDeleteListByUserAndPortalRoleBatchUid(@params, inputList);
        }
        catch (Exception ex)
        {
          BlackBoardWebServices.LogError(""bbAdded.PortalRoleMembershipDeleteListByUserAndPortalRoleBatchUid"", ex);
          if (doRethrow) throw;
          else return null;
        }
    }"
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
, (bb_platform),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,testArgs...execute();,,,,,,,,
observerAssociationUpdateRecordByObserverAndUsersBatchUid,observerAssociationUpdateRecordByObserverAndUsersBatchUid (cms_admin),,ObserverAssociation,,Update,ByObserverAndUsersBatchUid,Record,Record,updateRecordByObserverAndUsersBatchUid,ObserverAssociationDetails,,inputRecord,"@WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord",,UpdateRecordByObserverAndUsersBatchUid,_ADMIN_DATA,ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputRecord,
                    ObserverAssociationAccessPack.class.getName(), ""UpdateRecordByObserverAndUsersBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord) throws WebServiceException, BbWsFault",,,"    @WebMethod
    public ObserverAssociationDetails observerAssociationUpdateRecordByObserverAndUsersBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputRecord"") ObserverAssociationDetails inputRecord) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered updateRecordByObserverAndUsersBatchUid()"", this);
        ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA args
                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputRecord,
                    ObserverAssociationAccessPack.class.getName(), ""UpdateRecordByObserverAndUsersBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultRecord();
    }",,,,args.wsResultRecord,args.wsInputRecord,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _observerAssociationUpdateRecordByObserverAndUsersBatchUid : _observerAssociationTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultRecord = args.bbWs.observerAssociationUpdateRecordByObserverAndUsersBatchUid(args.param, args.wsInputRecord);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs..observerAssociationUpdateRecordByObserverAndUsersBatchUid.execute();,public _observerAssociationUpdateRecordByObserverAndUsersBatchUid observerAssociationUpdateRecordByObserverAndUsersBatchUid;,,,"observerAssociationUpdateRecordByObserverAndUsersBatchUid = new _observerAssociationUpdateRecordByObserverAndUsersBatchUid();
observerAssociationUpdateRecordByObserverAndUsersBatchUid.init(this.testArgs.observerAssociation);",,,,
observerAssociationUpdateListByObserverAndUsersBatchUid,observerAssociationUpdateListByObserverAndUsersBatchUid (cms_admin),,ObserverAssociation,,Update,ByObserverAndUsersBatchUid,List,List,updateListByObserverAndUsersBatchUid,List<ObserverAssociationDetails>,,inputList,"@WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList",,UpdateListByObserverAndUsersBatchUid,_ADMIN_DATA,ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA,BbWsApiProcessor,        BbWsApiProcessor.start(args);,"                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputList,
                    ObserverAssociationAccessPack.class.getName(), ""UpdateListByObserverAndUsersBatchUid"");",,"                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList) throws WebServiceException, BbWsFault",,,"    @WebMethod
    public List<ObserverAssociationDetails> observerAssociationUpdateListByObserverAndUsersBatchUid
                (@WebParam(name = ""params"") BbWsParams params,
                    @WebParam(name = ""inputList"") List<ObserverAssociationDetails> inputList) throws WebServiceException, BbWsFault
    {
        BbWsLog.logForward(LogService.Verbosity.INFORMATION, ""Entered updateListByObserverAndUsersBatchUid()"", this);
        ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA args
                = new ObserverAssociationAccessPack.ObserverAssociationArguments_ADMIN_DATA();
        args.initialize(ObserverAssociationDetails.class, params, inputList,
                    ObserverAssociationAccessPack.class.getName(), ""UpdateListByObserverAndUsersBatchUid"");
        BbWsApiProcessor.start(args);
        return args.getResultList();
    }",,,,args.wsResultList,args.wsInputList,"        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
","    class _observerAssociationUpdateListByObserverAndUsersBatchUid : _observerAssociationTestCase, ITestAction {
        override public void executeImp() {
            args.wsResultList = args.bbWs.observerAssociationUpdateListByObserverAndUsersBatchUid(args.param, args.wsInputList);
        }
        override public void preAction() {
            args.wsInputRecord.userName = args.testUserName;
        }
    }
",,testArgs..observerAssociationUpdateListByObserverAndUsersBatchUid.execute();,public _observerAssociationUpdateListByObserverAndUsersBatchUid observerAssociationUpdateListByObserverAndUsersBatchUid;,,,"observerAssociationUpdateListByObserverAndUsersBatchUid = new _observerAssociationUpdateListByObserverAndUsersBatchUid();
observerAssociationUpdateListByObserverAndUsersBatchUid.init(this.testArgs.observerAssociation);",,,,
