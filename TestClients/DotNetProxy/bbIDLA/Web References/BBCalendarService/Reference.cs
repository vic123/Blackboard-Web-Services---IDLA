//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3082
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3082.
// 
#pragma warning disable 1591

namespace bbIDLA.BBCalendarService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BBCalendarWebServicePortBinding", Namespace="http://www.ncl.ac.uk/BBCalendarWebService")]
    public partial class BBCalendarWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addCalendarEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllCourseCalendarEntriesForGivenCourseIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCourseCalendarEntriesWithinDatesForGivenCourseIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCalendarEntryByCalendarEntryBbIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllCourseCalendarEntriesForGivenUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCourseCalendarEntriesWithinDatesForGivenUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonalCalendarEntriesWithinDatesForGivenUserIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BBCalendarWebService() {
            this.Url = global::bbIDLA.Properties.Settings.Default.bbIDLA_BBCalendarService_BBCalendarWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addCalendarEntryCompletedEventHandler addCalendarEntryCompleted;
        
        /// <remarks/>
        public event getAllCourseCalendarEntriesForGivenCourseIdCompletedEventHandler getAllCourseCalendarEntriesForGivenCourseIdCompleted;
        
        /// <remarks/>
        public event getCourseCalendarEntriesWithinDatesForGivenCourseIdCompletedEventHandler getCourseCalendarEntriesWithinDatesForGivenCourseIdCompleted;
        
        /// <remarks/>
        public event deleteCalendarEntryByCalendarEntryBbIdCompletedEventHandler deleteCalendarEntryByCalendarEntryBbIdCompleted;
        
        /// <remarks/>
        public event getAllCourseCalendarEntriesForGivenUserIdCompletedEventHandler getAllCourseCalendarEntriesForGivenUserIdCompleted;
        
        /// <remarks/>
        public event getCourseCalendarEntriesWithinDatesForGivenUserIdCompletedEventHandler getCourseCalendarEntriesWithinDatesForGivenUserIdCompleted;
        
        /// <remarks/>
        public event getPersonalCalendarEntriesWithinDatesForGivenUserIdCompletedEventHandler getPersonalCalendarEntriesWithinDatesForGivenUserIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBCalendarWebService", ResponseNamespace="http://www.ncl.ac.uk/BBCalendarWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addCalendarEntry(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseID, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userID, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string description, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string title, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string type, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startDay, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startMonth, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startYear, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startHour, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startMinute, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startSecond, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endYear, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endHour, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMinute, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endSecond) {
            object[] results = this.Invoke("addCalendarEntry", new object[] {
                        pwd,
                        courseID,
                        userID,
                        description,
                        title,
                        type,
                        startDay,
                        startMonth,
                        startYear,
                        startHour,
                        startMinute,
                        startSecond,
                        endDay,
                        endMonth,
                        endYear,
                        endHour,
                        endMinute,
                        endSecond});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addCalendarEntryAsync(
                    string pwd, 
                    string courseID, 
                    string userID, 
                    string description, 
                    string title, 
                    string type, 
                    int startDay, 
                    int startMonth, 
                    int startYear, 
                    int startHour, 
                    int startMinute, 
                    int startSecond, 
                    int endDay, 
                    int endMonth, 
                    int endYear, 
                    int endHour, 
                    int endMinute, 
                    int endSecond) {
            this.addCalendarEntryAsync(pwd, courseID, userID, description, title, type, startDay, startMonth, startYear, startHour, startMinute, startSecond, endDay, endMonth, endYear, endHour, endMinute, endSecond, null);
        }
        
        /// <remarks/>
        public void addCalendarEntryAsync(
                    string pwd, 
                    string courseID, 
                    string userID, 
                    string description, 
                    string title, 
                    string type, 
                    int startDay, 
                    int startMonth, 
                    int startYear, 
                    int startHour, 
                    int startMinute, 
                    int startSecond, 
                    int endDay, 
                    int endMonth, 
                    int endYear, 
                    int endHour, 
                    int endMinute, 
                    int endSecond, 
                    object userState) {
            if ((this.addCalendarEntryOperationCompleted == null)) {
                this.addCalendarEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddCalendarEntryOperationCompleted);
            }
            this.InvokeAsync("addCalendarEntry", new object[] {
                        pwd,
                        courseID,
                        userID,
                        description,
                        title,
                        type,
                        startDay,
                        startMonth,
                        startYear,
                        startHour,
                        startMinute,
                        startSecond,
                        endDay,
                        endMonth,
                        endYear,
                        endHour,
                        endMinute,
                        endSecond}, this.addCalendarEntryOperationCompleted, userState);
        }
        
        private void OnaddCalendarEntryOperationCompleted(object arg) {
            if ((this.addCalendarEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addCalendarEntryCompleted(this, new addCalendarEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBCalendarWebService", ResponseNamespace="http://www.ncl.ac.uk/BBCalendarWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public stringArray[] getAllCourseCalendarEntriesForGivenCourseId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getAllCourseCalendarEntriesForGivenCourseId", new object[] {
                        pwd,
                        courseId,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllCourseCalendarEntriesForGivenCourseIdAsync(string pwd, string courseId, bool headerDesc, bool headerDescSpecified) {
            this.getAllCourseCalendarEntriesForGivenCourseIdAsync(pwd, courseId, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getAllCourseCalendarEntriesForGivenCourseIdAsync(string pwd, string courseId, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getAllCourseCalendarEntriesForGivenCourseIdOperationCompleted == null)) {
                this.getAllCourseCalendarEntriesForGivenCourseIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllCourseCalendarEntriesForGivenCourseIdOperationCompleted);
            }
            this.InvokeAsync("getAllCourseCalendarEntriesForGivenCourseId", new object[] {
                        pwd,
                        courseId,
                        headerDesc,
                        headerDescSpecified}, this.getAllCourseCalendarEntriesForGivenCourseIdOperationCompleted, userState);
        }
        
        private void OngetAllCourseCalendarEntriesForGivenCourseIdOperationCompleted(object arg) {
            if ((this.getAllCourseCalendarEntriesForGivenCourseIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllCourseCalendarEntriesForGivenCourseIdCompleted(this, new getAllCourseCalendarEntriesForGivenCourseIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBCalendarWebService", ResponseNamespace="http://www.ncl.ac.uk/BBCalendarWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public stringArray[] getCourseCalendarEntriesWithinDatesForGivenCourseId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getCourseCalendarEntriesWithinDatesForGivenCourseId", new object[] {
                        pwd,
                        courseId,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getCourseCalendarEntriesWithinDatesForGivenCourseIdAsync(string pwd, string courseId, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear, bool headerDesc, bool headerDescSpecified) {
            this.getCourseCalendarEntriesWithinDatesForGivenCourseIdAsync(pwd, courseId, startDay, startMonth, startYear, endDay, endMonth, endYear, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getCourseCalendarEntriesWithinDatesForGivenCourseIdAsync(string pwd, string courseId, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getCourseCalendarEntriesWithinDatesForGivenCourseIdOperationCompleted == null)) {
                this.getCourseCalendarEntriesWithinDatesForGivenCourseIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCourseCalendarEntriesWithinDatesForGivenCourseIdOperationCompleted);
            }
            this.InvokeAsync("getCourseCalendarEntriesWithinDatesForGivenCourseId", new object[] {
                        pwd,
                        courseId,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear,
                        headerDesc,
                        headerDescSpecified}, this.getCourseCalendarEntriesWithinDatesForGivenCourseIdOperationCompleted, userState);
        }
        
        private void OngetCourseCalendarEntriesWithinDatesForGivenCourseIdOperationCompleted(object arg) {
            if ((this.getCourseCalendarEntriesWithinDatesForGivenCourseIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCourseCalendarEntriesWithinDatesForGivenCourseIdCompleted(this, new getCourseCalendarEntriesWithinDatesForGivenCourseIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBCalendarWebService", ResponseNamespace="http://www.ncl.ac.uk/BBCalendarWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deleteCalendarEntryByCalendarEntryBbId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string calendarEntryBbId) {
            object[] results = this.Invoke("deleteCalendarEntryByCalendarEntryBbId", new object[] {
                        pwd,
                        calendarEntryBbId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCalendarEntryByCalendarEntryBbIdAsync(string pwd, string calendarEntryBbId) {
            this.deleteCalendarEntryByCalendarEntryBbIdAsync(pwd, calendarEntryBbId, null);
        }
        
        /// <remarks/>
        public void deleteCalendarEntryByCalendarEntryBbIdAsync(string pwd, string calendarEntryBbId, object userState) {
            if ((this.deleteCalendarEntryByCalendarEntryBbIdOperationCompleted == null)) {
                this.deleteCalendarEntryByCalendarEntryBbIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCalendarEntryByCalendarEntryBbIdOperationCompleted);
            }
            this.InvokeAsync("deleteCalendarEntryByCalendarEntryBbId", new object[] {
                        pwd,
                        calendarEntryBbId}, this.deleteCalendarEntryByCalendarEntryBbIdOperationCompleted, userState);
        }
        
        private void OndeleteCalendarEntryByCalendarEntryBbIdOperationCompleted(object arg) {
            if ((this.deleteCalendarEntryByCalendarEntryBbIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCalendarEntryByCalendarEntryBbIdCompleted(this, new deleteCalendarEntryByCalendarEntryBbIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBCalendarWebService", ResponseNamespace="http://www.ncl.ac.uk/BBCalendarWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public stringArray[] getAllCourseCalendarEntriesForGivenUserId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getAllCourseCalendarEntriesForGivenUserId", new object[] {
                        pwd,
                        userId,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllCourseCalendarEntriesForGivenUserIdAsync(string pwd, string userId, bool headerDesc, bool headerDescSpecified) {
            this.getAllCourseCalendarEntriesForGivenUserIdAsync(pwd, userId, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getAllCourseCalendarEntriesForGivenUserIdAsync(string pwd, string userId, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getAllCourseCalendarEntriesForGivenUserIdOperationCompleted == null)) {
                this.getAllCourseCalendarEntriesForGivenUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllCourseCalendarEntriesForGivenUserIdOperationCompleted);
            }
            this.InvokeAsync("getAllCourseCalendarEntriesForGivenUserId", new object[] {
                        pwd,
                        userId,
                        headerDesc,
                        headerDescSpecified}, this.getAllCourseCalendarEntriesForGivenUserIdOperationCompleted, userState);
        }
        
        private void OngetAllCourseCalendarEntriesForGivenUserIdOperationCompleted(object arg) {
            if ((this.getAllCourseCalendarEntriesForGivenUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllCourseCalendarEntriesForGivenUserIdCompleted(this, new getAllCourseCalendarEntriesForGivenUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBCalendarWebService", ResponseNamespace="http://www.ncl.ac.uk/BBCalendarWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public stringArray[] getCourseCalendarEntriesWithinDatesForGivenUserId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getCourseCalendarEntriesWithinDatesForGivenUserId", new object[] {
                        pwd,
                        userId,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getCourseCalendarEntriesWithinDatesForGivenUserIdAsync(string pwd, string userId, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear, bool headerDesc, bool headerDescSpecified) {
            this.getCourseCalendarEntriesWithinDatesForGivenUserIdAsync(pwd, userId, startDay, startMonth, startYear, endDay, endMonth, endYear, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getCourseCalendarEntriesWithinDatesForGivenUserIdAsync(string pwd, string userId, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getCourseCalendarEntriesWithinDatesForGivenUserIdOperationCompleted == null)) {
                this.getCourseCalendarEntriesWithinDatesForGivenUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCourseCalendarEntriesWithinDatesForGivenUserIdOperationCompleted);
            }
            this.InvokeAsync("getCourseCalendarEntriesWithinDatesForGivenUserId", new object[] {
                        pwd,
                        userId,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear,
                        headerDesc,
                        headerDescSpecified}, this.getCourseCalendarEntriesWithinDatesForGivenUserIdOperationCompleted, userState);
        }
        
        private void OngetCourseCalendarEntriesWithinDatesForGivenUserIdOperationCompleted(object arg) {
            if ((this.getCourseCalendarEntriesWithinDatesForGivenUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCourseCalendarEntriesWithinDatesForGivenUserIdCompleted(this, new getCourseCalendarEntriesWithinDatesForGivenUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBCalendarWebService", ResponseNamespace="http://www.ncl.ac.uk/BBCalendarWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public stringArray[] getPersonalCalendarEntriesWithinDatesForGivenUserId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getPersonalCalendarEntriesWithinDatesForGivenUserId", new object[] {
                        pwd,
                        userId,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonalCalendarEntriesWithinDatesForGivenUserIdAsync(string pwd, string userId, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear, bool headerDesc, bool headerDescSpecified) {
            this.getPersonalCalendarEntriesWithinDatesForGivenUserIdAsync(pwd, userId, startDay, startMonth, startYear, endDay, endMonth, endYear, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getPersonalCalendarEntriesWithinDatesForGivenUserIdAsync(string pwd, string userId, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getPersonalCalendarEntriesWithinDatesForGivenUserIdOperationCompleted == null)) {
                this.getPersonalCalendarEntriesWithinDatesForGivenUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonalCalendarEntriesWithinDatesForGivenUserIdOperationCompleted);
            }
            this.InvokeAsync("getPersonalCalendarEntriesWithinDatesForGivenUserId", new object[] {
                        pwd,
                        userId,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear,
                        headerDesc,
                        headerDescSpecified}, this.getPersonalCalendarEntriesWithinDatesForGivenUserIdOperationCompleted, userState);
        }
        
        private void OngetPersonalCalendarEntriesWithinDatesForGivenUserIdOperationCompleted(object arg) {
            if ((this.getPersonalCalendarEntriesWithinDatesForGivenUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonalCalendarEntriesWithinDatesForGivenUserIdCompleted(this, new getPersonalCalendarEntriesWithinDatesForGivenUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://jaxb.dev.java.net/array")]
    public partial class stringArray {
        
        private string[] itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void addCalendarEntryCompletedEventHandler(object sender, addCalendarEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addCalendarEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addCalendarEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllCourseCalendarEntriesForGivenCourseIdCompletedEventHandler(object sender, getAllCourseCalendarEntriesForGivenCourseIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllCourseCalendarEntriesForGivenCourseIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllCourseCalendarEntriesForGivenCourseIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getCourseCalendarEntriesWithinDatesForGivenCourseIdCompletedEventHandler(object sender, getCourseCalendarEntriesWithinDatesForGivenCourseIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCourseCalendarEntriesWithinDatesForGivenCourseIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCourseCalendarEntriesWithinDatesForGivenCourseIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deleteCalendarEntryByCalendarEntryBbIdCompletedEventHandler(object sender, deleteCalendarEntryByCalendarEntryBbIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCalendarEntryByCalendarEntryBbIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCalendarEntryByCalendarEntryBbIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllCourseCalendarEntriesForGivenUserIdCompletedEventHandler(object sender, getAllCourseCalendarEntriesForGivenUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllCourseCalendarEntriesForGivenUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllCourseCalendarEntriesForGivenUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getCourseCalendarEntriesWithinDatesForGivenUserIdCompletedEventHandler(object sender, getCourseCalendarEntriesWithinDatesForGivenUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCourseCalendarEntriesWithinDatesForGivenUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCourseCalendarEntriesWithinDatesForGivenUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getPersonalCalendarEntriesWithinDatesForGivenUserIdCompletedEventHandler(object sender, getPersonalCalendarEntriesWithinDatesForGivenUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonalCalendarEntriesWithinDatesForGivenUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonalCalendarEntriesWithinDatesForGivenUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591