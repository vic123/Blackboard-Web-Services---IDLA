//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3649
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3649.
// 
#pragma warning disable 1591

namespace bbIDLA.BBAnnouncementService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BBAnnouncementsWebServicePortBinding", Namespace="http://www.ncl.ac.uk/BBAnnouncementsWebService")]
    public partial class BBAnnouncementsWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback deleteAnnouncementOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAnnouncementXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAnnouncementsForGivenCourseIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAnnouncementsForGivenCourseIdWithNamedElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAnnouncementsForGivenCourseIdXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAvailableAnnouncementsForGivenUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllAvailableAnnouncementsForGivenUserIdXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllSystemAnnouncementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllSystemAnnouncementsWithNamedElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllSystemAnnouncementsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyAnnouncementOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyAnnouncementXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback postCourseAnnouncementOperationCompleted;
        
        private System.Threading.SendOrPostCallback postCourseAnnouncementXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback postSystemAnnouncementOperationCompleted;
        
        private System.Threading.SendOrPostCallback postSystemAnnouncementXMLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BBAnnouncementsWebService() {
            this.Url = global::bbIDLA.Properties.Settings.Default.bbIDLA_BBAnnouncementService_BBAnnouncementsWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event deleteAnnouncementCompletedEventHandler deleteAnnouncementCompleted;
        
        /// <remarks/>
        public event deleteAnnouncementXMLCompletedEventHandler deleteAnnouncementXMLCompleted;
        
        /// <remarks/>
        public event getAllAnnouncementsForGivenCourseIdCompletedEventHandler getAllAnnouncementsForGivenCourseIdCompleted;
        
        /// <remarks/>
        public event getAllAnnouncementsForGivenCourseIdWithNamedElementsCompletedEventHandler getAllAnnouncementsForGivenCourseIdWithNamedElementsCompleted;
        
        /// <remarks/>
        public event getAllAnnouncementsForGivenCourseIdXMLCompletedEventHandler getAllAnnouncementsForGivenCourseIdXMLCompleted;
        
        /// <remarks/>
        public event getAllAvailableAnnouncementsForGivenUserIdCompletedEventHandler getAllAvailableAnnouncementsForGivenUserIdCompleted;
        
        /// <remarks/>
        public event getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsCompletedEventHandler getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsCompleted;
        
        /// <remarks/>
        public event getAllAvailableAnnouncementsForGivenUserIdXMLCompletedEventHandler getAllAvailableAnnouncementsForGivenUserIdXMLCompleted;
        
        /// <remarks/>
        public event getAllSystemAnnouncementsCompletedEventHandler getAllSystemAnnouncementsCompleted;
        
        /// <remarks/>
        public event getAllSystemAnnouncementsWithNamedElementsCompletedEventHandler getAllSystemAnnouncementsWithNamedElementsCompleted;
        
        /// <remarks/>
        public event getAllSystemAnnouncementsXMLCompletedEventHandler getAllSystemAnnouncementsXMLCompleted;
        
        /// <remarks/>
        public event modifyAnnouncementCompletedEventHandler modifyAnnouncementCompleted;
        
        /// <remarks/>
        public event modifyAnnouncementXMLCompletedEventHandler modifyAnnouncementXMLCompleted;
        
        /// <remarks/>
        public event postCourseAnnouncementCompletedEventHandler postCourseAnnouncementCompleted;
        
        /// <remarks/>
        public event postCourseAnnouncementXMLCompletedEventHandler postCourseAnnouncementXMLCompleted;
        
        /// <remarks/>
        public event postSystemAnnouncementCompletedEventHandler postSystemAnnouncementCompleted;
        
        /// <remarks/>
        public event postSystemAnnouncementXMLCompletedEventHandler postSystemAnnouncementXMLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteAnnouncement([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string announcementBbId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("deleteAnnouncement", new object[] {
                        pwd,
                        announcementBbId});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void deleteAnnouncementAsync(string pwd, string announcementBbId) {
            this.deleteAnnouncementAsync(pwd, announcementBbId, null);
        }
        
        /// <remarks/>
        public void deleteAnnouncementAsync(string pwd, string announcementBbId, object userState) {
            if ((this.deleteAnnouncementOperationCompleted == null)) {
                this.deleteAnnouncementOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAnnouncementOperationCompleted);
            }
            this.InvokeAsync("deleteAnnouncement", new object[] {
                        pwd,
                        announcementBbId}, this.deleteAnnouncementOperationCompleted, userState);
        }
        
        private void OndeleteAnnouncementOperationCompleted(object arg) {
            if ((this.deleteAnnouncementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAnnouncementCompleted(this, new deleteAnnouncementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deleteAnnouncementXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string announcementBbId) {
            object[] results = this.Invoke("deleteAnnouncementXML", new object[] {
                        pwd,
                        announcementBbId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAnnouncementXMLAsync(string pwd, string announcementBbId) {
            this.deleteAnnouncementXMLAsync(pwd, announcementBbId, null);
        }
        
        /// <remarks/>
        public void deleteAnnouncementXMLAsync(string pwd, string announcementBbId, object userState) {
            if ((this.deleteAnnouncementXMLOperationCompleted == null)) {
                this.deleteAnnouncementXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAnnouncementXMLOperationCompleted);
            }
            this.InvokeAsync("deleteAnnouncementXML", new object[] {
                        pwd,
                        announcementBbId}, this.deleteAnnouncementXMLOperationCompleted, userState);
        }
        
        private void OndeleteAnnouncementXMLOperationCompleted(object arg) {
            if ((this.deleteAnnouncementXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAnnouncementXMLCompleted(this, new deleteAnnouncementXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stringArray[] getAllAnnouncementsForGivenCourseId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getAllAnnouncementsForGivenCourseId", new object[] {
                        pwd,
                        courseId,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllAnnouncementsForGivenCourseIdAsync(string pwd, string courseId, bool headerDesc, bool headerDescSpecified) {
            this.getAllAnnouncementsForGivenCourseIdAsync(pwd, courseId, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getAllAnnouncementsForGivenCourseIdAsync(string pwd, string courseId, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getAllAnnouncementsForGivenCourseIdOperationCompleted == null)) {
                this.getAllAnnouncementsForGivenCourseIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAnnouncementsForGivenCourseIdOperationCompleted);
            }
            this.InvokeAsync("getAllAnnouncementsForGivenCourseId", new object[] {
                        pwd,
                        courseId,
                        headerDesc,
                        headerDescSpecified}, this.getAllAnnouncementsForGivenCourseIdOperationCompleted, userState);
        }
        
        private void OngetAllAnnouncementsForGivenCourseIdOperationCompleted(object arg) {
            if ((this.getAllAnnouncementsForGivenCourseIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAnnouncementsForGivenCourseIdCompleted(this, new getAllAnnouncementsForGivenCourseIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public announcementDetails[] getAllAnnouncementsForGivenCourseIdWithNamedElements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId) {
            object[] results = this.Invoke("getAllAnnouncementsForGivenCourseIdWithNamedElements", new object[] {
                        pwd,
                        courseId});
            return ((announcementDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllAnnouncementsForGivenCourseIdWithNamedElementsAsync(string pwd, string courseId) {
            this.getAllAnnouncementsForGivenCourseIdWithNamedElementsAsync(pwd, courseId, null);
        }
        
        /// <remarks/>
        public void getAllAnnouncementsForGivenCourseIdWithNamedElementsAsync(string pwd, string courseId, object userState) {
            if ((this.getAllAnnouncementsForGivenCourseIdWithNamedElementsOperationCompleted == null)) {
                this.getAllAnnouncementsForGivenCourseIdWithNamedElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAnnouncementsForGivenCourseIdWithNamedElementsOperationCompleted);
            }
            this.InvokeAsync("getAllAnnouncementsForGivenCourseIdWithNamedElements", new object[] {
                        pwd,
                        courseId}, this.getAllAnnouncementsForGivenCourseIdWithNamedElementsOperationCompleted, userState);
        }
        
        private void OngetAllAnnouncementsForGivenCourseIdWithNamedElementsOperationCompleted(object arg) {
            if ((this.getAllAnnouncementsForGivenCourseIdWithNamedElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAnnouncementsForGivenCourseIdWithNamedElementsCompleted(this, new getAllAnnouncementsForGivenCourseIdWithNamedElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAllAnnouncementsForGivenCourseIdXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId) {
            object[] results = this.Invoke("getAllAnnouncementsForGivenCourseIdXML", new object[] {
                        pwd,
                        courseId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllAnnouncementsForGivenCourseIdXMLAsync(string pwd, string courseId) {
            this.getAllAnnouncementsForGivenCourseIdXMLAsync(pwd, courseId, null);
        }
        
        /// <remarks/>
        public void getAllAnnouncementsForGivenCourseIdXMLAsync(string pwd, string courseId, object userState) {
            if ((this.getAllAnnouncementsForGivenCourseIdXMLOperationCompleted == null)) {
                this.getAllAnnouncementsForGivenCourseIdXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAnnouncementsForGivenCourseIdXMLOperationCompleted);
            }
            this.InvokeAsync("getAllAnnouncementsForGivenCourseIdXML", new object[] {
                        pwd,
                        courseId}, this.getAllAnnouncementsForGivenCourseIdXMLOperationCompleted, userState);
        }
        
        private void OngetAllAnnouncementsForGivenCourseIdXMLOperationCompleted(object arg) {
            if ((this.getAllAnnouncementsForGivenCourseIdXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAnnouncementsForGivenCourseIdXMLCompleted(this, new getAllAnnouncementsForGivenCourseIdXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stringArray[] getAllAvailableAnnouncementsForGivenUserId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getAllAvailableAnnouncementsForGivenUserId", new object[] {
                        pwd,
                        userId,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllAvailableAnnouncementsForGivenUserIdAsync(string pwd, string userId, bool headerDesc, bool headerDescSpecified) {
            this.getAllAvailableAnnouncementsForGivenUserIdAsync(pwd, userId, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getAllAvailableAnnouncementsForGivenUserIdAsync(string pwd, string userId, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getAllAvailableAnnouncementsForGivenUserIdOperationCompleted == null)) {
                this.getAllAvailableAnnouncementsForGivenUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAvailableAnnouncementsForGivenUserIdOperationCompleted);
            }
            this.InvokeAsync("getAllAvailableAnnouncementsForGivenUserId", new object[] {
                        pwd,
                        userId,
                        headerDesc,
                        headerDescSpecified}, this.getAllAvailableAnnouncementsForGivenUserIdOperationCompleted, userState);
        }
        
        private void OngetAllAvailableAnnouncementsForGivenUserIdOperationCompleted(object arg) {
            if ((this.getAllAvailableAnnouncementsForGivenUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAvailableAnnouncementsForGivenUserIdCompleted(this, new getAllAvailableAnnouncementsForGivenUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public announcementDetails[] getAllAvailableAnnouncementsForGivenUserIdWithNamedElements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("getAllAvailableAnnouncementsForGivenUserIdWithNamedElements", new object[] {
                        pwd,
                        userId});
            return ((announcementDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsAsync(string pwd, string userId) {
            this.getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsAsync(pwd, userId, null);
        }
        
        /// <remarks/>
        public void getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsAsync(string pwd, string userId, object userState) {
            if ((this.getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsOperationCompleted == null)) {
                this.getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAvailableAnnouncementsForGivenUserIdWithNamedElementsOperationCompleted);
            }
            this.InvokeAsync("getAllAvailableAnnouncementsForGivenUserIdWithNamedElements", new object[] {
                        pwd,
                        userId}, this.getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsOperationCompleted, userState);
        }
        
        private void OngetAllAvailableAnnouncementsForGivenUserIdWithNamedElementsOperationCompleted(object arg) {
            if ((this.getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsCompleted(this, new getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAllAvailableAnnouncementsForGivenUserIdXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("getAllAvailableAnnouncementsForGivenUserIdXML", new object[] {
                        pwd,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllAvailableAnnouncementsForGivenUserIdXMLAsync(string pwd, string userId) {
            this.getAllAvailableAnnouncementsForGivenUserIdXMLAsync(pwd, userId, null);
        }
        
        /// <remarks/>
        public void getAllAvailableAnnouncementsForGivenUserIdXMLAsync(string pwd, string userId, object userState) {
            if ((this.getAllAvailableAnnouncementsForGivenUserIdXMLOperationCompleted == null)) {
                this.getAllAvailableAnnouncementsForGivenUserIdXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllAvailableAnnouncementsForGivenUserIdXMLOperationCompleted);
            }
            this.InvokeAsync("getAllAvailableAnnouncementsForGivenUserIdXML", new object[] {
                        pwd,
                        userId}, this.getAllAvailableAnnouncementsForGivenUserIdXMLOperationCompleted, userState);
        }
        
        private void OngetAllAvailableAnnouncementsForGivenUserIdXMLOperationCompleted(object arg) {
            if ((this.getAllAvailableAnnouncementsForGivenUserIdXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllAvailableAnnouncementsForGivenUserIdXMLCompleted(this, new getAllAvailableAnnouncementsForGivenUserIdXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stringArray[] getAllSystemAnnouncements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getAllSystemAnnouncements", new object[] {
                        pwd,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllSystemAnnouncementsAsync(string pwd, bool headerDesc, bool headerDescSpecified) {
            this.getAllSystemAnnouncementsAsync(pwd, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getAllSystemAnnouncementsAsync(string pwd, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getAllSystemAnnouncementsOperationCompleted == null)) {
                this.getAllSystemAnnouncementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllSystemAnnouncementsOperationCompleted);
            }
            this.InvokeAsync("getAllSystemAnnouncements", new object[] {
                        pwd,
                        headerDesc,
                        headerDescSpecified}, this.getAllSystemAnnouncementsOperationCompleted, userState);
        }
        
        private void OngetAllSystemAnnouncementsOperationCompleted(object arg) {
            if ((this.getAllSystemAnnouncementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllSystemAnnouncementsCompleted(this, new getAllSystemAnnouncementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public announcementDetails[] getAllSystemAnnouncementsWithNamedElements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd) {
            object[] results = this.Invoke("getAllSystemAnnouncementsWithNamedElements", new object[] {
                        pwd});
            return ((announcementDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllSystemAnnouncementsWithNamedElementsAsync(string pwd) {
            this.getAllSystemAnnouncementsWithNamedElementsAsync(pwd, null);
        }
        
        /// <remarks/>
        public void getAllSystemAnnouncementsWithNamedElementsAsync(string pwd, object userState) {
            if ((this.getAllSystemAnnouncementsWithNamedElementsOperationCompleted == null)) {
                this.getAllSystemAnnouncementsWithNamedElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllSystemAnnouncementsWithNamedElementsOperationCompleted);
            }
            this.InvokeAsync("getAllSystemAnnouncementsWithNamedElements", new object[] {
                        pwd}, this.getAllSystemAnnouncementsWithNamedElementsOperationCompleted, userState);
        }
        
        private void OngetAllSystemAnnouncementsWithNamedElementsOperationCompleted(object arg) {
            if ((this.getAllSystemAnnouncementsWithNamedElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllSystemAnnouncementsWithNamedElementsCompleted(this, new getAllSystemAnnouncementsWithNamedElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAllSystemAnnouncementsXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd) {
            object[] results = this.Invoke("getAllSystemAnnouncementsXML", new object[] {
                        pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllSystemAnnouncementsXMLAsync(string pwd) {
            this.getAllSystemAnnouncementsXMLAsync(pwd, null);
        }
        
        /// <remarks/>
        public void getAllSystemAnnouncementsXMLAsync(string pwd, object userState) {
            if ((this.getAllSystemAnnouncementsXMLOperationCompleted == null)) {
                this.getAllSystemAnnouncementsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllSystemAnnouncementsXMLOperationCompleted);
            }
            this.InvokeAsync("getAllSystemAnnouncementsXML", new object[] {
                        pwd}, this.getAllSystemAnnouncementsXMLOperationCompleted, userState);
        }
        
        private void OngetAllSystemAnnouncementsXMLOperationCompleted(object arg) {
            if ((this.getAllSystemAnnouncementsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllSystemAnnouncementsXMLCompleted(this, new getAllSystemAnnouncementsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void modifyAnnouncement([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string announcementBbId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string textType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string title, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string body, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("modifyAnnouncement", new object[] {
                        pwd,
                        announcementBbId,
                        textType,
                        courseId,
                        title,
                        body,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void modifyAnnouncementAsync(string pwd, string announcementBbId, string textType, string courseId, string title, string body, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear) {
            this.modifyAnnouncementAsync(pwd, announcementBbId, textType, courseId, title, body, startDay, startMonth, startYear, endDay, endMonth, endYear, null);
        }
        
        /// <remarks/>
        public void modifyAnnouncementAsync(string pwd, string announcementBbId, string textType, string courseId, string title, string body, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear, object userState) {
            if ((this.modifyAnnouncementOperationCompleted == null)) {
                this.modifyAnnouncementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyAnnouncementOperationCompleted);
            }
            this.InvokeAsync("modifyAnnouncement", new object[] {
                        pwd,
                        announcementBbId,
                        textType,
                        courseId,
                        title,
                        body,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear}, this.modifyAnnouncementOperationCompleted, userState);
        }
        
        private void OnmodifyAnnouncementOperationCompleted(object arg) {
            if ((this.modifyAnnouncementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyAnnouncementCompleted(this, new modifyAnnouncementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string modifyAnnouncementXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string announcementBbId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string textType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string title, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string body, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endYear) {
            object[] results = this.Invoke("modifyAnnouncementXML", new object[] {
                        pwd,
                        announcementBbId,
                        textType,
                        courseId,
                        title,
                        body,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void modifyAnnouncementXMLAsync(string pwd, string announcementBbId, string textType, string courseId, string title, string body, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear) {
            this.modifyAnnouncementXMLAsync(pwd, announcementBbId, textType, courseId, title, body, startDay, startMonth, startYear, endDay, endMonth, endYear, null);
        }
        
        /// <remarks/>
        public void modifyAnnouncementXMLAsync(string pwd, string announcementBbId, string textType, string courseId, string title, string body, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear, object userState) {
            if ((this.modifyAnnouncementXMLOperationCompleted == null)) {
                this.modifyAnnouncementXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyAnnouncementXMLOperationCompleted);
            }
            this.InvokeAsync("modifyAnnouncementXML", new object[] {
                        pwd,
                        announcementBbId,
                        textType,
                        courseId,
                        title,
                        body,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear}, this.modifyAnnouncementXMLOperationCompleted, userState);
        }
        
        private void OnmodifyAnnouncementXMLOperationCompleted(object arg) {
            if ((this.modifyAnnouncementXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyAnnouncementXMLCompleted(this, new modifyAnnouncementXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void postCourseAnnouncement([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string textType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool permanent, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool permanentSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string title, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string body, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("postCourseAnnouncement", new object[] {
                        pwd,
                        textType,
                        courseID,
                        permanent,
                        permanentSpecified,
                        title,
                        body,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void postCourseAnnouncementAsync(string pwd, string textType, string courseID, bool permanent, bool permanentSpecified, string title, string body, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear) {
            this.postCourseAnnouncementAsync(pwd, textType, courseID, permanent, permanentSpecified, title, body, startDay, startMonth, startYear, endDay, endMonth, endYear, null);
        }
        
        /// <remarks/>
        public void postCourseAnnouncementAsync(string pwd, string textType, string courseID, bool permanent, bool permanentSpecified, string title, string body, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear, object userState) {
            if ((this.postCourseAnnouncementOperationCompleted == null)) {
                this.postCourseAnnouncementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostCourseAnnouncementOperationCompleted);
            }
            this.InvokeAsync("postCourseAnnouncement", new object[] {
                        pwd,
                        textType,
                        courseID,
                        permanent,
                        permanentSpecified,
                        title,
                        body,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear}, this.postCourseAnnouncementOperationCompleted, userState);
        }
        
        private void OnpostCourseAnnouncementOperationCompleted(object arg) {
            if ((this.postCourseAnnouncementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postCourseAnnouncementCompleted(this, new postCourseAnnouncementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string postCourseAnnouncementXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string textType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseID, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool permanent, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool permanentSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string title, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string body, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endYear) {
            object[] results = this.Invoke("postCourseAnnouncementXML", new object[] {
                        pwd,
                        textType,
                        courseID,
                        permanent,
                        permanentSpecified,
                        title,
                        body,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void postCourseAnnouncementXMLAsync(string pwd, string textType, string courseID, bool permanent, bool permanentSpecified, string title, string body, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear) {
            this.postCourseAnnouncementXMLAsync(pwd, textType, courseID, permanent, permanentSpecified, title, body, startDay, startMonth, startYear, endDay, endMonth, endYear, null);
        }
        
        /// <remarks/>
        public void postCourseAnnouncementXMLAsync(string pwd, string textType, string courseID, bool permanent, bool permanentSpecified, string title, string body, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear, object userState) {
            if ((this.postCourseAnnouncementXMLOperationCompleted == null)) {
                this.postCourseAnnouncementXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostCourseAnnouncementXMLOperationCompleted);
            }
            this.InvokeAsync("postCourseAnnouncementXML", new object[] {
                        pwd,
                        textType,
                        courseID,
                        permanent,
                        permanentSpecified,
                        title,
                        body,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear}, this.postCourseAnnouncementXMLOperationCompleted, userState);
        }
        
        private void OnpostCourseAnnouncementXMLOperationCompleted(object arg) {
            if ((this.postCourseAnnouncementXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postCourseAnnouncementXMLCompleted(this, new postCourseAnnouncementXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void postSystemAnnouncement([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string textType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool permanent, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool permanentSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string title, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string body, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("postSystemAnnouncement", new object[] {
                        pwd,
                        textType,
                        permanent,
                        permanentSpecified,
                        title,
                        body,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void postSystemAnnouncementAsync(string pwd, string textType, bool permanent, bool permanentSpecified, string title, string body, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear) {
            this.postSystemAnnouncementAsync(pwd, textType, permanent, permanentSpecified, title, body, startDay, startMonth, startYear, endDay, endMonth, endYear, null);
        }
        
        /// <remarks/>
        public void postSystemAnnouncementAsync(string pwd, string textType, bool permanent, bool permanentSpecified, string title, string body, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear, object userState) {
            if ((this.postSystemAnnouncementOperationCompleted == null)) {
                this.postSystemAnnouncementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostSystemAnnouncementOperationCompleted);
            }
            this.InvokeAsync("postSystemAnnouncement", new object[] {
                        pwd,
                        textType,
                        permanent,
                        permanentSpecified,
                        title,
                        body,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear}, this.postSystemAnnouncementOperationCompleted, userState);
        }
        
        private void OnpostSystemAnnouncementOperationCompleted(object arg) {
            if ((this.postSystemAnnouncementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postSystemAnnouncementCompleted(this, new postSystemAnnouncementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", ResponseNamespace="http://www.ncl.ac.uk/BBAnnouncementsWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string postSystemAnnouncementXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string textType, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool permanent, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool permanentSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string title, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string body, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int startYear, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endDay, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endMonth, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int endYear) {
            object[] results = this.Invoke("postSystemAnnouncementXML", new object[] {
                        pwd,
                        textType,
                        permanent,
                        permanentSpecified,
                        title,
                        body,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void postSystemAnnouncementXMLAsync(string pwd, string textType, bool permanent, bool permanentSpecified, string title, string body, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear) {
            this.postSystemAnnouncementXMLAsync(pwd, textType, permanent, permanentSpecified, title, body, startDay, startMonth, startYear, endDay, endMonth, endYear, null);
        }
        
        /// <remarks/>
        public void postSystemAnnouncementXMLAsync(string pwd, string textType, bool permanent, bool permanentSpecified, string title, string body, int startDay, int startMonth, int startYear, int endDay, int endMonth, int endYear, object userState) {
            if ((this.postSystemAnnouncementXMLOperationCompleted == null)) {
                this.postSystemAnnouncementXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpostSystemAnnouncementXMLOperationCompleted);
            }
            this.InvokeAsync("postSystemAnnouncementXML", new object[] {
                        pwd,
                        textType,
                        permanent,
                        permanentSpecified,
                        title,
                        body,
                        startDay,
                        startMonth,
                        startYear,
                        endDay,
                        endMonth,
                        endYear}, this.postSystemAnnouncementXMLOperationCompleted, userState);
        }
        
        private void OnpostSystemAnnouncementXMLOperationCompleted(object arg) {
            if ((this.postSystemAnnouncementXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.postSystemAnnouncementXMLCompleted(this, new postSystemAnnouncementXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3654")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://jaxb.dev.java.net/array")]
    public partial class stringArray {
        
        private string[] itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3654")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncl.ac.uk/BBAnnouncementsWebService")]
    public partial class announcementDetails {
        
        private string announcementBbIdField;
        
        private string bodyField;
        
        private string endDateField;
        
        private bool permanentField;
        
        private bool permanentFieldSpecified;
        
        private string startDateField;
        
        private string titleField;
        
        private string typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string announcementBbId {
            get {
                return this.announcementBbIdField;
            }
            set {
                this.announcementBbIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool permanent {
            get {
                return this.permanentField;
            }
            set {
                this.permanentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool permanentSpecified {
            get {
                return this.permanentFieldSpecified;
            }
            set {
                this.permanentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deleteAnnouncementCompletedEventHandler(object sender, deleteAnnouncementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAnnouncementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAnnouncementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deleteAnnouncementXMLCompletedEventHandler(object sender, deleteAnnouncementXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAnnouncementXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAnnouncementXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllAnnouncementsForGivenCourseIdCompletedEventHandler(object sender, getAllAnnouncementsForGivenCourseIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAnnouncementsForGivenCourseIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAnnouncementsForGivenCourseIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllAnnouncementsForGivenCourseIdWithNamedElementsCompletedEventHandler(object sender, getAllAnnouncementsForGivenCourseIdWithNamedElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAnnouncementsForGivenCourseIdWithNamedElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAnnouncementsForGivenCourseIdWithNamedElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public announcementDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((announcementDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllAnnouncementsForGivenCourseIdXMLCompletedEventHandler(object sender, getAllAnnouncementsForGivenCourseIdXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAnnouncementsForGivenCourseIdXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAnnouncementsForGivenCourseIdXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllAvailableAnnouncementsForGivenUserIdCompletedEventHandler(object sender, getAllAvailableAnnouncementsForGivenUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAvailableAnnouncementsForGivenUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAvailableAnnouncementsForGivenUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsCompletedEventHandler(object sender, getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAvailableAnnouncementsForGivenUserIdWithNamedElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public announcementDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((announcementDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllAvailableAnnouncementsForGivenUserIdXMLCompletedEventHandler(object sender, getAllAvailableAnnouncementsForGivenUserIdXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllAvailableAnnouncementsForGivenUserIdXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllAvailableAnnouncementsForGivenUserIdXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllSystemAnnouncementsCompletedEventHandler(object sender, getAllSystemAnnouncementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllSystemAnnouncementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllSystemAnnouncementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllSystemAnnouncementsWithNamedElementsCompletedEventHandler(object sender, getAllSystemAnnouncementsWithNamedElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllSystemAnnouncementsWithNamedElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllSystemAnnouncementsWithNamedElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public announcementDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((announcementDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllSystemAnnouncementsXMLCompletedEventHandler(object sender, getAllSystemAnnouncementsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllSystemAnnouncementsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllSystemAnnouncementsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void modifyAnnouncementCompletedEventHandler(object sender, modifyAnnouncementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyAnnouncementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyAnnouncementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void modifyAnnouncementXMLCompletedEventHandler(object sender, modifyAnnouncementXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyAnnouncementXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyAnnouncementXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void postCourseAnnouncementCompletedEventHandler(object sender, postCourseAnnouncementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class postCourseAnnouncementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal postCourseAnnouncementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void postCourseAnnouncementXMLCompletedEventHandler(object sender, postCourseAnnouncementXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class postCourseAnnouncementXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal postCourseAnnouncementXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void postSystemAnnouncementCompletedEventHandler(object sender, postSystemAnnouncementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class postSystemAnnouncementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal postSystemAnnouncementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void postSystemAnnouncementXMLCompletedEventHandler(object sender, postSystemAnnouncementXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class postSystemAnnouncementXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal postSystemAnnouncementXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591