//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3649
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3649.
// 
#pragma warning disable 1591

namespace bbIDLA.BBUserService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BBUserWebServicePortBinding", Namespace="http://www.ncl.ac.uk/BBUserWebService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(bbWsDataDetails))]
    public partial class BBUserWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback addUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDefaultStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDefaultStudentXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback addUserXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserByUserBbIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserByUserBbIdXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteUserByUserIdXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback doesUserExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback doesUserExistXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllUserIDsNoDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllUserIDsNoDetailsWithNamedElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllUserIDsNoDetailsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEnrolledStudentsForGivenCourseIDWithNamedElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEnrolledStudentsForGivenCourseIDXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEnrolledUserDetailsForGivenCourseWithNamedElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEnrolledUserDetailsForGivenCourseXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEnrolledUsersForGivenCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEnrollmentsByBatchUIDandCourseIDPatternOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSecondaryPortalRolesForGivenUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSecondaryPortalRolesForGivenUserIdWithNamedElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSecondaryPortalRolesForGivenUserIdXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSecondarySystemRolesForGivenUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSecondarySystemRolesForGivenUserIdWithNamedElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSecondarySystemRolesForGivenUserIdXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserDetailsWithNamedElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserDetailsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserRoleInCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserRoleInCourseWithNamedElementsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserRoleInCourseXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback isUserInCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback isUserInCourseXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback setOrModifySecondaryPortalRolesForGivenUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback setOrModifySecondaryPortalRolesForGivenUserIdXMLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BBUserWebService() {
            this.Url = global::bbIDLA.Properties.Settings.Default.bbIDLA_BBUserService_BBUserWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event addUserCompletedEventHandler addUserCompleted;
        
        /// <remarks/>
        public event addDefaultStudentCompletedEventHandler addDefaultStudentCompleted;
        
        /// <remarks/>
        public event addDefaultStudentXMLCompletedEventHandler addDefaultStudentXMLCompleted;
        
        /// <remarks/>
        public event addUserXMLCompletedEventHandler addUserXMLCompleted;
        
        /// <remarks/>
        public event deleteUserByUserBbIdCompletedEventHandler deleteUserByUserBbIdCompleted;
        
        /// <remarks/>
        public event deleteUserByUserBbIdXMLCompletedEventHandler deleteUserByUserBbIdXMLCompleted;
        
        /// <remarks/>
        public event deleteUserByUserIdCompletedEventHandler deleteUserByUserIdCompleted;
        
        /// <remarks/>
        public event deleteUserByUserIdXMLCompletedEventHandler deleteUserByUserIdXMLCompleted;
        
        /// <remarks/>
        public event doesUserExistCompletedEventHandler doesUserExistCompleted;
        
        /// <remarks/>
        public event doesUserExistXMLCompletedEventHandler doesUserExistXMLCompleted;
        
        /// <remarks/>
        public event getAllUserIDsNoDetailsCompletedEventHandler getAllUserIDsNoDetailsCompleted;
        
        /// <remarks/>
        public event getAllUserIDsNoDetailsWithNamedElementsCompletedEventHandler getAllUserIDsNoDetailsWithNamedElementsCompleted;
        
        /// <remarks/>
        public event getAllUserIDsNoDetailsXMLCompletedEventHandler getAllUserIDsNoDetailsXMLCompleted;
        
        /// <remarks/>
        public event getEnrolledStudentsForGivenCourseIDWithNamedElementsCompletedEventHandler getEnrolledStudentsForGivenCourseIDWithNamedElementsCompleted;
        
        /// <remarks/>
        public event getEnrolledStudentsForGivenCourseIDXMLCompletedEventHandler getEnrolledStudentsForGivenCourseIDXMLCompleted;
        
        /// <remarks/>
        public event getEnrolledUserDetailsForGivenCourseWithNamedElementsCompletedEventHandler getEnrolledUserDetailsForGivenCourseWithNamedElementsCompleted;
        
        /// <remarks/>
        public event getEnrolledUserDetailsForGivenCourseXMLCompletedEventHandler getEnrolledUserDetailsForGivenCourseXMLCompleted;
        
        /// <remarks/>
        public event getEnrolledUsersForGivenCourseCompletedEventHandler getEnrolledUsersForGivenCourseCompleted;
        
        /// <remarks/>
        public event getEnrollmentsByBatchUIDandCourseIDPatternCompletedEventHandler getEnrollmentsByBatchUIDandCourseIDPatternCompleted;
        
        /// <remarks/>
        public event getSecondaryPortalRolesForGivenUserIdCompletedEventHandler getSecondaryPortalRolesForGivenUserIdCompleted;
        
        /// <remarks/>
        public event getSecondaryPortalRolesForGivenUserIdWithNamedElementsCompletedEventHandler getSecondaryPortalRolesForGivenUserIdWithNamedElementsCompleted;
        
        /// <remarks/>
        public event getSecondaryPortalRolesForGivenUserIdXMLCompletedEventHandler getSecondaryPortalRolesForGivenUserIdXMLCompleted;
        
        /// <remarks/>
        public event getSecondarySystemRolesForGivenUserIdCompletedEventHandler getSecondarySystemRolesForGivenUserIdCompleted;
        
        /// <remarks/>
        public event getSecondarySystemRolesForGivenUserIdWithNamedElementsCompletedEventHandler getSecondarySystemRolesForGivenUserIdWithNamedElementsCompleted;
        
        /// <remarks/>
        public event getSecondarySystemRolesForGivenUserIdXMLCompletedEventHandler getSecondarySystemRolesForGivenUserIdXMLCompleted;
        
        /// <remarks/>
        public event getUserDetailsCompletedEventHandler getUserDetailsCompleted;
        
        /// <remarks/>
        public event getUserDetailsWithNamedElementsCompletedEventHandler getUserDetailsWithNamedElementsCompleted;
        
        /// <remarks/>
        public event getUserDetailsXMLCompletedEventHandler getUserDetailsXMLCompleted;
        
        /// <remarks/>
        public event getUserRoleInCourseCompletedEventHandler getUserRoleInCourseCompleted;
        
        /// <remarks/>
        public event getUserRoleInCourseWithNamedElementsCompletedEventHandler getUserRoleInCourseWithNamedElementsCompleted;
        
        /// <remarks/>
        public event getUserRoleInCourseXMLCompletedEventHandler getUserRoleInCourseXMLCompleted;
        
        /// <remarks/>
        public event isUserInCourseCompletedEventHandler isUserInCourseCompleted;
        
        /// <remarks/>
        public event isUserInCourseXMLCompletedEventHandler isUserInCourseXMLCompleted;
        
        /// <remarks/>
        public event setOrModifySecondaryPortalRolesForGivenUserIdCompletedEventHandler setOrModifySecondaryPortalRolesForGivenUserIdCompleted;
        
        /// <remarks/>
        public event setOrModifySecondaryPortalRolesForGivenUserIdXMLCompletedEventHandler setOrModifySecondaryPortalRolesForGivenUserIdXMLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addUser(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string batchUId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string firstName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string middleName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lastName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string emailAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string studentId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPwd, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string gender, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string birthYear, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string birthMonth, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string birthDay, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string eduLevel, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string company, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string jobTitle, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string department, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string street1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string street2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string city, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stateOrProvince, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string zipOrPostCode, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string country, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string website, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string homePhone, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string workPhone, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string workFax, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mobilePhone, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string portalRole, 
                    [System.Xml.Serialization.XmlElementAttribute("secPortalRole", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] secPortalRole, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string systemRole, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool available, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool availableSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("addUser", new object[] {
                        pwd,
                        userId,
                        batchUId,
                        firstName,
                        middleName,
                        lastName,
                        emailAddress,
                        studentId,
                        userPwd,
                        gender,
                        birthYear,
                        birthMonth,
                        birthDay,
                        eduLevel,
                        company,
                        jobTitle,
                        department,
                        street1,
                        street2,
                        city,
                        stateOrProvince,
                        zipOrPostCode,
                        country,
                        website,
                        homePhone,
                        workPhone,
                        workFax,
                        mobilePhone,
                        portalRole,
                        secPortalRole,
                        systemRole,
                        available,
                        availableSpecified});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void addUserAsync(
                    string pwd, 
                    string userId, 
                    string batchUId, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string emailAddress, 
                    string studentId, 
                    string userPwd, 
                    string gender, 
                    string birthYear, 
                    string birthMonth, 
                    string birthDay, 
                    string eduLevel, 
                    string company, 
                    string jobTitle, 
                    string department, 
                    string street1, 
                    string street2, 
                    string city, 
                    string stateOrProvince, 
                    string zipOrPostCode, 
                    string country, 
                    string website, 
                    string homePhone, 
                    string workPhone, 
                    string workFax, 
                    string mobilePhone, 
                    string portalRole, 
                    string[] secPortalRole, 
                    string systemRole, 
                    bool available, 
                    bool availableSpecified) {
            this.addUserAsync(pwd, userId, batchUId, firstName, middleName, lastName, emailAddress, studentId, userPwd, gender, birthYear, birthMonth, birthDay, eduLevel, company, jobTitle, department, street1, street2, city, stateOrProvince, zipOrPostCode, country, website, homePhone, workPhone, workFax, mobilePhone, portalRole, secPortalRole, systemRole, available, availableSpecified, null);
        }
        
        /// <remarks/>
        public void addUserAsync(
                    string pwd, 
                    string userId, 
                    string batchUId, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string emailAddress, 
                    string studentId, 
                    string userPwd, 
                    string gender, 
                    string birthYear, 
                    string birthMonth, 
                    string birthDay, 
                    string eduLevel, 
                    string company, 
                    string jobTitle, 
                    string department, 
                    string street1, 
                    string street2, 
                    string city, 
                    string stateOrProvince, 
                    string zipOrPostCode, 
                    string country, 
                    string website, 
                    string homePhone, 
                    string workPhone, 
                    string workFax, 
                    string mobilePhone, 
                    string portalRole, 
                    string[] secPortalRole, 
                    string systemRole, 
                    bool available, 
                    bool availableSpecified, 
                    object userState) {
            if ((this.addUserOperationCompleted == null)) {
                this.addUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserOperationCompleted);
            }
            this.InvokeAsync("addUser", new object[] {
                        pwd,
                        userId,
                        batchUId,
                        firstName,
                        middleName,
                        lastName,
                        emailAddress,
                        studentId,
                        userPwd,
                        gender,
                        birthYear,
                        birthMonth,
                        birthDay,
                        eduLevel,
                        company,
                        jobTitle,
                        department,
                        street1,
                        street2,
                        city,
                        stateOrProvince,
                        zipOrPostCode,
                        country,
                        website,
                        homePhone,
                        workPhone,
                        workFax,
                        mobilePhone,
                        portalRole,
                        secPortalRole,
                        systemRole,
                        available,
                        availableSpecified}, this.addUserOperationCompleted, userState);
        }
        
        private void OnaddUserOperationCompleted(object arg) {
            if ((this.addUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserCompleted(this, new addUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void addDefaultStudent([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string firstName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string middleName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lastName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string emailAddress, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string studentId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string studentPassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("addDefaultStudent", new object[] {
                        pwd,
                        userId,
                        firstName,
                        middleName,
                        lastName,
                        emailAddress,
                        studentId,
                        studentPassword});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void addDefaultStudentAsync(string pwd, string userId, string firstName, string middleName, string lastName, string emailAddress, string studentId, string studentPassword) {
            this.addDefaultStudentAsync(pwd, userId, firstName, middleName, lastName, emailAddress, studentId, studentPassword, null);
        }
        
        /// <remarks/>
        public void addDefaultStudentAsync(string pwd, string userId, string firstName, string middleName, string lastName, string emailAddress, string studentId, string studentPassword, object userState) {
            if ((this.addDefaultStudentOperationCompleted == null)) {
                this.addDefaultStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDefaultStudentOperationCompleted);
            }
            this.InvokeAsync("addDefaultStudent", new object[] {
                        pwd,
                        userId,
                        firstName,
                        middleName,
                        lastName,
                        emailAddress,
                        studentId,
                        studentPassword}, this.addDefaultStudentOperationCompleted, userState);
        }
        
        private void OnaddDefaultStudentOperationCompleted(object arg) {
            if ((this.addDefaultStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDefaultStudentCompleted(this, new addDefaultStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addDefaultStudentXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string firstName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string middleName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lastName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string emailAddress, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string studentId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string studentPassword) {
            object[] results = this.Invoke("addDefaultStudentXML", new object[] {
                        pwd,
                        userId,
                        firstName,
                        middleName,
                        lastName,
                        emailAddress,
                        studentId,
                        studentPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addDefaultStudentXMLAsync(string pwd, string userId, string firstName, string middleName, string lastName, string emailAddress, string studentId, string studentPassword) {
            this.addDefaultStudentXMLAsync(pwd, userId, firstName, middleName, lastName, emailAddress, studentId, studentPassword, null);
        }
        
        /// <remarks/>
        public void addDefaultStudentXMLAsync(string pwd, string userId, string firstName, string middleName, string lastName, string emailAddress, string studentId, string studentPassword, object userState) {
            if ((this.addDefaultStudentXMLOperationCompleted == null)) {
                this.addDefaultStudentXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDefaultStudentXMLOperationCompleted);
            }
            this.InvokeAsync("addDefaultStudentXML", new object[] {
                        pwd,
                        userId,
                        firstName,
                        middleName,
                        lastName,
                        emailAddress,
                        studentId,
                        studentPassword}, this.addDefaultStudentXMLOperationCompleted, userState);
        }
        
        private void OnaddDefaultStudentXMLOperationCompleted(object arg) {
            if ((this.addDefaultStudentXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDefaultStudentXMLCompleted(this, new addDefaultStudentXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addUserXML(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string batchUId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string firstName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string middleName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string lastName, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string emailAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string studentId, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userPwd, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string gender, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string birthYear, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string birthMonth, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string birthDay, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string eduLevel, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string company, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string jobTitle, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string department, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string street1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string street2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string city, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string stateOrProvince, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string zipOrPostCode, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string country, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string website, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string homePhone, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string workPhone, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string workFax, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string mobilePhone, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string portalRole, 
                    [System.Xml.Serialization.XmlElementAttribute("secPortalRole", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] secPortalRole, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string systemRole, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool available, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool availableSpecified) {
            object[] results = this.Invoke("addUserXML", new object[] {
                        pwd,
                        userId,
                        batchUId,
                        firstName,
                        middleName,
                        lastName,
                        emailAddress,
                        studentId,
                        userPwd,
                        gender,
                        birthYear,
                        birthMonth,
                        birthDay,
                        eduLevel,
                        company,
                        jobTitle,
                        department,
                        street1,
                        street2,
                        city,
                        stateOrProvince,
                        zipOrPostCode,
                        country,
                        website,
                        homePhone,
                        workPhone,
                        workFax,
                        mobilePhone,
                        portalRole,
                        secPortalRole,
                        systemRole,
                        available,
                        availableSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addUserXMLAsync(
                    string pwd, 
                    string userId, 
                    string batchUId, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string emailAddress, 
                    string studentId, 
                    string userPwd, 
                    string gender, 
                    string birthYear, 
                    string birthMonth, 
                    string birthDay, 
                    string eduLevel, 
                    string company, 
                    string jobTitle, 
                    string department, 
                    string street1, 
                    string street2, 
                    string city, 
                    string stateOrProvince, 
                    string zipOrPostCode, 
                    string country, 
                    string website, 
                    string homePhone, 
                    string workPhone, 
                    string workFax, 
                    string mobilePhone, 
                    string portalRole, 
                    string[] secPortalRole, 
                    string systemRole, 
                    bool available, 
                    bool availableSpecified) {
            this.addUserXMLAsync(pwd, userId, batchUId, firstName, middleName, lastName, emailAddress, studentId, userPwd, gender, birthYear, birthMonth, birthDay, eduLevel, company, jobTitle, department, street1, street2, city, stateOrProvince, zipOrPostCode, country, website, homePhone, workPhone, workFax, mobilePhone, portalRole, secPortalRole, systemRole, available, availableSpecified, null);
        }
        
        /// <remarks/>
        public void addUserXMLAsync(
                    string pwd, 
                    string userId, 
                    string batchUId, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string emailAddress, 
                    string studentId, 
                    string userPwd, 
                    string gender, 
                    string birthYear, 
                    string birthMonth, 
                    string birthDay, 
                    string eduLevel, 
                    string company, 
                    string jobTitle, 
                    string department, 
                    string street1, 
                    string street2, 
                    string city, 
                    string stateOrProvince, 
                    string zipOrPostCode, 
                    string country, 
                    string website, 
                    string homePhone, 
                    string workPhone, 
                    string workFax, 
                    string mobilePhone, 
                    string portalRole, 
                    string[] secPortalRole, 
                    string systemRole, 
                    bool available, 
                    bool availableSpecified, 
                    object userState) {
            if ((this.addUserXMLOperationCompleted == null)) {
                this.addUserXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserXMLOperationCompleted);
            }
            this.InvokeAsync("addUserXML", new object[] {
                        pwd,
                        userId,
                        batchUId,
                        firstName,
                        middleName,
                        lastName,
                        emailAddress,
                        studentId,
                        userPwd,
                        gender,
                        birthYear,
                        birthMonth,
                        birthDay,
                        eduLevel,
                        company,
                        jobTitle,
                        department,
                        street1,
                        street2,
                        city,
                        stateOrProvince,
                        zipOrPostCode,
                        country,
                        website,
                        homePhone,
                        workPhone,
                        workFax,
                        mobilePhone,
                        portalRole,
                        secPortalRole,
                        systemRole,
                        available,
                        availableSpecified}, this.addUserXMLOperationCompleted, userState);
        }
        
        private void OnaddUserXMLOperationCompleted(object arg) {
            if ((this.addUserXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addUserXMLCompleted(this, new addUserXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteUserByUserBbId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userBbId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("deleteUserByUserBbId", new object[] {
                        pwd,
                        userBbId});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void deleteUserByUserBbIdAsync(string pwd, string userBbId) {
            this.deleteUserByUserBbIdAsync(pwd, userBbId, null);
        }
        
        /// <remarks/>
        public void deleteUserByUserBbIdAsync(string pwd, string userBbId, object userState) {
            if ((this.deleteUserByUserBbIdOperationCompleted == null)) {
                this.deleteUserByUserBbIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserByUserBbIdOperationCompleted);
            }
            this.InvokeAsync("deleteUserByUserBbId", new object[] {
                        pwd,
                        userBbId}, this.deleteUserByUserBbIdOperationCompleted, userState);
        }
        
        private void OndeleteUserByUserBbIdOperationCompleted(object arg) {
            if ((this.deleteUserByUserBbIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserByUserBbIdCompleted(this, new deleteUserByUserBbIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deleteUserByUserBbIdXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userBbId) {
            object[] results = this.Invoke("deleteUserByUserBbIdXML", new object[] {
                        pwd,
                        userBbId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserByUserBbIdXMLAsync(string pwd, string userBbId) {
            this.deleteUserByUserBbIdXMLAsync(pwd, userBbId, null);
        }
        
        /// <remarks/>
        public void deleteUserByUserBbIdXMLAsync(string pwd, string userBbId, object userState) {
            if ((this.deleteUserByUserBbIdXMLOperationCompleted == null)) {
                this.deleteUserByUserBbIdXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserByUserBbIdXMLOperationCompleted);
            }
            this.InvokeAsync("deleteUserByUserBbIdXML", new object[] {
                        pwd,
                        userBbId}, this.deleteUserByUserBbIdXMLOperationCompleted, userState);
        }
        
        private void OndeleteUserByUserBbIdXMLOperationCompleted(object arg) {
            if ((this.deleteUserByUserBbIdXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserByUserBbIdXMLCompleted(this, new deleteUserByUserBbIdXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteUserByUserId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("deleteUserByUserId", new object[] {
                        pwd,
                        userId});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void deleteUserByUserIdAsync(string pwd, string userId) {
            this.deleteUserByUserIdAsync(pwd, userId, null);
        }
        
        /// <remarks/>
        public void deleteUserByUserIdAsync(string pwd, string userId, object userState) {
            if ((this.deleteUserByUserIdOperationCompleted == null)) {
                this.deleteUserByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserByUserIdOperationCompleted);
            }
            this.InvokeAsync("deleteUserByUserId", new object[] {
                        pwd,
                        userId}, this.deleteUserByUserIdOperationCompleted, userState);
        }
        
        private void OndeleteUserByUserIdOperationCompleted(object arg) {
            if ((this.deleteUserByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserByUserIdCompleted(this, new deleteUserByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deleteUserByUserIdXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("deleteUserByUserIdXML", new object[] {
                        pwd,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteUserByUserIdXMLAsync(string pwd, string userId) {
            this.deleteUserByUserIdXMLAsync(pwd, userId, null);
        }
        
        /// <remarks/>
        public void deleteUserByUserIdXMLAsync(string pwd, string userId, object userState) {
            if ((this.deleteUserByUserIdXMLOperationCompleted == null)) {
                this.deleteUserByUserIdXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserByUserIdXMLOperationCompleted);
            }
            this.InvokeAsync("deleteUserByUserIdXML", new object[] {
                        pwd,
                        userId}, this.deleteUserByUserIdXMLOperationCompleted, userState);
        }
        
        private void OndeleteUserByUserIdXMLOperationCompleted(object arg) {
            if ((this.deleteUserByUserIdXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserByUserIdXMLCompleted(this, new deleteUserByUserIdXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void doesUserExist([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("doesUserExist", new object[] {
                        pwd,
                        userId});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void doesUserExistAsync(string pwd, string userId) {
            this.doesUserExistAsync(pwd, userId, null);
        }
        
        /// <remarks/>
        public void doesUserExistAsync(string pwd, string userId, object userState) {
            if ((this.doesUserExistOperationCompleted == null)) {
                this.doesUserExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoesUserExistOperationCompleted);
            }
            this.InvokeAsync("doesUserExist", new object[] {
                        pwd,
                        userId}, this.doesUserExistOperationCompleted, userState);
        }
        
        private void OndoesUserExistOperationCompleted(object arg) {
            if ((this.doesUserExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doesUserExistCompleted(this, new doesUserExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string doesUserExistXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("doesUserExistXML", new object[] {
                        pwd,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void doesUserExistXMLAsync(string pwd, string userId) {
            this.doesUserExistXMLAsync(pwd, userId, null);
        }
        
        /// <remarks/>
        public void doesUserExistXMLAsync(string pwd, string userId, object userState) {
            if ((this.doesUserExistXMLOperationCompleted == null)) {
                this.doesUserExistXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoesUserExistXMLOperationCompleted);
            }
            this.InvokeAsync("doesUserExistXML", new object[] {
                        pwd,
                        userId}, this.doesUserExistXMLOperationCompleted, userState);
        }
        
        private void OndoesUserExistXMLOperationCompleted(object arg) {
            if ((this.doesUserExistXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doesUserExistXMLCompleted(this, new doesUserExistXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getAllUserIDsNoDetails([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd) {
            object[] results = this.Invoke("getAllUserIDsNoDetails", new object[] {
                        pwd});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllUserIDsNoDetailsAsync(string pwd) {
            this.getAllUserIDsNoDetailsAsync(pwd, null);
        }
        
        /// <remarks/>
        public void getAllUserIDsNoDetailsAsync(string pwd, object userState) {
            if ((this.getAllUserIDsNoDetailsOperationCompleted == null)) {
                this.getAllUserIDsNoDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllUserIDsNoDetailsOperationCompleted);
            }
            this.InvokeAsync("getAllUserIDsNoDetails", new object[] {
                        pwd}, this.getAllUserIDsNoDetailsOperationCompleted, userState);
        }
        
        private void OngetAllUserIDsNoDetailsOperationCompleted(object arg) {
            if ((this.getAllUserIDsNoDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllUserIDsNoDetailsCompleted(this, new getAllUserIDsNoDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userDetails[] getAllUserIDsNoDetailsWithNamedElements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd) {
            object[] results = this.Invoke("getAllUserIDsNoDetailsWithNamedElements", new object[] {
                        pwd});
            return ((userDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllUserIDsNoDetailsWithNamedElementsAsync(string pwd) {
            this.getAllUserIDsNoDetailsWithNamedElementsAsync(pwd, null);
        }
        
        /// <remarks/>
        public void getAllUserIDsNoDetailsWithNamedElementsAsync(string pwd, object userState) {
            if ((this.getAllUserIDsNoDetailsWithNamedElementsOperationCompleted == null)) {
                this.getAllUserIDsNoDetailsWithNamedElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllUserIDsNoDetailsWithNamedElementsOperationCompleted);
            }
            this.InvokeAsync("getAllUserIDsNoDetailsWithNamedElements", new object[] {
                        pwd}, this.getAllUserIDsNoDetailsWithNamedElementsOperationCompleted, userState);
        }
        
        private void OngetAllUserIDsNoDetailsWithNamedElementsOperationCompleted(object arg) {
            if ((this.getAllUserIDsNoDetailsWithNamedElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllUserIDsNoDetailsWithNamedElementsCompleted(this, new getAllUserIDsNoDetailsWithNamedElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAllUserIDsNoDetailsXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd) {
            object[] results = this.Invoke("getAllUserIDsNoDetailsXML", new object[] {
                        pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllUserIDsNoDetailsXMLAsync(string pwd) {
            this.getAllUserIDsNoDetailsXMLAsync(pwd, null);
        }
        
        /// <remarks/>
        public void getAllUserIDsNoDetailsXMLAsync(string pwd, object userState) {
            if ((this.getAllUserIDsNoDetailsXMLOperationCompleted == null)) {
                this.getAllUserIDsNoDetailsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllUserIDsNoDetailsXMLOperationCompleted);
            }
            this.InvokeAsync("getAllUserIDsNoDetailsXML", new object[] {
                        pwd}, this.getAllUserIDsNoDetailsXMLOperationCompleted, userState);
        }
        
        private void OngetAllUserIDsNoDetailsXMLOperationCompleted(object arg) {
            if ((this.getAllUserIDsNoDetailsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllUserIDsNoDetailsXMLCompleted(this, new getAllUserIDsNoDetailsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userDetails[] getEnrolledStudentsForGivenCourseIDWithNamedElements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId) {
            object[] results = this.Invoke("getEnrolledStudentsForGivenCourseIDWithNamedElements", new object[] {
                        pwd,
                        courseId});
            return ((userDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void getEnrolledStudentsForGivenCourseIDWithNamedElementsAsync(string pwd, string courseId) {
            this.getEnrolledStudentsForGivenCourseIDWithNamedElementsAsync(pwd, courseId, null);
        }
        
        /// <remarks/>
        public void getEnrolledStudentsForGivenCourseIDWithNamedElementsAsync(string pwd, string courseId, object userState) {
            if ((this.getEnrolledStudentsForGivenCourseIDWithNamedElementsOperationCompleted == null)) {
                this.getEnrolledStudentsForGivenCourseIDWithNamedElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEnrolledStudentsForGivenCourseIDWithNamedElementsOperationCompleted);
            }
            this.InvokeAsync("getEnrolledStudentsForGivenCourseIDWithNamedElements", new object[] {
                        pwd,
                        courseId}, this.getEnrolledStudentsForGivenCourseIDWithNamedElementsOperationCompleted, userState);
        }
        
        private void OngetEnrolledStudentsForGivenCourseIDWithNamedElementsOperationCompleted(object arg) {
            if ((this.getEnrolledStudentsForGivenCourseIDWithNamedElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEnrolledStudentsForGivenCourseIDWithNamedElementsCompleted(this, new getEnrolledStudentsForGivenCourseIDWithNamedElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getEnrolledStudentsForGivenCourseIDXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId) {
            object[] results = this.Invoke("getEnrolledStudentsForGivenCourseIDXML", new object[] {
                        pwd,
                        courseId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEnrolledStudentsForGivenCourseIDXMLAsync(string pwd, string courseId) {
            this.getEnrolledStudentsForGivenCourseIDXMLAsync(pwd, courseId, null);
        }
        
        /// <remarks/>
        public void getEnrolledStudentsForGivenCourseIDXMLAsync(string pwd, string courseId, object userState) {
            if ((this.getEnrolledStudentsForGivenCourseIDXMLOperationCompleted == null)) {
                this.getEnrolledStudentsForGivenCourseIDXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEnrolledStudentsForGivenCourseIDXMLOperationCompleted);
            }
            this.InvokeAsync("getEnrolledStudentsForGivenCourseIDXML", new object[] {
                        pwd,
                        courseId}, this.getEnrolledStudentsForGivenCourseIDXMLOperationCompleted, userState);
        }
        
        private void OngetEnrolledStudentsForGivenCourseIDXMLOperationCompleted(object arg) {
            if ((this.getEnrolledStudentsForGivenCourseIDXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEnrolledStudentsForGivenCourseIDXMLCompleted(this, new getEnrolledStudentsForGivenCourseIDXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userDetails[] getEnrolledUserDetailsForGivenCourseWithNamedElements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool extendedDetails, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool extendedDetailsSpecified) {
            object[] results = this.Invoke("getEnrolledUserDetailsForGivenCourseWithNamedElements", new object[] {
                        pwd,
                        courseId,
                        extendedDetails,
                        extendedDetailsSpecified});
            return ((userDetails[])(results[0]));
        }
        
        /// <remarks/>
        public void getEnrolledUserDetailsForGivenCourseWithNamedElementsAsync(string pwd, string courseId, bool extendedDetails, bool extendedDetailsSpecified) {
            this.getEnrolledUserDetailsForGivenCourseWithNamedElementsAsync(pwd, courseId, extendedDetails, extendedDetailsSpecified, null);
        }
        
        /// <remarks/>
        public void getEnrolledUserDetailsForGivenCourseWithNamedElementsAsync(string pwd, string courseId, bool extendedDetails, bool extendedDetailsSpecified, object userState) {
            if ((this.getEnrolledUserDetailsForGivenCourseWithNamedElementsOperationCompleted == null)) {
                this.getEnrolledUserDetailsForGivenCourseWithNamedElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEnrolledUserDetailsForGivenCourseWithNamedElementsOperationCompleted);
            }
            this.InvokeAsync("getEnrolledUserDetailsForGivenCourseWithNamedElements", new object[] {
                        pwd,
                        courseId,
                        extendedDetails,
                        extendedDetailsSpecified}, this.getEnrolledUserDetailsForGivenCourseWithNamedElementsOperationCompleted, userState);
        }
        
        private void OngetEnrolledUserDetailsForGivenCourseWithNamedElementsOperationCompleted(object arg) {
            if ((this.getEnrolledUserDetailsForGivenCourseWithNamedElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEnrolledUserDetailsForGivenCourseWithNamedElementsCompleted(this, new getEnrolledUserDetailsForGivenCourseWithNamedElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getEnrolledUserDetailsForGivenCourseXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool extendedDetails, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool extendedDetailsSpecified) {
            object[] results = this.Invoke("getEnrolledUserDetailsForGivenCourseXML", new object[] {
                        pwd,
                        courseId,
                        extendedDetails,
                        extendedDetailsSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEnrolledUserDetailsForGivenCourseXMLAsync(string pwd, string courseId, bool extendedDetails, bool extendedDetailsSpecified) {
            this.getEnrolledUserDetailsForGivenCourseXMLAsync(pwd, courseId, extendedDetails, extendedDetailsSpecified, null);
        }
        
        /// <remarks/>
        public void getEnrolledUserDetailsForGivenCourseXMLAsync(string pwd, string courseId, bool extendedDetails, bool extendedDetailsSpecified, object userState) {
            if ((this.getEnrolledUserDetailsForGivenCourseXMLOperationCompleted == null)) {
                this.getEnrolledUserDetailsForGivenCourseXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEnrolledUserDetailsForGivenCourseXMLOperationCompleted);
            }
            this.InvokeAsync("getEnrolledUserDetailsForGivenCourseXML", new object[] {
                        pwd,
                        courseId,
                        extendedDetails,
                        extendedDetailsSpecified}, this.getEnrolledUserDetailsForGivenCourseXMLOperationCompleted, userState);
        }
        
        private void OngetEnrolledUserDetailsForGivenCourseXMLOperationCompleted(object arg) {
            if ((this.getEnrolledUserDetailsForGivenCourseXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEnrolledUserDetailsForGivenCourseXMLCompleted(this, new getEnrolledUserDetailsForGivenCourseXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stringArray[] getEnrolledUsersForGivenCourse([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool extendedDetails, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool extendedDetailsSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getEnrolledUsersForGivenCourse", new object[] {
                        pwd,
                        courseId,
                        extendedDetails,
                        extendedDetailsSpecified,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getEnrolledUsersForGivenCourseAsync(string pwd, string courseId, bool extendedDetails, bool extendedDetailsSpecified, bool headerDesc, bool headerDescSpecified) {
            this.getEnrolledUsersForGivenCourseAsync(pwd, courseId, extendedDetails, extendedDetailsSpecified, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getEnrolledUsersForGivenCourseAsync(string pwd, string courseId, bool extendedDetails, bool extendedDetailsSpecified, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getEnrolledUsersForGivenCourseOperationCompleted == null)) {
                this.getEnrolledUsersForGivenCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEnrolledUsersForGivenCourseOperationCompleted);
            }
            this.InvokeAsync("getEnrolledUsersForGivenCourse", new object[] {
                        pwd,
                        courseId,
                        extendedDetails,
                        extendedDetailsSpecified,
                        headerDesc,
                        headerDescSpecified}, this.getEnrolledUsersForGivenCourseOperationCompleted, userState);
        }
        
        private void OngetEnrolledUsersForGivenCourseOperationCompleted(object arg) {
            if ((this.getEnrolledUsersForGivenCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEnrolledUsersForGivenCourseCompleted(this, new getEnrolledUsersForGivenCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stringArray[] getEnrollmentsByBatchUIDandCourseIDPattern([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userBatchUid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string regex, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool isMemberOnly, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool isMemberOnlySpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool extendedDetails, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool extendedDetailsSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getEnrollmentsByBatchUIDandCourseIDPattern", new object[] {
                        pwd,
                        userBatchUid,
                        regex,
                        isMemberOnly,
                        isMemberOnlySpecified,
                        extendedDetails,
                        extendedDetailsSpecified,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getEnrollmentsByBatchUIDandCourseIDPatternAsync(string pwd, string userBatchUid, string regex, bool isMemberOnly, bool isMemberOnlySpecified, bool extendedDetails, bool extendedDetailsSpecified, bool headerDesc, bool headerDescSpecified) {
            this.getEnrollmentsByBatchUIDandCourseIDPatternAsync(pwd, userBatchUid, regex, isMemberOnly, isMemberOnlySpecified, extendedDetails, extendedDetailsSpecified, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getEnrollmentsByBatchUIDandCourseIDPatternAsync(string pwd, string userBatchUid, string regex, bool isMemberOnly, bool isMemberOnlySpecified, bool extendedDetails, bool extendedDetailsSpecified, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getEnrollmentsByBatchUIDandCourseIDPatternOperationCompleted == null)) {
                this.getEnrollmentsByBatchUIDandCourseIDPatternOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEnrollmentsByBatchUIDandCourseIDPatternOperationCompleted);
            }
            this.InvokeAsync("getEnrollmentsByBatchUIDandCourseIDPattern", new object[] {
                        pwd,
                        userBatchUid,
                        regex,
                        isMemberOnly,
                        isMemberOnlySpecified,
                        extendedDetails,
                        extendedDetailsSpecified,
                        headerDesc,
                        headerDescSpecified}, this.getEnrollmentsByBatchUIDandCourseIDPatternOperationCompleted, userState);
        }
        
        private void OngetEnrollmentsByBatchUIDandCourseIDPatternOperationCompleted(object arg) {
            if ((this.getEnrollmentsByBatchUIDandCourseIDPatternCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEnrollmentsByBatchUIDandCourseIDPatternCompleted(this, new getEnrollmentsByBatchUIDandCourseIDPatternCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stringArray[] getSecondaryPortalRolesForGivenUserId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getSecondaryPortalRolesForGivenUserId", new object[] {
                        pwd,
                        userId,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getSecondaryPortalRolesForGivenUserIdAsync(string pwd, string userId, bool headerDesc, bool headerDescSpecified) {
            this.getSecondaryPortalRolesForGivenUserIdAsync(pwd, userId, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getSecondaryPortalRolesForGivenUserIdAsync(string pwd, string userId, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getSecondaryPortalRolesForGivenUserIdOperationCompleted == null)) {
                this.getSecondaryPortalRolesForGivenUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSecondaryPortalRolesForGivenUserIdOperationCompleted);
            }
            this.InvokeAsync("getSecondaryPortalRolesForGivenUserId", new object[] {
                        pwd,
                        userId,
                        headerDesc,
                        headerDescSpecified}, this.getSecondaryPortalRolesForGivenUserIdOperationCompleted, userState);
        }
        
        private void OngetSecondaryPortalRolesForGivenUserIdOperationCompleted(object arg) {
            if ((this.getSecondaryPortalRolesForGivenUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSecondaryPortalRolesForGivenUserIdCompleted(this, new getSecondaryPortalRolesForGivenUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public role[] getSecondaryPortalRolesForGivenUserIdWithNamedElements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("getSecondaryPortalRolesForGivenUserIdWithNamedElements", new object[] {
                        pwd,
                        userId});
            return ((role[])(results[0]));
        }
        
        /// <remarks/>
        public void getSecondaryPortalRolesForGivenUserIdWithNamedElementsAsync(string pwd, string userId) {
            this.getSecondaryPortalRolesForGivenUserIdWithNamedElementsAsync(pwd, userId, null);
        }
        
        /// <remarks/>
        public void getSecondaryPortalRolesForGivenUserIdWithNamedElementsAsync(string pwd, string userId, object userState) {
            if ((this.getSecondaryPortalRolesForGivenUserIdWithNamedElementsOperationCompleted == null)) {
                this.getSecondaryPortalRolesForGivenUserIdWithNamedElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSecondaryPortalRolesForGivenUserIdWithNamedElementsOperationCompleted);
            }
            this.InvokeAsync("getSecondaryPortalRolesForGivenUserIdWithNamedElements", new object[] {
                        pwd,
                        userId}, this.getSecondaryPortalRolesForGivenUserIdWithNamedElementsOperationCompleted, userState);
        }
        
        private void OngetSecondaryPortalRolesForGivenUserIdWithNamedElementsOperationCompleted(object arg) {
            if ((this.getSecondaryPortalRolesForGivenUserIdWithNamedElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSecondaryPortalRolesForGivenUserIdWithNamedElementsCompleted(this, new getSecondaryPortalRolesForGivenUserIdWithNamedElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getSecondaryPortalRolesForGivenUserIdXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("getSecondaryPortalRolesForGivenUserIdXML", new object[] {
                        pwd,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSecondaryPortalRolesForGivenUserIdXMLAsync(string pwd, string userId) {
            this.getSecondaryPortalRolesForGivenUserIdXMLAsync(pwd, userId, null);
        }
        
        /// <remarks/>
        public void getSecondaryPortalRolesForGivenUserIdXMLAsync(string pwd, string userId, object userState) {
            if ((this.getSecondaryPortalRolesForGivenUserIdXMLOperationCompleted == null)) {
                this.getSecondaryPortalRolesForGivenUserIdXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSecondaryPortalRolesForGivenUserIdXMLOperationCompleted);
            }
            this.InvokeAsync("getSecondaryPortalRolesForGivenUserIdXML", new object[] {
                        pwd,
                        userId}, this.getSecondaryPortalRolesForGivenUserIdXMLOperationCompleted, userState);
        }
        
        private void OngetSecondaryPortalRolesForGivenUserIdXMLOperationCompleted(object arg) {
            if ((this.getSecondaryPortalRolesForGivenUserIdXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSecondaryPortalRolesForGivenUserIdXMLCompleted(this, new getSecondaryPortalRolesForGivenUserIdXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stringArray[] getSecondarySystemRolesForGivenUserId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getSecondarySystemRolesForGivenUserId", new object[] {
                        pwd,
                        userId,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getSecondarySystemRolesForGivenUserIdAsync(string pwd, string userId, bool headerDesc, bool headerDescSpecified) {
            this.getSecondarySystemRolesForGivenUserIdAsync(pwd, userId, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getSecondarySystemRolesForGivenUserIdAsync(string pwd, string userId, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getSecondarySystemRolesForGivenUserIdOperationCompleted == null)) {
                this.getSecondarySystemRolesForGivenUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSecondarySystemRolesForGivenUserIdOperationCompleted);
            }
            this.InvokeAsync("getSecondarySystemRolesForGivenUserId", new object[] {
                        pwd,
                        userId,
                        headerDesc,
                        headerDescSpecified}, this.getSecondarySystemRolesForGivenUserIdOperationCompleted, userState);
        }
        
        private void OngetSecondarySystemRolesForGivenUserIdOperationCompleted(object arg) {
            if ((this.getSecondarySystemRolesForGivenUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSecondarySystemRolesForGivenUserIdCompleted(this, new getSecondarySystemRolesForGivenUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public role[] getSecondarySystemRolesForGivenUserIdWithNamedElements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("getSecondarySystemRolesForGivenUserIdWithNamedElements", new object[] {
                        pwd,
                        userId});
            return ((role[])(results[0]));
        }
        
        /// <remarks/>
        public void getSecondarySystemRolesForGivenUserIdWithNamedElementsAsync(string pwd, string userId) {
            this.getSecondarySystemRolesForGivenUserIdWithNamedElementsAsync(pwd, userId, null);
        }
        
        /// <remarks/>
        public void getSecondarySystemRolesForGivenUserIdWithNamedElementsAsync(string pwd, string userId, object userState) {
            if ((this.getSecondarySystemRolesForGivenUserIdWithNamedElementsOperationCompleted == null)) {
                this.getSecondarySystemRolesForGivenUserIdWithNamedElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSecondarySystemRolesForGivenUserIdWithNamedElementsOperationCompleted);
            }
            this.InvokeAsync("getSecondarySystemRolesForGivenUserIdWithNamedElements", new object[] {
                        pwd,
                        userId}, this.getSecondarySystemRolesForGivenUserIdWithNamedElementsOperationCompleted, userState);
        }
        
        private void OngetSecondarySystemRolesForGivenUserIdWithNamedElementsOperationCompleted(object arg) {
            if ((this.getSecondarySystemRolesForGivenUserIdWithNamedElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSecondarySystemRolesForGivenUserIdWithNamedElementsCompleted(this, new getSecondarySystemRolesForGivenUserIdWithNamedElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getSecondarySystemRolesForGivenUserIdXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId) {
            object[] results = this.Invoke("getSecondarySystemRolesForGivenUserIdXML", new object[] {
                        pwd,
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSecondarySystemRolesForGivenUserIdXMLAsync(string pwd, string userId) {
            this.getSecondarySystemRolesForGivenUserIdXMLAsync(pwd, userId, null);
        }
        
        /// <remarks/>
        public void getSecondarySystemRolesForGivenUserIdXMLAsync(string pwd, string userId, object userState) {
            if ((this.getSecondarySystemRolesForGivenUserIdXMLOperationCompleted == null)) {
                this.getSecondarySystemRolesForGivenUserIdXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSecondarySystemRolesForGivenUserIdXMLOperationCompleted);
            }
            this.InvokeAsync("getSecondarySystemRolesForGivenUserIdXML", new object[] {
                        pwd,
                        userId}, this.getSecondarySystemRolesForGivenUserIdXMLOperationCompleted, userState);
        }
        
        private void OngetSecondarySystemRolesForGivenUserIdXMLOperationCompleted(object arg) {
            if ((this.getSecondarySystemRolesForGivenUserIdXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSecondarySystemRolesForGivenUserIdXMLCompleted(this, new getSecondarySystemRolesForGivenUserIdXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public stringArray[] getUserDetails([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool extendedDetails, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool extendedDetailsSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool headerDesc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool headerDescSpecified) {
            object[] results = this.Invoke("getUserDetails", new object[] {
                        pwd,
                        userId,
                        extendedDetails,
                        extendedDetailsSpecified,
                        headerDesc,
                        headerDescSpecified});
            return ((stringArray[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserDetailsAsync(string pwd, string userId, bool extendedDetails, bool extendedDetailsSpecified, bool headerDesc, bool headerDescSpecified) {
            this.getUserDetailsAsync(pwd, userId, extendedDetails, extendedDetailsSpecified, headerDesc, headerDescSpecified, null);
        }
        
        /// <remarks/>
        public void getUserDetailsAsync(string pwd, string userId, bool extendedDetails, bool extendedDetailsSpecified, bool headerDesc, bool headerDescSpecified, object userState) {
            if ((this.getUserDetailsOperationCompleted == null)) {
                this.getUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserDetailsOperationCompleted);
            }
            this.InvokeAsync("getUserDetails", new object[] {
                        pwd,
                        userId,
                        extendedDetails,
                        extendedDetailsSpecified,
                        headerDesc,
                        headerDescSpecified}, this.getUserDetailsOperationCompleted, userState);
        }
        
        private void OngetUserDetailsOperationCompleted(object arg) {
            if ((this.getUserDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserDetailsCompleted(this, new getUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userDetails getUserDetailsWithNamedElements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool extendedDetails, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool extendedDetailsSpecified) {
            object[] results = this.Invoke("getUserDetailsWithNamedElements", new object[] {
                        pwd,
                        userId,
                        extendedDetails,
                        extendedDetailsSpecified});
            return ((userDetails)(results[0]));
        }
        
        /// <remarks/>
        public void getUserDetailsWithNamedElementsAsync(string pwd, string userId, bool extendedDetails, bool extendedDetailsSpecified) {
            this.getUserDetailsWithNamedElementsAsync(pwd, userId, extendedDetails, extendedDetailsSpecified, null);
        }
        
        /// <remarks/>
        public void getUserDetailsWithNamedElementsAsync(string pwd, string userId, bool extendedDetails, bool extendedDetailsSpecified, object userState) {
            if ((this.getUserDetailsWithNamedElementsOperationCompleted == null)) {
                this.getUserDetailsWithNamedElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserDetailsWithNamedElementsOperationCompleted);
            }
            this.InvokeAsync("getUserDetailsWithNamedElements", new object[] {
                        pwd,
                        userId,
                        extendedDetails,
                        extendedDetailsSpecified}, this.getUserDetailsWithNamedElementsOperationCompleted, userState);
        }
        
        private void OngetUserDetailsWithNamedElementsOperationCompleted(object arg) {
            if ((this.getUserDetailsWithNamedElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserDetailsWithNamedElementsCompleted(this, new getUserDetailsWithNamedElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getUserDetailsXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool extendedDetails, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool extendedDetailsSpecified) {
            object[] results = this.Invoke("getUserDetailsXML", new object[] {
                        pwd,
                        userId,
                        extendedDetails,
                        extendedDetailsSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserDetailsXMLAsync(string pwd, string userId, bool extendedDetails, bool extendedDetailsSpecified) {
            this.getUserDetailsXMLAsync(pwd, userId, extendedDetails, extendedDetailsSpecified, null);
        }
        
        /// <remarks/>
        public void getUserDetailsXMLAsync(string pwd, string userId, bool extendedDetails, bool extendedDetailsSpecified, object userState) {
            if ((this.getUserDetailsXMLOperationCompleted == null)) {
                this.getUserDetailsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserDetailsXMLOperationCompleted);
            }
            this.InvokeAsync("getUserDetailsXML", new object[] {
                        pwd,
                        userId,
                        extendedDetails,
                        extendedDetailsSpecified}, this.getUserDetailsXMLOperationCompleted, userState);
        }
        
        private void OngetUserDetailsXMLOperationCompleted(object arg) {
            if ((this.getUserDetailsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserDetailsXMLCompleted(this, new getUserDetailsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getUserRoleInCourse([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId) {
            object[] results = this.Invoke("getUserRoleInCourse", new object[] {
                        pwd,
                        userId,
                        courseId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserRoleInCourseAsync(string pwd, string userId, string courseId) {
            this.getUserRoleInCourseAsync(pwd, userId, courseId, null);
        }
        
        /// <remarks/>
        public void getUserRoleInCourseAsync(string pwd, string userId, string courseId, object userState) {
            if ((this.getUserRoleInCourseOperationCompleted == null)) {
                this.getUserRoleInCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserRoleInCourseOperationCompleted);
            }
            this.InvokeAsync("getUserRoleInCourse", new object[] {
                        pwd,
                        userId,
                        courseId}, this.getUserRoleInCourseOperationCompleted, userState);
        }
        
        private void OngetUserRoleInCourseOperationCompleted(object arg) {
            if ((this.getUserRoleInCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserRoleInCourseCompleted(this, new getUserRoleInCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public role getUserRoleInCourseWithNamedElements([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId) {
            object[] results = this.Invoke("getUserRoleInCourseWithNamedElements", new object[] {
                        pwd,
                        userId,
                        courseId});
            return ((role)(results[0]));
        }
        
        /// <remarks/>
        public void getUserRoleInCourseWithNamedElementsAsync(string pwd, string userId, string courseId) {
            this.getUserRoleInCourseWithNamedElementsAsync(pwd, userId, courseId, null);
        }
        
        /// <remarks/>
        public void getUserRoleInCourseWithNamedElementsAsync(string pwd, string userId, string courseId, object userState) {
            if ((this.getUserRoleInCourseWithNamedElementsOperationCompleted == null)) {
                this.getUserRoleInCourseWithNamedElementsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserRoleInCourseWithNamedElementsOperationCompleted);
            }
            this.InvokeAsync("getUserRoleInCourseWithNamedElements", new object[] {
                        pwd,
                        userId,
                        courseId}, this.getUserRoleInCourseWithNamedElementsOperationCompleted, userState);
        }
        
        private void OngetUserRoleInCourseWithNamedElementsOperationCompleted(object arg) {
            if ((this.getUserRoleInCourseWithNamedElementsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserRoleInCourseWithNamedElementsCompleted(this, new getUserRoleInCourseWithNamedElementsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getUserRoleInCourseXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId) {
            object[] results = this.Invoke("getUserRoleInCourseXML", new object[] {
                        pwd,
                        userId,
                        courseId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserRoleInCourseXMLAsync(string pwd, string userId, string courseId) {
            this.getUserRoleInCourseXMLAsync(pwd, userId, courseId, null);
        }
        
        /// <remarks/>
        public void getUserRoleInCourseXMLAsync(string pwd, string userId, string courseId, object userState) {
            if ((this.getUserRoleInCourseXMLOperationCompleted == null)) {
                this.getUserRoleInCourseXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserRoleInCourseXMLOperationCompleted);
            }
            this.InvokeAsync("getUserRoleInCourseXML", new object[] {
                        pwd,
                        userId,
                        courseId}, this.getUserRoleInCourseXMLOperationCompleted, userState);
        }
        
        private void OngetUserRoleInCourseXMLOperationCompleted(object arg) {
            if ((this.getUserRoleInCourseXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserRoleInCourseXMLCompleted(this, new getUserRoleInCourseXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isUserInCourse([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId) {
            object[] results = this.Invoke("isUserInCourse", new object[] {
                        pwd,
                        userId,
                        courseId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isUserInCourseAsync(string pwd, string userId, string courseId) {
            this.isUserInCourseAsync(pwd, userId, courseId, null);
        }
        
        /// <remarks/>
        public void isUserInCourseAsync(string pwd, string userId, string courseId, object userState) {
            if ((this.isUserInCourseOperationCompleted == null)) {
                this.isUserInCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisUserInCourseOperationCompleted);
            }
            this.InvokeAsync("isUserInCourse", new object[] {
                        pwd,
                        userId,
                        courseId}, this.isUserInCourseOperationCompleted, userState);
        }
        
        private void OnisUserInCourseOperationCompleted(object arg) {
            if ((this.isUserInCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isUserInCourseCompleted(this, new isUserInCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string isUserInCourseXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string courseId) {
            object[] results = this.Invoke("isUserInCourseXML", new object[] {
                        pwd,
                        userId,
                        courseId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void isUserInCourseXMLAsync(string pwd, string userId, string courseId) {
            this.isUserInCourseXMLAsync(pwd, userId, courseId, null);
        }
        
        /// <remarks/>
        public void isUserInCourseXMLAsync(string pwd, string userId, string courseId, object userState) {
            if ((this.isUserInCourseXMLOperationCompleted == null)) {
                this.isUserInCourseXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisUserInCourseXMLOperationCompleted);
            }
            this.InvokeAsync("isUserInCourseXML", new object[] {
                        pwd,
                        userId,
                        courseId}, this.isUserInCourseXMLOperationCompleted, userState);
        }
        
        private void OnisUserInCourseXMLOperationCompleted(object arg) {
            if ((this.isUserInCourseXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isUserInCourseXMLCompleted(this, new isUserInCourseXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setOrModifySecondaryPortalRolesForGivenUserId([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute("roles", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] roles, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("setOrModifySecondaryPortalRolesForGivenUserId", new object[] {
                        pwd,
                        userId,
                        roles});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void setOrModifySecondaryPortalRolesForGivenUserIdAsync(string pwd, string userId, string[] roles) {
            this.setOrModifySecondaryPortalRolesForGivenUserIdAsync(pwd, userId, roles, null);
        }
        
        /// <remarks/>
        public void setOrModifySecondaryPortalRolesForGivenUserIdAsync(string pwd, string userId, string[] roles, object userState) {
            if ((this.setOrModifySecondaryPortalRolesForGivenUserIdOperationCompleted == null)) {
                this.setOrModifySecondaryPortalRolesForGivenUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetOrModifySecondaryPortalRolesForGivenUserIdOperationCompleted);
            }
            this.InvokeAsync("setOrModifySecondaryPortalRolesForGivenUserId", new object[] {
                        pwd,
                        userId,
                        roles}, this.setOrModifySecondaryPortalRolesForGivenUserIdOperationCompleted, userState);
        }
        
        private void OnsetOrModifySecondaryPortalRolesForGivenUserIdOperationCompleted(object arg) {
            if ((this.setOrModifySecondaryPortalRolesForGivenUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setOrModifySecondaryPortalRolesForGivenUserIdCompleted(this, new setOrModifySecondaryPortalRolesForGivenUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://www.ncl.ac.uk/BBUserWebService", ResponseNamespace="http://www.ncl.ac.uk/BBUserWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string setOrModifySecondaryPortalRolesForGivenUserIdXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string pwd, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userId, [System.Xml.Serialization.XmlElementAttribute("roles", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] roles) {
            object[] results = this.Invoke("setOrModifySecondaryPortalRolesForGivenUserIdXML", new object[] {
                        pwd,
                        userId,
                        roles});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setOrModifySecondaryPortalRolesForGivenUserIdXMLAsync(string pwd, string userId, string[] roles) {
            this.setOrModifySecondaryPortalRolesForGivenUserIdXMLAsync(pwd, userId, roles, null);
        }
        
        /// <remarks/>
        public void setOrModifySecondaryPortalRolesForGivenUserIdXMLAsync(string pwd, string userId, string[] roles, object userState) {
            if ((this.setOrModifySecondaryPortalRolesForGivenUserIdXMLOperationCompleted == null)) {
                this.setOrModifySecondaryPortalRolesForGivenUserIdXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetOrModifySecondaryPortalRolesForGivenUserIdXMLOperationCompleted);
            }
            this.InvokeAsync("setOrModifySecondaryPortalRolesForGivenUserIdXML", new object[] {
                        pwd,
                        userId,
                        roles}, this.setOrModifySecondaryPortalRolesForGivenUserIdXMLOperationCompleted, userState);
        }
        
        private void OnsetOrModifySecondaryPortalRolesForGivenUserIdXMLOperationCompleted(object arg) {
            if ((this.setOrModifySecondaryPortalRolesForGivenUserIdXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setOrModifySecondaryPortalRolesForGivenUserIdXMLCompleted(this, new setOrModifySecondaryPortalRolesForGivenUserIdXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3654")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncl.ac.uk/BBUserWebService")]
    public partial class userDetails : bbWsDataDetails {
        
        private string batchUidField;
        
        private string birthDateField;
        
        private string businessFaxField;
        
        private string businessPhone1Field;
        
        private string businessPhone2Field;
        
        private string cardNumberField;
        
        private string cdRomDriveMacField;
        
        private string cdRomDrivePCField;
        
        private string cityField;
        
        private string companyField;
        
        private string countryField;
        
        private string countyField;
        
        private string dataSourceBbIdField;
        
        private string departmentField;
        
        private string educationLevelField;
        
        private string emailAddressField;
        
        private string familyNameField;
        
        private string genderField;
        
        private string givenNameField;
        
        private string homeFaxField;
        
        private string homePhone1Field;
        
        private string homePhone2Field;
        
        private string isAvailableField;
        
        private string isInfoPublicField;
        
        private string jobTitleField;
        
        private string lastLoginField;
        
        private string localeField;
        
        private string middleNameField;
        
        private string mobilePhoneField;
        
        private string modifiedDateField;
        
        private string passwordField;
        
        private string portalRoleIdField;
        
        private string portalRoleNameField;
        
        private string postCodeField;
        
        private string showAddContactInfoField;
        
        private string showAddressInfoField;
        
        private string showEmailInfoField;
        
        private string showWorkInfoField;
        
        private string street1Field;
        
        private string street2Field;
        
        private string studentIdField;
        
        private string systemRoleField;
        
        private string systemRoleIdField;
        
        private string titleField;
        
        private string userNameField;
        
        private string webPageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string batchUid {
            get {
                return this.batchUidField;
            }
            set {
                this.batchUidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string birthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string businessFax {
            get {
                return this.businessFaxField;
            }
            set {
                this.businessFaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string businessPhone1 {
            get {
                return this.businessPhone1Field;
            }
            set {
                this.businessPhone1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string businessPhone2 {
            get {
                return this.businessPhone2Field;
            }
            set {
                this.businessPhone2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cdRomDriveMac {
            get {
                return this.cdRomDriveMacField;
            }
            set {
                this.cdRomDriveMacField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cdRomDrivePC {
            get {
                return this.cdRomDrivePCField;
            }
            set {
                this.cdRomDrivePCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string city {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string county {
            get {
                return this.countyField;
            }
            set {
                this.countyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dataSourceBbId {
            get {
                return this.dataSourceBbIdField;
            }
            set {
                this.dataSourceBbIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string educationLevel {
            get {
                return this.educationLevelField;
            }
            set {
                this.educationLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string emailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string familyName {
            get {
                return this.familyNameField;
            }
            set {
                this.familyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string givenName {
            get {
                return this.givenNameField;
            }
            set {
                this.givenNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string homeFax {
            get {
                return this.homeFaxField;
            }
            set {
                this.homeFaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string homePhone1 {
            get {
                return this.homePhone1Field;
            }
            set {
                this.homePhone1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string homePhone2 {
            get {
                return this.homePhone2Field;
            }
            set {
                this.homePhone2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string isAvailable {
            get {
                return this.isAvailableField;
            }
            set {
                this.isAvailableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string isInfoPublic {
            get {
                return this.isInfoPublicField;
            }
            set {
                this.isInfoPublicField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string jobTitle {
            get {
                return this.jobTitleField;
            }
            set {
                this.jobTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string lastLogin {
            get {
                return this.lastLoginField;
            }
            set {
                this.lastLoginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                this.localeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string middleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string modifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string portalRoleId {
            get {
                return this.portalRoleIdField;
            }
            set {
                this.portalRoleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string portalRoleName {
            get {
                return this.portalRoleNameField;
            }
            set {
                this.portalRoleNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string postCode {
            get {
                return this.postCodeField;
            }
            set {
                this.postCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string showAddContactInfo {
            get {
                return this.showAddContactInfoField;
            }
            set {
                this.showAddContactInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string showAddressInfo {
            get {
                return this.showAddressInfoField;
            }
            set {
                this.showAddressInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string showEmailInfo {
            get {
                return this.showEmailInfoField;
            }
            set {
                this.showEmailInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string showWorkInfo {
            get {
                return this.showWorkInfoField;
            }
            set {
                this.showWorkInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string street1 {
            get {
                return this.street1Field;
            }
            set {
                this.street1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string street2 {
            get {
                return this.street2Field;
            }
            set {
                this.street2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string studentId {
            get {
                return this.studentIdField;
            }
            set {
                this.studentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemRole {
            get {
                return this.systemRoleField;
            }
            set {
                this.systemRoleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string systemRoleId {
            get {
                return this.systemRoleIdField;
            }
            set {
                this.systemRoleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string webPage {
            get {
                return this.webPageField;
            }
            set {
                this.webPageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(role))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(userDetails))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3654")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncl.ac.uk/BBUserWebService")]
    public abstract partial class bbWsDataDetails {
        
        private string bbIdField;
        
        private string bbWsBoolResultField;
        
        private bbWsDataLogRecord[] bbWsDataLogField;
        
        private string bbWsTextResultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bbId {
            get {
                return this.bbIdField;
            }
            set {
                this.bbIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bbWsBoolResult {
            get {
                return this.bbWsBoolResultField;
            }
            set {
                this.bbWsBoolResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("bbWsDataLog", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public bbWsDataLogRecord[] bbWsDataLog {
            get {
                return this.bbWsDataLogField;
            }
            set {
                this.bbWsDataLogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bbWsTextResult {
            get {
                return this.bbWsTextResultField;
            }
            set {
                this.bbWsTextResultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3654")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncl.ac.uk/BBUserWebService")]
    public partial class bbWsDataLogRecord {
        
        private string apiPassField;
        
        private string apiUsedField;
        
        private string bbValueField;
        
        private string dateTimeField;
        
        private string fieldNameField;
        
        private string messageField;
        
        private string recordIdField;
        
        private string severityLevelField;
        
        private string valueField;
        
        private string wsValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string apiPass {
            get {
                return this.apiPassField;
            }
            set {
                this.apiPassField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string apiUsed {
            get {
                return this.apiUsedField;
            }
            set {
                this.apiUsedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string bbValue {
            get {
                return this.bbValueField;
            }
            set {
                this.bbValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string dateTime {
            get {
                return this.dateTimeField;
            }
            set {
                this.dateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string recordId {
            get {
                return this.recordIdField;
            }
            set {
                this.recordIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string severityLevel {
            get {
                return this.severityLevelField;
            }
            set {
                this.severityLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string wsValue {
            get {
                return this.wsValueField;
            }
            set {
                this.wsValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3654")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://jaxb.dev.java.net/array")]
    public partial class stringArray {
        
        private string[] itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3654")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ncl.ac.uk/BBUserWebService")]
    public partial class role : bbWsDataDetails {
        
        private string roleIdField;
        
        private string roleNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string roleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string roleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void addUserCompletedEventHandler(object sender, addUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void addDefaultStudentCompletedEventHandler(object sender, addDefaultStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDefaultStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDefaultStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void addDefaultStudentXMLCompletedEventHandler(object sender, addDefaultStudentXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDefaultStudentXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDefaultStudentXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void addUserXMLCompletedEventHandler(object sender, addUserXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addUserXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addUserXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deleteUserByUserBbIdCompletedEventHandler(object sender, deleteUserByUserBbIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserByUserBbIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserByUserBbIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deleteUserByUserBbIdXMLCompletedEventHandler(object sender, deleteUserByUserBbIdXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserByUserBbIdXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserByUserBbIdXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deleteUserByUserIdCompletedEventHandler(object sender, deleteUserByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deleteUserByUserIdXMLCompletedEventHandler(object sender, deleteUserByUserIdXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserByUserIdXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteUserByUserIdXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void doesUserExistCompletedEventHandler(object sender, doesUserExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doesUserExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doesUserExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void doesUserExistXMLCompletedEventHandler(object sender, doesUserExistXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doesUserExistXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doesUserExistXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllUserIDsNoDetailsCompletedEventHandler(object sender, getAllUserIDsNoDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllUserIDsNoDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllUserIDsNoDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllUserIDsNoDetailsWithNamedElementsCompletedEventHandler(object sender, getAllUserIDsNoDetailsWithNamedElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllUserIDsNoDetailsWithNamedElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllUserIDsNoDetailsWithNamedElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getAllUserIDsNoDetailsXMLCompletedEventHandler(object sender, getAllUserIDsNoDetailsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllUserIDsNoDetailsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllUserIDsNoDetailsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getEnrolledStudentsForGivenCourseIDWithNamedElementsCompletedEventHandler(object sender, getEnrolledStudentsForGivenCourseIDWithNamedElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEnrolledStudentsForGivenCourseIDWithNamedElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEnrolledStudentsForGivenCourseIDWithNamedElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getEnrolledStudentsForGivenCourseIDXMLCompletedEventHandler(object sender, getEnrolledStudentsForGivenCourseIDXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEnrolledStudentsForGivenCourseIDXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEnrolledStudentsForGivenCourseIDXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getEnrolledUserDetailsForGivenCourseWithNamedElementsCompletedEventHandler(object sender, getEnrolledUserDetailsForGivenCourseWithNamedElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEnrolledUserDetailsForGivenCourseWithNamedElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEnrolledUserDetailsForGivenCourseWithNamedElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userDetails[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userDetails[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getEnrolledUserDetailsForGivenCourseXMLCompletedEventHandler(object sender, getEnrolledUserDetailsForGivenCourseXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEnrolledUserDetailsForGivenCourseXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEnrolledUserDetailsForGivenCourseXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getEnrolledUsersForGivenCourseCompletedEventHandler(object sender, getEnrolledUsersForGivenCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEnrolledUsersForGivenCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEnrolledUsersForGivenCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getEnrollmentsByBatchUIDandCourseIDPatternCompletedEventHandler(object sender, getEnrollmentsByBatchUIDandCourseIDPatternCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEnrollmentsByBatchUIDandCourseIDPatternCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEnrollmentsByBatchUIDandCourseIDPatternCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getSecondaryPortalRolesForGivenUserIdCompletedEventHandler(object sender, getSecondaryPortalRolesForGivenUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSecondaryPortalRolesForGivenUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSecondaryPortalRolesForGivenUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getSecondaryPortalRolesForGivenUserIdWithNamedElementsCompletedEventHandler(object sender, getSecondaryPortalRolesForGivenUserIdWithNamedElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSecondaryPortalRolesForGivenUserIdWithNamedElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSecondaryPortalRolesForGivenUserIdWithNamedElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getSecondaryPortalRolesForGivenUserIdXMLCompletedEventHandler(object sender, getSecondaryPortalRolesForGivenUserIdXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSecondaryPortalRolesForGivenUserIdXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSecondaryPortalRolesForGivenUserIdXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getSecondarySystemRolesForGivenUserIdCompletedEventHandler(object sender, getSecondarySystemRolesForGivenUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSecondarySystemRolesForGivenUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSecondarySystemRolesForGivenUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getSecondarySystemRolesForGivenUserIdWithNamedElementsCompletedEventHandler(object sender, getSecondarySystemRolesForGivenUserIdWithNamedElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSecondarySystemRolesForGivenUserIdWithNamedElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSecondarySystemRolesForGivenUserIdWithNamedElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getSecondarySystemRolesForGivenUserIdXMLCompletedEventHandler(object sender, getSecondarySystemRolesForGivenUserIdXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSecondarySystemRolesForGivenUserIdXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSecondarySystemRolesForGivenUserIdXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getUserDetailsCompletedEventHandler(object sender, getUserDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public stringArray[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((stringArray[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getUserDetailsWithNamedElementsCompletedEventHandler(object sender, getUserDetailsWithNamedElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserDetailsWithNamedElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserDetailsWithNamedElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public userDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((userDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getUserDetailsXMLCompletedEventHandler(object sender, getUserDetailsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserDetailsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserDetailsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getUserRoleInCourseCompletedEventHandler(object sender, getUserRoleInCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserRoleInCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserRoleInCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getUserRoleInCourseWithNamedElementsCompletedEventHandler(object sender, getUserRoleInCourseWithNamedElementsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserRoleInCourseWithNamedElementsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserRoleInCourseWithNamedElementsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public role Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((role)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getUserRoleInCourseXMLCompletedEventHandler(object sender, getUserRoleInCourseXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserRoleInCourseXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserRoleInCourseXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void isUserInCourseCompletedEventHandler(object sender, isUserInCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isUserInCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isUserInCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void isUserInCourseXMLCompletedEventHandler(object sender, isUserInCourseXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isUserInCourseXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isUserInCourseXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void setOrModifySecondaryPortalRolesForGivenUserIdCompletedEventHandler(object sender, setOrModifySecondaryPortalRolesForGivenUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setOrModifySecondaryPortalRolesForGivenUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setOrModifySecondaryPortalRolesForGivenUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void setOrModifySecondaryPortalRolesForGivenUserIdXMLCompletedEventHandler(object sender, setOrModifySecondaryPortalRolesForGivenUserIdXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setOrModifySecondaryPortalRolesForGivenUserIdXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setOrModifySecondaryPortalRolesForGivenUserIdXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591