<%@ Page Language="C#" %>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
        <title>C#.NET Page</title>
    </head>
    <body>
<%
    //Author: Andrew.Martin@ncl.ac.uk

    try
    {
        //bbgrpws is my chosen webreference name
        bbgrpws.BBGroupWebServiceService ws = new bbgrpws.BBGroupWebServiceService();
        //If you have passwords enabled on the webservice methods, insert it here...
        String wsPassword = "";

	    //Our details for a new Group, feel free to change...

	    //You'll probably need to change the courseId
        String courseId = "WEBSERVICE_Testcourse0001";
	    String title = "WS-TEST-GROUP101";
	    String description = "A Webservice created test group";

	    //Allows you to specify what format of description you're
	    //entering, possible values are: HTML / PLAIN_TEXT / SMART_TEXT
	    String descType = "PLAIN_TEXT";
    	
	    //Decide if you want the whole group and it's sub-functionalities
	    //(for the want of a better word), to be available or not.
	    bool available = true;
	    bool chatAvlble = false;
	    bool discBoardAvlble = true;
	    bool emailAvlble = true;
	    bool transferAvlble = false;

	    bbgrpws.stringArray[] returnStringArray = null;
	    String returnString = "";

	    //****Add a group****
	    returnString = ws.addGroupToGivenCourse(wsPassword,courseId,title,description,descType,available,true,chatAvlble,true,discBoardAvlble,true,emailAvlble,true,transferAvlble,true);
%>
    Adding group.... <%= returnString %><br />
<%
	    /******************/        
        
 	    //****Get all group details or your course****
	    returnStringArray = ws.getGroupDetailsForGivenCourseId(wsPassword,courseId,true,true);
%>
    <hr />Groups found in course... <%= returnStringArray.Length-1 %><br />
<%
        bbgrpws.stringArray keys = (bbgrpws.stringArray)returnStringArray.GetValue(0);
        bbgrpws.stringArray values = null;

        for (int i = 1; i < returnStringArray.Length; i++)
        {
%>
--------<br />
<%
            values = (bbgrpws.stringArray)returnStringArray.GetValue(i);

            for (int inc = 0; inc < keys.item.Length; inc++)
            {
%>
                <%= keys.item.GetValue(inc)%> : <%= values.item.GetValue(inc)%> <br />
<%
            }
        }
        /******************/

	    //****Modify a group****
	    //Get the group Id for the newly created group
        String groupId = "";
        for (int i = 1; i < returnStringArray.Length; i++)
        {
            values = (bbgrpws.stringArray)returnStringArray.GetValue(i);

            if (values.item.GetValue(1).ToString().Equals(title,StringComparison.CurrentCultureIgnoreCase))
            {
                groupId = values.item.GetValue(0).ToString();
                break;
            }
        }
        title = "Changed title";
	    description = "<h2>Changed description</h2>";
	    descType = "HTML";
	    available = true;
	    chatAvlble = true;
	    discBoardAvlble = false;
	    emailAvlble = false;
	    transferAvlble = true;
	    returnString = ws.modifyGroup(wsPassword,groupId,title,description,descType,available,true,chatAvlble,true,discBoardAvlble,true,emailAvlble,true,transferAvlble,true);
%>
        <hr />Modifying group... <%= returnString %><br />
<%
	    /******************/

        //****Get a specific group's details from it's group Id
	    returnStringArray = ws.getGroupDetailsForGivenGroupBbId(wsPassword,groupId,true,true);
%>
        <hr />Modified group...<br />
<%
        keys = (bbgrpws.stringArray)returnStringArray.GetValue(0);
        values = null;

        for (int i = 1; i < returnStringArray.Length; i++)
        {
%>
--------<br />
<%
            values = (bbgrpws.stringArray)returnStringArray.GetValue(i);

            for (int inc = 0; inc < keys.item.Length; inc++)
            {
%>
                <%= keys.item.GetValue(inc)%> : <%= values.item.GetValue(inc)%> <br />
<%
            }
        }
	    /******************/

	    //****Add a user to a group
	    //Make sure this user belongs to the course the group is in
	    String userId = "administrator";
	    returnString = ws.addGivenUserToGivenGroup(wsPassword,userId,groupId);
    %>
        <hr />Adding user to group... <%= returnString %><br />
    <%
	    /******************/

	    //****Get all group members for a particular group
	    String[] members = ws.getGroupMembersForGivenGroupBbId(wsPassword,groupId);
    %>
        <hr />Group Members for specified group...<br />
    <%
	    for(int i=0; i<members.Length; i++)
	    {
    %>
	        <%= members.GetValue(i) %>
    <%
	    }
	    /******************/

	    //Delete a user from a group - this doesn't delete
	    // user or the group, JUST the relationship
	    //Uncomment if you want...
	    //returnString = ws.deleteGivenUserFromGivenGroup(userId,groupId);
    %>
        <!--<hr />Deleting user from group... <%= returnString %><br />-->
    <%
	    /******************/

	    //Delete a specific group
	    //Uncomment if you want...
	    //returnString = ws.deleteGroup(groupId);
    %>
        <!--<hr />Deleting group... <%= returnString %><br />-->
    <%
	    /******************/
    }
    catch (Exception e)
    {
%>
	    <%= "Error: "+e.ToString() %>
<%
    }
%>
    </body>
</html>